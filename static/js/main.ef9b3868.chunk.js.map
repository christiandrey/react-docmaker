{"version":3,"sources":["../../src/core/constants/index.ts","../../src/core/utils/index.ts","../../src/core/tools/index.ts","../../src/modules/button/index.tsx","../../src/modules/header/index.tsx","../../src/core/contexts/orphan-nodes.ts","../../src/modules/template-editor/index.tsx","../../src/modules/elements/image/index.tsx","../../src/modules/elements/editable/index.tsx","../../src/modules/template-element/index.tsx","../../src/modules/template-leaf/index.tsx","../../src/core/hooks/index.ts","../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/modules/icon/index.tsx","../../src/modules/popup/content/index.tsx","../../src/modules/popup/index.tsx","../../src/modules/popups/image/index.tsx","../../src/modules/popups/color/index.tsx","../../src/modules/field/index.tsx","../../src/modules/popups/condition/index.tsx","../../src/modules/segmented-control/index.tsx","../../src/modules/popups/editable/copy-existing/index.tsx","../../src/modules/switch/index.tsx","../../src/modules/popups/editable/create-new/index.tsx","../../src/modules/popups/editable/index.tsx","../../src/modules/icon-button/index.tsx","../../src/modules/icon-group/index.tsx","../../src/modules/popups/image-size/index.tsx","../../src/modules/popups/orphan-nodes/index.tsx","../../src/modules/popups/text-size/index.tsx","../../src/modules/toolbar/index.tsx","../../src/core/plugins/paste-html.ts","../../src/index.tsx","../../src/core/plugins/editable.ts","App.tsx","index.tsx"],"names":["LIST_TYPES","HOT_KEYS","mod+b","mod+i","mod+u","mod+shift+x","PRESET_COLORS","EDITABLE_DATA_TYPES","text","options","radio","date","time","DATE_FORMATS","TIME_FORMATS","nil","value","notNil","clamp","min","max","Math","parseNumber","parsed","parseFloat","isNaN","formatDate","dateTime","token","format","Date","error","isHexColor","test","areEqualColors","left","right","replace","toLowerCase","generateUUID","uuidv4","isBlockActive","editor","Editor","nodes","match","n","isEditor","SlateElement","isElement","type","isMarkActive","marks","nodesInSelection","getMatchingNodesInSelection","o","isInline","editableNodes","marksResolution","editablesResolution","includes","length","map","every","getColorMark","marksValue","color","editablesValue","toggleMarkActive","removeMark","Transforms","unsetNodes","isVoid","setNodes","hanging","addMark","toggleColorMarkActive","existingMark","toggleBlockActive","unwrapNodes","split","isList","wrapNodes","children","focusEditor","ReactEditor","focus","composeWithClassName","attributes","className","classnames","composeWithAlignmentClassName","alignment","text-right","text-center","text-justify","composeWithStyle","style","getCurrentNode","selection","anchor","parentNode","path","getIndentation","currentNode","indentation","getIndentationPercent","composeWithEditable","editable","id","createEditableNode","isOrphan","editableNode","insertImageBlock","dimensions","label","imageNode","url","width","height","dataType","insertNodes","move","getEditableAttributes","showTip","dateTimeFormat","multiline","tip","valueRef","parsedAttributes","defaultValue","getEditableAttributesValidity","copyExisting","getMatchingNodes","node","matching","push","generator","Array","from","Button","memo","disabled","React","onClick","onPress","bg-blue-500","pointer-events-none bg-blue-300","h-40","Header","title","createdAt","onChangeTitle","onPressSave","editorRef","useRef","state","ContentEditable","innerRef","placeholder","html","current","onChange","event","target","innerHTML","onBlur","formatRelative","toUpperCase","substr","OrphanNodesContext","createContext","TemplateEditor","ImageElement","element","selected","useSelected","focused","useFocused","useMemo","src","shadow-outline","EditableElement","useEffect","fontSize","contentEditable","TemplateElement","paddingLeft","href","TemplateLeaf","leaf","bold","code","italic","underline","strikethrough","bg-green-highlight","ref","usePopupUtils","initialOpen","useState","visible","setVisible","handleOpen","useCallback","handleClose","handleToggle","open","close","toggle","useEditor","useSlate","useMouseDown","fn","e","preventDefault","useOrphanNodes","useContext","Symbol","iterator","asyncIterator","Icon","handlePress","onMouseDown","s-16","Children","child","cloneElement","props","Content","onLayoutUpdate","x","y","position","hideArrow","setDimensions","useLayoutEffect","document","querySelector","css","container","getBoundingClientRect","computedDimensions","JSON","stringify","composedClassName","arrow","top","defaultProps","getViewportWidth","window","innerWidth","documentElement","clientWidth","body","getViewportHeight","innerHeight","clientHeight","getPositioningWithoutAnchor","viewportWidth","viewportHeight","Popup","anchorRef","contentClassName","transparent","distance","offsets","isVisible","overlayCloseOnClick","onRequestClose","popupContentPosition","setPopupContentPosition","handleClickOverlay","handleKeyUp","key","addEventListener","removeEventListener","contentPosition","anchorElement","anchorWidth","anchorHeight","anchorX","anchorY","yOffset","rightEdge","bottomEdge","ImagePopup","onSubmitEditing","imageState","setImageState","scaleState","setScaleState","imageDimensions","setImageDimensions","decimalScale","handleChangeImageUrl","handleChangeScale","handleBlurImageInput","recover","result","Promise","resolve","img","createElement","onload","naturalWidth","naturalHeight","onerror","then","handleRequestClose","handlePressSubmit","BiLink","maxLength","ColorBox","active","ColorPopup","onChangeColorOption","colorState","setColorState","handlePressColorOption","option","selectedColor","replaceAll","handleChangeInput","inputValue","parsedColor","Field","ConditionPopup","orphanNodes","concat","parent","setParent","setValue","find","isValid","handleChangeParent","handleChangeValue","hidden","SegmentedControl","onChangeValue","i","text-gray-500 hover:text-gray-700","text-white","index","EditableCopyExisting","onSubmit","setValueRef","setDefaultValue","handleChangeValueRef","handleChangeDefaultValue","data","Switch","ReactSwitch","checked","offColor","onColor","checkedIcon","uncheckedIcon","handleDiameter","activeBoxShadow","EditableCreateNew","now","dataTypeOptions","Object","entries","dateFormatOptions","timeFormatOptions","setDataType","setDateTimeFormat","setLabel","setMultiline","setOptions","editingOption","setEditingOption","setShowTip","setIsOrphan","setTip","handlePressDeleteOption","eventualValue","findIndex","splice","handlePressAddOption","trim","groundValue","handleEditingOptionKeydown","handleChangeDataType","handleChangeDateTimeFormat","handleChangeEditingOption","handleChangeLabel","handleChangeTip","FaRegTrashAlt","onKeyDown","AiFillPlusCircle","EditablePopupProps","segment","setSegment","handleSubmit","IconButton","forwardRef","text-blue-500 bg-blue-highlight","pointer-events-none opacity-50","IconGroup","ImageSizePopup","setWidth","setHeight","handleChangeWidth","handleChangeHeight","TiTimes","OrphanNodesPopup","setOrphanNodes","handlePressDelete","FiInbox","TextSizeOption","TextSizePopup","onPressOption","handlePressOption","Toolbar","editorSelection","textSizePopupAnchorRef","colorPopupAnchorRef","imagePopupAnchorRef","imageSizePopupAnchorRef","conditionPopupAnchorRef","orphanNodesPopupAnchorRef","textSizePopup","colorPopup","imagePopup","imageSizePopup","editablePopup","conditionPopup","orphanNodesPopup","textSizeValue","headingOneActive","headingTwoActive","headingThreeActive","name","leafColorValue","alignmentValue","canUndo","history","_editor$history","undos","canRedo","_editor$history2","redos","conditionActive","handleChangeTextSizeOption","prevValue","handleChangeColorOption","select","handleCreateImage","handleCreateEditableImage","handleCreateEditable","handleSetConditionActive","condition","handlePressTextSize","handlePressColor","handlePressImage","handlePressEditableImage","handlePressInsertEditable","handlePressCondition","handlePressInlineFormat","handlePressAlignment","handlePressIncreaseIndentation","handlePressDecreaseIndentation","handlePressNumberedList","handlePressBulletedList","handlePressUndo","HistoryEditor","undo","handlePressRedo","redo","Fragment","MdFormatSize","bg-black","backgroundColor","MdFormatBold","MdFormatItalic","MdFormatUnderlined","MdFormatStrikethrough","MdFormatAlignLeft","MdFormatAlignCenter","MdFormatAlignRight","MdFormatAlignJustify","MdFormatIndentDecrease","MdFormatIndentIncrease","MdFormatListNumbered","MdFormatListBulleted","RiImage2Fill","RiImageEditFill","MdTextFields","MdTransform","GrUndo","GrRedo","ELEMENT_TAGS","A","getAttribute","BLOCKQUOTE","H1","H2","H3","H4","H5","H6","IMG","LI","OL","P","PRE","UL","TEXT_TAGS","CODE","DEL","EM","I","S","STRONG","U","DocmakerEditor","onSubmitChanges","initialData","initialValue","insertData","getData","rtf","console","log","fragment","deserializeHTML","el","nodeType","textContent","nodeName","childNodes","flat","jsx","attrs","DOMParser","parseFromString","insertFragment","withReact","withHistory","createEditor","toISOString","setTitle","orphans","editorState","setEditorState","renderElement","renderLeaf","handleEditorKeydown","hotkey","isHotkey","handlePressSave","Provider","Slate","Editable","spellCheck","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ef9b3868.chunk.js","sourcesContent":["export const LIST_TYPES = ['numbered-list', 'bulleted-list']\n\nexport const HOT_KEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+shift+x': 'strikethrough'\n}\n\nexport const PRESET_COLORS = [\n  '#FF6900',\n  '#FCB900',\n  '#7BDCB5',\n  '#00D084',\n  '#8ED1FC',\n  '#326FF3',\n  '#ABB8C3',\n  '#EB144C',\n  '#F78DA7',\n  '#9900EF'\n]\n\nexport const ALIGNMENTS = {\n  left: 'left',\n  right: 'right',\n  center: 'center',\n  justify: 'justify'\n}\n\nexport const INDENTATION_FACTOR = 3\n\nexport const EDITABLE_DATA_TYPES = {\n  text: 'Text',\n  options: 'Dropdown',\n  radio: 'Radio',\n  date: 'Date',\n  time: 'Time'\n}\n\nexport const DATE_FORMATS = [\n  'do MMMM, yyyy',\n  'dd MMMM, yyyy',\n  'MMMM dd, yyyy',\n  'dd/MM/yyyy',\n  'MM/dd/yyyy',\n  'MMM d, yyyy',\n  'dd MMM, yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy'\n]\n\nexport const TIME_FORMATS = ['hh:mm a', 'hh:mm aaaa', 'HH:mm']\n","import format from 'date-fns/format'\nimport formatRelative from 'date-fns/formatRelative'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport type ValidDate = Date | string | number\n\nexport type ImageDimensions = {\n  width: number\n  height: number\n}\n\n// ----------------------------------------------------------------\n// UTILITY\n// ----------------------------------------------------------------\n\nexport function nil<T>(value: T): boolean {\n  return typeof value === 'undefined' || value === null\n}\n\nexport function notNil<T>(value: T): boolean {\n  return !nil(value)\n}\n\nexport function getImageSizeAsync(url: string): Promise<ImageDimensions> {\n  if (!url) {\n    return null\n  }\n\n  return new Promise((resolve) => {\n    const img = document.createElement('img')\n\n    img.onload = () => {\n      resolve({ width: img.naturalWidth, height: img.naturalHeight })\n    }\n\n    img.onerror = () => {\n      resolve(null)\n    }\n\n    img.src = url\n  })\n}\n\n// ----------------------------------------------------------------\n// NUMBER\n// ----------------------------------------------------------------\nexport function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max)\n}\n\nexport function parseNumber(value: string): number {\n  if (nil(value)) {\n    return null\n  }\n\n  const parsed = parseFloat(value)\n  return isNaN(parsed) ? 0 : parsed\n}\n\n// ----------------------------------------------------------------\n// DATETIME\n// ----------------------------------------------------------------\n\nexport function fromNow(dateTime: ValidDate): string {\n  return formatRelative(new Date(dateTime), new Date())\n}\n\nexport function formatDate(dateTime: ValidDate, token = 'yyyy-MM-dd'): string {\n  if (nil(dateTime)) return undefined\n\n  try {\n    return format(\n      dateTime instanceof Date ? dateTime : new Date(dateTime),\n      token\n    )\n  } catch (error) {\n    return undefined\n  }\n}\n\nexport function toDate(dateTime: ValidDate): Date {\n  if (!dateTime) {\n    return new Date()\n  }\n\n  return dateTime instanceof Date ? dateTime : new Date(dateTime)\n}\n\n// ----------------------------------------------------------------\n// STRING\n// ----------------------------------------------------------------\n\nexport function toTitleCase(text: string) {\n  if (nil(text)) {\n    return text\n  }\n  return `${text[0]?.toUpperCase()}${text?.substr(1).toLowerCase()}`\n}\n\nexport function toCapitalizedFirst(text: string) {\n  if (nil(text)) {\n    return text\n  }\n  return `${text[0]?.toUpperCase()}${text?.substr(1)}`\n}\n\nexport function stripHTMLEntities(text: string) {\n  return text\n    ?.replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/\"/g, '&nbsp;')\n}\n\nexport function isHexColor(text: string) {\n  return /^#([0-9A-F]{3}){1,2}$/i.test(text)\n}\n\nexport function areEqualColors(left: string, right: string) {\n  left = left?.replace(/^#/gi, '')?.toLowerCase()\n  right = right?.replace(/^#/gi, '')?.toLowerCase()\n\n  return left === right\n}\n\nexport function getPlaceholderImage(width: number, height?: number) {\n  return `https://dummyimage.com/${width}x${height || width}/326FF3/FFFFFF`\n}\n\nexport function generateUUID() {\n  return uuidv4()\n}\n","import { Editor, Node, Element as SlateElement, Transforms } from 'slate'\nimport { INDENTATION_FACTOR, LIST_TYPES } from '../constants'\nimport { areEqualColors, clamp, generateUUID, nil, notNil } from '../utils'\n\nimport { CSSProperties } from 'react'\nimport { HistoryEditor } from 'slate-history'\nimport { ImageElementType } from '../../modules/elements/image'\nimport { ImageProps } from '../../modules/popups/image'\nimport { ReactEditor } from 'slate-react'\nimport classnames from 'classnames'\n\nexport type BlockAlignment = 'left' | 'center' | 'right' | 'justify'\n\nexport type LeafFormatType =\n  | 'bold'\n  | 'code'\n  | 'italic'\n  | 'underline'\n  | 'strikethrough'\n  | 'color'\n  | 'ref'\n\nexport type HeadingFormatType = 'heading-one' | 'heading-two' | 'heading-three'\n\nexport type ListFormatType = 'numbered-list' | 'bulleted-list'\n\nexport type QuoteFormatType = 'block-quote'\n\nexport type ElementFormatType =\n  | HeadingFormatType\n  | ListFormatType\n  | QuoteFormatType\n\nexport type SlateEditorType = Editor & ReactEditor & HistoryEditor\n\nexport type EditableElementType<T> = {\n  id?: string\n  editable?: true\n} & T\n\nexport type EditableDataType =\n  | 'text'\n  | 'options'\n  | 'radio'\n  | 'time'\n  | 'date'\n  | 'image'\n\nexport type EditableOption = {\n  id: string\n  label: string\n}\n\nexport type EditableRefAttributes = {\n  parent: string\n  value: string\n}\n\nexport type EditableAttributes = Partial<{\n  dataType: EditableDataType\n  dateTimeFormat: string\n  defaultValue: string\n  label: string\n  multiline: boolean\n  options: Array<EditableOption>\n  tip: string\n  valueRef: string\n  ref: EditableRefAttributes\n  isOrphan: boolean\n  children: Array<EditableAttributes & { text: string }>\n}>\n\nexport type DocmakerNode = EditableElementType<\n  EditableAttributes & { text: string }\n>\n\nexport type DocmakerData = Partial<{\n  title: string\n  createdAt: string\n  nodes: Array<DocmakerNode>\n  orphans: Array<DocmakerNode>\n}>\n\nexport function isBlockActive(\n  editor: SlateEditorType,\n  format: ElementFormatType\n) {\n  const [match] = Editor.nodes(editor, {\n    match: (n) =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format\n  }) as any\n\n  return !!match\n}\n\nexport function isMarkActiveLegacy(\n  editor: SlateEditorType,\n  format: LeafFormatType\n) {\n  if (!editor) {\n    return null\n  }\n\n  const marks = Editor.marks(editor)\n\n  if (notNil(marks)) {\n    const value = marks[format]\n    return format === 'ref' ? notNil(value) : value === true\n  }\n\n  return false\n}\n\nexport function isMarkActive(editor: SlateEditorType, format: LeafFormatType) {\n  if (!editor) {\n    return null\n  }\n\n  const marks = Editor.marks(editor)\n  const nodesInSelection = getMatchingNodesInSelection(editor, (o) =>\n    Editor.isInline(editor, o)\n  )\n  const editableNodes = getMatchingNodesInSelection(\n    editor,\n    (o) => o.type === 'editable'\n  )\n\n  let marksResolution = false\n  let editablesResolution = false\n\n  if (notNil(marks)) {\n    const value = marks[format]\n    marksResolution = ['color', 'ref'].includes(format)\n      ? notNil(value)\n      : value === true\n  }\n\n  if (editableNodes?.length) {\n    editablesResolution = editableNodes\n      .map((o) =>\n        ['color', 'ref'].includes(format)\n          ? notNil(o[format])\n          : o[format] === true\n      )\n      .every((o) => o)\n  }\n\n  if (\n    nodesInSelection?.length &&\n    nodesInSelection.every((o) => editableNodes.includes(o))\n  ) {\n    return editablesResolution\n  }\n\n  return editableNodes?.length\n    ? editablesResolution && marksResolution\n    : marksResolution\n}\n\nexport function isColorMarkActive(editor: SlateEditorType) {\n  if (!editor) {\n    return null\n  }\n\n  const marks = Editor.marks(editor)\n  return marks ? notNil(marks.color) : false\n}\n\nexport function getColorMark(editor: SlateEditorType) {\n  if (!editor) {\n    return null\n  }\n\n  const marks = Editor.marks(editor)\n  const nodesInSelection = getMatchingNodesInSelection(editor, (o) =>\n    Editor.isInline(editor, o)\n  )\n  const editableNodes = getMatchingNodesInSelection(\n    editor,\n    (o) => o.type === 'editable'\n  )\n\n  const marksValue = marks?.color\n  let editablesValue = null\n\n  if (editableNodes?.length) {\n    editablesValue = editableNodes[0].color\n  }\n\n  if (\n    nodesInSelection?.length &&\n    nodesInSelection.every((o) => editableNodes.includes(o))\n  ) {\n    return editablesValue\n  }\n\n  return editableNodes?.length ? editablesValue : marksValue\n}\n\nexport function toggleMarkActiveLegacy(\n  editor: SlateEditorType,\n  format: LeafFormatType\n) {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}\n\nexport function toggleMarkActive(\n  editor: SlateEditorType,\n  format: LeafFormatType\n) {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n    Transforms.unsetNodes(editor, format, {\n      match: (o) => Editor.isVoid(editor, o) && o.type === 'editable'\n    })\n  } else {\n    Transforms.setNodes(\n      editor,\n      { [format]: true },\n      {\n        match: (o) => Editor.isVoid(editor, o) && o.type === 'editable',\n        hanging: true\n      }\n    )\n    Editor.addMark(editor, format, true)\n  }\n}\n\nexport function toggleColorMarkActive(editor: SlateEditorType, value?: string) {\n  const existingMark = getColorMark(editor)\n\n  if (notNil(existingMark) && areEqualColors(existingMark, value)) {\n    Editor.removeMark(editor, 'color')\n    Transforms.unsetNodes(editor, 'color', {\n      match: (o) => Editor.isVoid(editor, o) && o.type === 'editable'\n    })\n  } else {\n    Transforms.setNodes(\n      editor,\n      { color: value },\n      {\n        match: (o) => Editor.isVoid(editor, o) && o.type === 'editable',\n        hanging: true\n      }\n    )\n    Editor.addMark(editor, 'color', value)\n  }\n}\n\nexport function toggleBlockActive(\n  editor: SlateEditorType,\n  format: ElementFormatType\n) {\n  const isActive = isBlockActive(editor, format)\n\n  if (isActive) {\n    setBlockInactive(editor)\n    return\n  }\n\n  setBlockActive(editor, format)\n}\n\nexport function setBlockActive(\n  editor: SlateEditorType,\n  format: ElementFormatType\n) {\n  const isList = LIST_TYPES.includes(format)\n\n  Transforms.unwrapNodes(editor, {\n    match: (n) =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && (n.type as any)\n      ),\n    split: true\n  })\n\n  const newProperties: Partial<SlateElement> = {\n    type: isList ? 'list-item' : format\n  }\n\n  Transforms.setNodes(editor, newProperties)\n\n  if (isList) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}\n\nexport function setBlockInactive(editor: SlateEditorType) {\n  Transforms.unwrapNodes(editor, {\n    match: (n) =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && (n.type as any)\n      ),\n    split: true\n  })\n\n  const newProperties: Partial<SlateElement> = {\n    type: 'paragraph'\n  }\n\n  Transforms.setNodes(editor, newProperties)\n}\n\nexport function focusEditor(editor: SlateEditorType) {\n  ReactEditor.focus(editor as ReactEditor)\n}\n\nexport function composeWithClassName(attributes: any, className?: string) {\n  return {\n    ...attributes,\n    className: classnames(attributes?.className, className)\n  }\n}\n\nexport function composeWithAlignmentClassName(\n  attributes: any,\n  alignment?: BlockAlignment,\n  className?: string\n) {\n  return {\n    ...attributes,\n    className: classnames(attributes?.className, className, {\n      'text-right': alignment === 'right',\n      'text-center': alignment === 'center',\n      'text-justify': alignment === 'justify'\n    })\n  }\n}\n\nexport function composeWithStyle(attributes: any, style: CSSProperties = {}) {\n  return {\n    ...attributes,\n    style: { ...(attributes?.style || {}), ...style }\n  }\n}\n\nexport function getCurrentNode(editor: SlateEditorType) {\n  const selection = editor?.selection\n\n  if (selection !== null && selection.anchor !== null) {\n    const parentNode = editor.children[selection.anchor.path[0]]\n\n    if (LIST_TYPES.includes(parentNode?.type as BlockAlignment)) {\n      return parentNode.children[selection.anchor.path[1]]\n    }\n\n    return parentNode\n  } else {\n    return null\n  }\n}\n\nexport function getAlignment(editor: SlateEditorType): BlockAlignment {\n  const currentNode = getCurrentNode(editor) as any\n  return currentNode?.alignment\n}\n\nexport function setAlignment(editor: SlateEditorType, value?: BlockAlignment) {\n  const alignment = value === 'left' ? null : value\n  const newProperties: Partial<SlateElement> = {\n    alignment\n  }\n\n  Transforms.setNodes(editor, newProperties)\n}\n\nexport function getIndentation(editor: SlateEditorType): number {\n  const currentNode = getCurrentNode(editor) as any\n  return currentNode?.indentation\n}\n\nexport function getIndentationPercent(value: number): string {\n  if (!value) {\n    return null\n  }\n\n  return `${value}%`\n}\n\nexport function increaseIndentation(editor: SlateEditorType) {\n  const currentIndentation = getIndentation(editor) || 0\n  const indentation = clamp(currentIndentation + INDENTATION_FACTOR, 0, 99)\n  const newProperties: Partial<SlateElement> = {\n    indentation\n  }\n\n  Transforms.setNodes(editor, newProperties)\n}\n\nexport function decreaseIndentation(editor: SlateEditorType) {\n  const currentIndentation = getIndentation(editor) || 0\n  const indentation = clamp(currentIndentation - INDENTATION_FACTOR, 0, 99)\n  const newProperties: Partial<SlateElement> = {\n    indentation: indentation === 0 ? null : indentation\n  }\n\n  Transforms.setNodes(editor, newProperties)\n}\n\nexport function composeWithEditable<T extends object>(\n  attributes: T\n): EditableElementType<T> {\n  if (nil(attributes)) {\n    return null\n  }\n\n  return {\n    ...attributes,\n    editable: true,\n    id: generateUUID()\n  }\n}\n\nexport function createEditableNode(\n  attributes: EditableAttributes,\n  isOrphan = false\n) {\n  let editableNode: SlateElement & EditableAttributes = {\n    type: 'editable',\n    ...attributes,\n    children: [{ text: '' }]\n  }\n\n  if (isOrphan) {\n    editableNode.isOrphan = isOrphan\n  }\n\n  editableNode = composeWithEditable(editableNode)\n\n  return editableNode\n}\n\nexport function insertImageBlock(\n  editor: SlateEditorType,\n  attributes: ImageProps,\n  editable?: boolean\n) {\n  const {\n    url,\n    dimensions: { width, height },\n    label\n  } = attributes\n\n  let imageNode: SlateElement & ImageElementType = {\n    type: 'image',\n    url,\n    width,\n    height,\n    children: [{ text: '' }]\n  }\n\n  if (editable) {\n    imageNode.type = 'editable'\n    imageNode.dataType = 'image'\n    imageNode.label = label\n    imageNode = composeWithEditable(imageNode)\n  }\n\n  Transforms.insertNodes(editor, imageNode)\n  Transforms.move(editor)\n}\n\nexport function insertEditableBlock(\n  editor: SlateEditorType,\n  attributes: EditableAttributes\n) {\n  const editableNode = createEditableNode(attributes)\n\n  Transforms.insertNodes(editor, editableNode)\n  Transforms.move(editor)\n}\n\nexport function getEditableAttributes(\n  attributes: EditableAttributes,\n  showTip = false\n) {\n  const {\n    dataType,\n    dateTimeFormat,\n    multiline,\n    defaultValue,\n    label,\n    options,\n    tip,\n    valueRef\n  } = attributes\n\n  const parsedAttributes = {\n    dataType,\n    defaultValue\n  } as EditableAttributes\n\n  if (valueRef?.length) {\n    parsedAttributes.valueRef = valueRef\n    return parsedAttributes\n  }\n\n  if (showTip) {\n    parsedAttributes.tip = tip\n  }\n\n  if (dataType === 'text' && multiline) {\n    parsedAttributes.multiline = multiline\n  }\n\n  if (['options', 'radio'].includes(dataType)) {\n    parsedAttributes.options = options\n  }\n\n  if (['date', 'time'].includes(dataType)) {\n    parsedAttributes.dateTimeFormat = dateTimeFormat\n  }\n\n  parsedAttributes.label = label\n\n  return parsedAttributes\n}\n\nexport function getEditableAttributesValidity(\n  attributes: EditableAttributes,\n  showTip = false,\n  copyExisting = false\n): boolean {\n  const {\n    dataType,\n    dateTimeFormat,\n    defaultValue,\n    label,\n    options,\n    tip,\n    valueRef\n  } = attributes\n\n  if (copyExisting) {\n    return !!valueRef?.length && !!defaultValue?.length\n  }\n\n  if (\n    !dataType?.length ||\n    !defaultValue?.length ||\n    !label?.length ||\n    (showTip && !tip.length)\n  ) {\n    return false\n  }\n\n  if (['options', 'radio'].includes(dataType)) {\n    return !!options?.length\n  }\n\n  if (['date', 'time'].includes(dataType)) {\n    return !!dateTimeFormat?.length\n  }\n\n  return true\n}\n\nexport function getMatchingNodes(\n  node: Node,\n  match: (node: Node) => boolean = () => true,\n  matching: Array<Node> = []\n) {\n  if (match(node)) {\n    matching.push(node)\n  }\n\n  const children = node.children as Array<Node>\n\n  if (children?.length) {\n    for (const child of children) {\n      getMatchingNodes(child, match, matching)\n    }\n  }\n\n  return matching\n}\n\nexport function getMatchingNodesInSelection(\n  node: SlateEditorType,\n  match: (node: Node) => boolean = () => true\n) {\n  const generator = Editor.nodes(node, {\n    match\n  })\n\n  return Array.from(generator).map((o) => o[0])\n}\n\nexport function setConditionActive(\n  editor: SlateEditorType,\n  condition: EditableRefAttributes\n) {\n  Editor.addMark(editor, 'ref', condition)\n  Transforms.setNodes(\n    editor,\n    { ref: condition },\n    {\n      match: (o) => Editor.isVoid(editor, o) && o.type === 'editable'\n    }\n  )\n}\n\nexport function unsetConditionActive(editor: SlateEditorType) {\n  Editor.removeMark(editor, 'ref')\n  Transforms.unsetNodes(editor, 'ref', {\n    match: (o) => Editor.isVoid(editor, o) && o.type === 'editable'\n  })\n}\n","import React, { FC, memo, PropsWithChildren } from 'react'\nimport classnames from 'classnames'\n\ntype ButtonProps = PropsWithChildren<{\n  className?: string\n  disabled?: boolean\n  onPress?: Fn\n}>\n\nconst BaseButton: FC<ButtonProps> = ({\n  children,\n  className,\n  disabled,\n  onPress\n}) => {\n  return (\n    <button\n      onClick={onPress}\n      className={classnames(\n        'border-transparent rounded-default font-medium cursor-pointer text-white px-18 flex items-center justify-center transition-colors duration-250 hover:bg-blue-600',\n        {\n          'bg-blue-500': !disabled,\n          'pointer-events-none bg-blue-300': disabled,\n          'h-40': !/\\bh-[0-9]/gi.test(className)\n        },\n        className\n      )}\n    >\n      {children}\n    </button>\n  )\n}\n\nconst Button = memo(BaseButton)\n\nexport default Button\n","import React, { FC, useRef } from 'react'\nimport ContentEditable, { ContentEditableEvent } from 'react-contenteditable'\nimport Button from '../button'\nimport classnames from 'classnames'\nimport css from './style.module.css'\nimport { fromNow, toCapitalizedFirst } from '../../core/utils'\n\ntype HeaderProps = {\n  title?: string\n  createdAt?: string\n  onChangeTitle?: (value: string) => void\n  onPressSave?: Fn\n}\n\nconst Header: FC<HeaderProps> = ({\n  title,\n  createdAt,\n  onChangeTitle,\n  onPressSave\n}) => {\n  const editorRef = useRef(null)\n  const state = useRef(title)\n\n  const handleBlur = () => {\n    onChangeTitle?.(state.current)\n  }\n\n  const handleChange = (event: ContentEditableEvent) => {\n    const value = event.target.value\n    state.current = value\n\n    if (value === '<br>') {\n      editorRef.current.innerHTML = ''\n    }\n  }\n\n  return (\n    <div className='bg-white py-18 px-60 flex items-center justify-between'>\n      <div>\n        <ContentEditable\n          innerRef={editorRef}\n          className={classnames(\n            css.container,\n            'text-heading-2 font-medium mb-4'\n          )}\n          placeholder='Untitled document'\n          html={state.current}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n        {createdAt && (\n          <div className='font-medium text-gray-400 text-subhead'>\n            {toCapitalizedFirst(fromNow(createdAt))}\n          </div>\n        )}\n      </div>\n      <Button disabled={!state.current?.length} onPress={onPressSave}>\n        Save changes\n      </Button>\n    </div>\n  )\n}\n\nexport default Header\n","import { createContext, Dispatch, SetStateAction } from 'react'\nimport { Node } from 'slate'\n\nconst OrphanNodesContext = createContext<\n  [Array<Node>, Dispatch<SetStateAction<Array<Node>>>]\n>(null)\n\nexport default OrphanNodesContext\n","import React, { FC } from 'react'\n\ntype TemplateEditorProps = {}\n\nconst TemplateEditor: FC<TemplateEditorProps> = ({ children }) => {\n  return <div className='max-w-6xl m-auto pt-120 pb-120 px-60'>{children}</div>\n}\n\nexport default TemplateEditor\n","import React, { FC, PropsWithChildren, useMemo } from 'react'\nimport { useFocused, useSelected } from 'slate-react'\n\nimport { EditableElementType } from '../../../core/tools'\nimport classnames from 'classnames'\nimport { getPlaceholderImage } from '../../../core/utils'\n\nexport type ImageElementType = EditableElementType<{\n  url: string\n  label?: string\n  width?: number\n  height?: number\n}>\n\ntype ImageElementProps = PropsWithChildren<{\n  attributes: any\n  element: ImageElementType\n}>\n\nconst ImageElement: FC<ImageElementProps> = ({\n  attributes,\n  children,\n  element\n}) => {\n  const selected = useSelected()\n  const focused = useFocused()\n  const url = useMemo(\n    () =>\n      element.editable\n        ? getPlaceholderImage(element.width, element.height)\n        : element.url,\n    [element.editable, element.height, element.url, element.width]\n  )\n\n  return (\n    <span {...attributes}>\n      {children}\n      <img\n        src={url}\n        style={{ width: element.width, height: element.height }}\n        className={classnames(\n          'inline-block max-w-full rounded-default align-bottom',\n          {\n            'shadow-outline': selected && focused\n          }\n        )}\n      />\n    </span>\n  )\n}\n\nexport default ImageElement\n","import {\n  EditableAttributes,\n  EditableElementType,\n  composeWithClassName,\n  composeWithStyle\n} from '../../../core/tools'\nimport React, { FC, PropsWithChildren, useEffect } from 'react'\nimport { useFocused, useSelected } from 'slate-react'\n\nimport classnames from 'classnames'\n\ntype EditableElementProps = PropsWithChildren<{\n  attributes: any\n  element: EditableElementType<EditableAttributes>\n}>\n\nconst EditableElement: FC<EditableElementProps> = ({\n  attributes,\n  children,\n  element\n}) => {\n  const selected = useSelected()\n  const focused = useFocused()\n\n  useEffect(() => {\n    return () => {\n      // TODO: Find refs that match unset ref value\n    }\n  }, [])\n\n  return (\n    <span\n      {...composeWithStyle(\n        composeWithClassName(\n          attributes,\n          classnames(\n            'bg-blue-500 text-white font-medium px-4 py-2 rounded-default mx-1',\n            {\n              'shadow-outline': selected && focused\n            }\n          )\n        ),\n        { fontSize: '0.82em' }\n      )}\n      contentEditable={false}\n    >\n      {element.defaultValue}\n      {children}\n    </span>\n  )\n}\n\nexport default EditableElement\n","import React, { FC, PropsWithChildren } from 'react'\nimport ImageElement, { ImageElementType } from '../elements/image'\nimport {\n  BlockAlignment,\n  composeWithAlignmentClassName,\n  composeWithStyle,\n  EditableAttributes,\n  EditableElementType,\n  getIndentationPercent\n} from '../../core/tools'\nimport EditableElement from '../elements/editable'\n\nexport type ElementType =\n  | 'quote'\n  | 'code'\n  | 'bulleted-list'\n  | 'heading-one'\n  | 'heading-two'\n  | 'heading-three'\n  | 'heading-four'\n  | 'heading-five'\n  | 'heading-six'\n  | 'list-item'\n  | 'numbered-list'\n  | 'link'\n  | 'image'\n  | 'editable'\n\ntype TemplateElementType = {\n  type: ElementType\n  alignment?: BlockAlignment\n  indentation?: number\n} & ImageElementType &\n  EditableElementType<EditableAttributes>\n\ntype TemplateElementProps = PropsWithChildren<{\n  attributes: any\n  element: TemplateElementType\n}>\n\nconst TemplateElement: FC<TemplateElementProps> = ({\n  attributes,\n  children,\n  element\n}) => {\n  const { type, url, alignment, indentation, dataType } = element\n\n  switch (type) {\n    default:\n      return (\n        <p\n          {...composeWithStyle(\n            composeWithAlignmentClassName(attributes, alignment),\n            { paddingLeft: getIndentationPercent(indentation) }\n          )}\n        >\n          {children}\n        </p>\n      )\n    case 'quote':\n      return <blockquote {...attributes}>{children}</blockquote>\n    case 'code':\n      return (\n        <pre>\n          <code {...attributes}>{children}</code>\n        </pre>\n      )\n    case 'bulleted-list':\n      return (\n        <ul\n          {...composeWithAlignmentClassName(\n            attributes,\n            alignment,\n            'list-disc list-inside'\n          )}\n        >\n          {children}\n        </ul>\n      )\n    case 'heading-one':\n      return (\n        <h1\n          {...composeWithStyle(\n            composeWithAlignmentClassName(\n              attributes,\n              alignment,\n              'text-heading-2'\n            ),\n            { paddingLeft: getIndentationPercent(indentation) }\n          )}\n        >\n          {children}\n        </h1>\n      )\n    case 'heading-two':\n      return (\n        <h2\n          {...composeWithStyle(\n            composeWithAlignmentClassName(\n              attributes,\n              alignment,\n              'text-heading-3'\n            ),\n            { paddingLeft: getIndentationPercent(indentation) }\n          )}\n        >\n          {children}\n        </h2>\n      )\n    case 'heading-three':\n      return (\n        <h3\n          {...(composeWithStyle(\n            composeWithAlignmentClassName(\n              attributes,\n              alignment,\n              'text-headline'\n            )\n          ),\n          { paddingLeft: getIndentationPercent(indentation) })}\n        >\n          {children}\n        </h3>\n      )\n    case 'heading-four':\n      return <h4 {...attributes}>{children}</h4>\n    case 'heading-five':\n      return <h5 {...attributes}>{children}</h5>\n    case 'heading-six':\n      return <h6 {...attributes}>{children}</h6>\n    case 'list-item':\n      return (\n        <li\n          {...composeWithStyle(attributes, {\n            paddingLeft: getIndentationPercent(indentation)\n          })}\n        >\n          {children}\n        </li>\n      )\n    case 'numbered-list':\n      return (\n        <ol\n          {...composeWithAlignmentClassName(\n            attributes,\n            alignment,\n            'list-decimal list-inside'\n          )}\n        >\n          {children}\n        </ol>\n      )\n    case 'link':\n      return (\n        <a href={url} {...attributes}>\n          {children}\n        </a>\n      )\n    case 'image':\n      return <ImageElement {...{ attributes, children, element }} />\n    case 'editable':\n      return dataType === 'image' ? (\n        <ImageElement {...{ attributes, children, element }} />\n      ) : (\n        <EditableElement {...{ attributes, children, element }} />\n      )\n  }\n}\n\nexport default TemplateElement\n","import React, { FC, PropsWithChildren } from 'react'\nimport {\n  composeWithClassName,\n  composeWithStyle,\n  EditableRefAttributes\n} from '../../core/tools'\nimport classnames from 'classnames'\nimport { notNil } from '../../core/utils'\n\nexport type TemplateLeafType = Partial<{\n  bold: boolean\n  code: boolean\n  italic: boolean\n  underline: boolean\n  strikethrough: boolean\n  color: string\n  ref: EditableRefAttributes\n}>\n\ntype TemplateLeafProps = PropsWithChildren<{\n  attributes: any\n  leaf: TemplateLeafType\n}>\n\nconst TemplateLeaf: FC<TemplateLeafProps> = ({\n  attributes,\n  children,\n  leaf\n}) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  if (leaf.strikethrough) {\n    children = <del>{children}</del>\n  }\n\n  return (\n    <span\n      {...composeWithClassName(\n        composeWithStyle(attributes, { color: leaf.color }),\n        classnames({ 'bg-green-highlight': notNil(leaf.ref) })\n      )}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TemplateLeaf\n","import { useState, useCallback, useMemo, MouseEvent, useContext } from 'react'\nimport { useSlate } from 'slate-react'\nimport OrphanNodesContext from '../contexts/orphan-nodes'\nimport {\n  BlockAlignment,\n  getAlignment,\n  getColorMark,\n  HeadingFormatType,\n  isBlockActive,\n  isMarkActive,\n  SlateEditorType\n} from '../tools'\n\ntype PopupActions = {\n  visible: boolean\n  open: Fn\n  close: Fn\n  toggle: Fn\n}\n\nexport type TextSizeValue = {\n  name: HeadingFormatType\n  label: string\n  value: boolean\n}\n\nexport function usePopupUtils(initialOpen: boolean = false): PopupActions {\n  const [visible, setVisible] = useState(initialOpen)\n\n  const handleOpen = useCallback(() => {\n    setVisible(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  const handleToggle = useCallback(() => {\n    setVisible((o) => !o)\n  }, [])\n\n  const popupActions: PopupActions = useMemo(\n    () => ({\n      visible,\n      open: handleOpen,\n      close: handleClose,\n      toggle: handleToggle\n    }),\n    [handleClose, handleOpen, handleToggle, visible]\n  )\n\n  return popupActions\n}\n\nexport function useEditor(): SlateEditorType {\n  return useSlate() as SlateEditorType\n}\n\nexport function useTextSizeValue(): TextSizeValue {\n  const editor = useEditor()\n\n  const headingOneActive = isBlockActive(editor, 'heading-one')\n  const headingTwoActive = isBlockActive(editor, 'heading-two')\n  const headingThreeActive = isBlockActive(editor, 'heading-three')\n\n  const results = useMemo(\n    () =>\n      [\n        { name: 'heading-one', label: 'Heading 1', value: headingOneActive },\n        { name: 'heading-two', label: 'Heading 2', value: headingTwoActive },\n        { name: 'heading-three', label: 'Heading 3', value: headingThreeActive }\n      ] as Array<TextSizeValue>,\n    [headingOneActive, headingThreeActive, headingTwoActive]\n  )\n\n  return results.find((o) => o.value)\n}\n\nexport function useLeafColorValue(): string {\n  const editor = useEditor()\n  return getColorMark(editor)\n}\n\nexport function useAlignmentValue(): BlockAlignment {\n  const editor = useEditor()\n  return getAlignment(editor)\n}\n\nexport function useMouseDown(fn: Fn): (e: MouseEvent) => void {\n  return useCallback(\n    (e: MouseEvent) => {\n      e?.preventDefault()\n      fn?.()\n    },\n    [fn]\n  )\n}\n\nexport function useCanUndo(): boolean {\n  const editor = useEditor()\n  return !!editor.history?.undos?.length\n}\n\nexport function useCanRedo(): boolean {\n  const editor = useEditor()\n  return !!editor.history?.redos?.length\n}\n\nexport function useConditionActive(): boolean {\n  const editor = useEditor()\n  return isMarkActive(editor, 'ref')\n}\n\nexport function useOrphanNodes() {\n  const context = useContext(OrphanNodesContext)\n  return context\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React, {\n  Children,\n  cloneElement,\n  FC,\n  memo,\n  PropsWithChildren,\n  ReactElement\n} from 'react'\nimport classnames from 'classnames'\nimport { useMouseDown } from '../../core/hooks'\n\ntype IconProps = PropsWithChildren<{\n  className?: string\n  onPress?: Fn\n}>\n\nconst BaseIcon: FC<IconProps> = ({ children, className, onPress }) => {\n  const handlePress = useMouseDown(onPress)\n  return (\n    <figure\n      onMouseDown={handlePress}\n      className={classnames('flex-shrink-0', className, {\n        's-16': !/\\bs-[0-9]/gi.test(className)\n      })}\n    >\n      {Children.map(children, (child: ReactElement) =>\n        cloneElement(child, {\n          className: classnames(\n            child.props.className,\n            'h-full w-full object-contain object-center m-auto pointer-events-none'\n          )\n        })\n      )}\n    </figure>\n  )\n}\n\nconst Icon = memo(BaseIcon)\n\nexport default Icon\n","import classnames from 'classnames'\nimport React, { useLayoutEffect, useState } from 'react'\n\nimport css from './style.module.css'\n\nexport type ContentDimensions = {\n  width?: number\n  height?: number\n  x?: number\n  y?: number\n}\n\ntype ContentProps = {\n  onLayoutUpdate: (dimensions: ContentDimensions) => void\n  x?: number\n  y?: number\n  hideArrow?: boolean\n  position?: string\n  alignment?: string\n  className?: string\n}\n\nconst Content: React.FC<ContentProps> = ({\n  onLayoutUpdate,\n  children,\n  x,\n  y,\n  position,\n  alignment,\n  className,\n  hideArrow\n}) => {\n  const [dimensions, setDimensions] = useState<ContentDimensions>({ x, y })\n\n  useLayoutEffect(() => {\n    const element = document.querySelector(`.${css.container}`)\n    const { width, height, x, y } = element.getBoundingClientRect()\n    const computedDimensions: ContentDimensions = { width, height, x, y }\n\n    if (JSON.stringify(computedDimensions) !== JSON.stringify(dimensions)) {\n      setDimensions(computedDimensions)\n      onLayoutUpdate(computedDimensions)\n    }\n  }, [dimensions, onLayoutUpdate])\n\n  let composedClassName = css.container\n  const arrowClassName = ` ${css.arrow} ${css[`arrow${position}`]} ${\n    css[`arrow${alignment}`]\n  }`\n\n  if (!hideArrow) composedClassName += arrowClassName\n\n  return (\n    <div\n      className={classnames(composedClassName, 'shadow-6', className)}\n      style={{ top: y, left: x }}\n    >\n      {children}\n    </div>\n  )\n}\n\nContent.defaultProps = {\n  x: 0,\n  y: 0\n}\n\nexport default Content\n","import React, {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useState\n} from 'react'\nimport { useMouseDown } from '../../core/hooks'\n\nimport Content, { ContentDimensions } from './content'\n\nexport type AnchorRef = MutableRefObject<Element>\n\nexport type PopupPosition = 'up' | 'right' | 'down' | 'left' | 'center'\n\nexport type PopupAlignment = 'start' | 'center' | 'end'\n\ntype PopupOffset = {\n  x: number\n  y: number\n}\n\ntype PopupContentPosition = {\n  x: number\n  y: number\n}\n\ntype PopupProps = {\n  anchor?: string\n  anchorRef?: AnchorRef\n  contentClassName?: string\n  position?: PopupPosition\n  alignment?: PopupAlignment\n  transparent?: boolean\n  distance?: number\n  offsets?: PopupOffset\n  hideArrow?: boolean\n  isVisible?: boolean\n  overlayCloseOnClick?: boolean\n  onRequestClose: () => void\n}\n\nconst EDGE_PADDING = 12\n\nconst getViewportWidth = () =>\n  window.innerWidth ||\n  document.documentElement.clientWidth ||\n  document.body.clientWidth\n\nconst getViewportHeight = () =>\n  window.innerHeight ||\n  document.documentElement.clientHeight ||\n  document.body.clientHeight\n\nconst getPositioningWithoutAnchor = (\n  dimensions: ContentDimensions,\n  position: PopupPosition,\n  alignment: PopupAlignment\n) => {\n  const viewportWidth = getViewportWidth()\n  const viewportHeight = getViewportHeight()\n  const { width, height } = dimensions\n\n  let x: number, y: number\n\n  switch (position) {\n    case 'up':\n      y = 0\n      break\n    case 'down':\n      y = viewportHeight - height\n      break\n    case 'center':\n      y = (viewportHeight - height) / 2\n      break\n    default:\n      y = 0\n      break\n  }\n\n  switch (alignment) {\n    case 'start':\n      x = 0\n      break\n    case 'center':\n      x = (viewportWidth - width) / 2\n      break\n    case 'end':\n      x = viewportWidth - width\n      break\n    default:\n      x = 0\n      break\n  }\n\n  return { x, y }\n}\n\nconst getPositioningWithAnchor = (\n  dimensions: ContentDimensions,\n  anchor: string,\n  anchorRef: AnchorRef,\n  distance: number,\n  position: PopupPosition,\n  alignment: PopupAlignment\n) => {\n  const anchorElement = anchorRef.current || document.querySelector(anchor)\n  if (!anchorElement)\n    return getPositioningWithoutAnchor(dimensions, position, alignment)\n\n  const {\n    width: anchorWidth,\n    height: anchorHeight,\n    x: anchorX,\n    y: anchorY\n  } = anchorElement.getBoundingClientRect()\n  const { width, height } = dimensions\n\n  let x: number, y: number\n\n  if (position === 'up') {\n    y = anchorY - height - distance\n\n    switch (alignment) {\n      case 'start':\n        x = anchorX\n        break\n      case 'center':\n        x = anchorX + anchorWidth / 2 - width / 2\n        break\n      case 'end':\n        x = anchorX + anchorWidth - width\n        break\n      default:\n        break\n    }\n  }\n\n  if (position === 'down') {\n    y = anchorY + anchorHeight + distance\n\n    switch (alignment) {\n      case 'start':\n        x = anchorX\n        break\n      case 'center':\n        x = anchorX + anchorWidth / 2 - width / 2\n        break\n      case 'end':\n        x = anchorX + anchorWidth - width\n        break\n      default:\n        break\n    }\n  }\n\n  if (position === 'left') {\n    x = anchorX - width - distance\n\n    switch (alignment) {\n      case 'start':\n        y = anchorY\n        break\n      case 'center':\n        y = anchorY + anchorHeight / 2 - height / 2\n        break\n      case 'end':\n        y = anchorY + anchorHeight - height\n        break\n      default:\n        break\n    }\n  }\n\n  if (position === 'right') {\n    x = anchorX + anchorWidth + distance\n\n    switch (alignment) {\n      case 'start':\n        y = anchorY\n        break\n      case 'center':\n        y = anchorY + anchorHeight / 2 - height / 2\n        break\n      case 'end':\n        y = anchorY + anchorHeight - height\n        break\n      default:\n        break\n    }\n  }\n\n  return { x, y }\n}\n\nconst getValidPositioning = (\n  dimensions: ContentDimensions,\n  anchor: string,\n  anchorRef: AnchorRef,\n  distance: number,\n  position: PopupPosition,\n  alignment: PopupAlignment,\n  offsets: PopupOffset\n) => {\n  const { width, height } = dimensions\n  const viewportWidth = getViewportWidth()\n  const viewportHeight = getViewportHeight()\n  let contentPosition: PopupContentPosition\n\n  if (!!anchor || !!anchorRef) {\n    contentPosition = getPositioningWithAnchor(\n      dimensions,\n      anchor,\n      anchorRef,\n      distance,\n      position,\n      alignment\n    )\n  } else {\n    contentPosition = getPositioningWithoutAnchor(\n      dimensions,\n      position,\n      alignment\n    )\n  }\n\n  if (offsets) {\n    const xOffset = offsets.x || 0\n    const yOffset = offsets.y || 0\n\n    contentPosition.x = contentPosition.x + xOffset\n    contentPosition.y = contentPosition.y + yOffset\n  }\n\n  const leftEdge = EDGE_PADDING\n  const topEdge = EDGE_PADDING\n  const rightEdge = viewportWidth - width\n  const bottomEdge = viewportHeight - height\n\n  if (contentPosition.x <= leftEdge) contentPosition.x = leftEdge\n  if (contentPosition.y <= topEdge) contentPosition.y = topEdge\n  if (contentPosition.x >= rightEdge) contentPosition.x = rightEdge\n  if (contentPosition.y >= bottomEdge) contentPosition.y = bottomEdge\n\n  return contentPosition\n}\n\nconst Popup: React.FC<PopupProps> = ({\n  anchor,\n  anchorRef,\n  children,\n  contentClassName,\n  position,\n  alignment,\n  transparent,\n  distance,\n  offsets,\n  isVisible,\n  hideArrow,\n  overlayCloseOnClick,\n  onRequestClose\n}) => {\n  const [\n    popupContentPosition,\n    setPopupContentPosition\n  ] = useState<PopupContentPosition>({\n    x: 0,\n    y: 0\n  })\n\n  const handleClickOverlay = useMouseDown(() => {\n    if (overlayCloseOnClick) onRequestClose()\n  })\n\n  const handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isVisible) onRequestClose()\n    },\n    [isVisible, onRequestClose]\n  )\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [isVisible, handleKeyUp])\n\n  if (!isVisible) return null\n\n  return (\n    <div className='fixed top-0 left-0 w-full h-full z-2'>\n      <div\n        className={\n          transparent\n            ? 'w-full h-full absolute top-0 left-0 z-0'\n            : 'w-full h-full absolute top-0 left-0 z-0 bg-blue-800 opacity-50'\n        }\n        onMouseDown={handleClickOverlay}\n      />\n      <Content\n        className={contentClassName}\n        x={popupContentPosition.x}\n        y={popupContentPosition.y}\n        position={position}\n        alignment={alignment}\n        hideArrow={(!anchorRef && !anchor) || hideArrow}\n        onLayoutUpdate={(dimensions) =>\n          setPopupContentPosition(\n            getValidPositioning(\n              dimensions,\n              anchor,\n              anchorRef,\n              distance,\n              position,\n              alignment,\n              offsets\n            )\n          )\n        }\n      >\n        {children}\n      </Content>\n    </div>\n  )\n}\n\nPopup.defaultProps = {\n  position: 'center',\n  alignment: 'center',\n  transparent: false,\n  distance: 10,\n  overlayCloseOnClick: true,\n  hideArrow: false,\n  isVisible: false\n}\n\nexport default Popup\n","import { ImageDimensions, getImageSizeAsync, nil } from '../../../core/utils'\nimport React, {\n  ChangeEvent,\n  FC,\n  MutableRefObject,\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\n\nimport { BiLink } from '@react-icons/all-files/bi/BiLink'\nimport Button from '../../button'\nimport Icon from '../../icon'\nimport Popup from '../../popup'\n\nexport type ImageProps = {\n  url?: string\n  label?: string\n  dimensions: ImageDimensions\n}\n\ntype ImagePopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  onRequestClose: Fn\n  onSubmitEditing?: (value: ImageProps) => void\n}\n\nconst ImagePopup: FC<ImagePopupProps> = ({\n  anchorRef,\n  isVisible,\n  onRequestClose,\n  onSubmitEditing\n}) => {\n  const [imageState, setImageState] = useState('')\n  const [scaleState, setScaleState] = useState('100')\n  const [imageDimensions, setImageDimensions] = useState<ImageDimensions>()\n\n  const decimalScale = useMemo(() => {\n    const value = parseFloat(scaleState)\n    const normalized = isNaN(value) || value < 1 ? 1 : value\n    return normalized / 100\n  }, [scaleState])\n\n  const handleChangeImageUrl = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setImageState(e.target.value)\n    },\n    []\n  )\n\n  const handleChangeScale = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setScaleState(e.target.value)\n  }, [])\n\n  const handleBlurImageInput = useCallback(async () => {\n    if (!imageState?.length) {\n      setImageDimensions(null)\n      return\n    }\n\n    try {\n      const dimensions = await getImageSizeAsync(imageState)\n      setImageDimensions(dimensions)\n    } catch (error) {\n      setImageDimensions(null)\n    }\n  }, [imageState])\n\n  const handleRequestClose = useCallback(() => {\n    setImageState('')\n    setScaleState('100')\n    setImageDimensions(null)\n    onRequestClose?.()\n  }, [onRequestClose])\n\n  const handlePressSubmit = useCallback(() => {\n    onSubmitEditing?.({\n      url: imageState,\n      dimensions: {\n        width: imageDimensions.width * decimalScale,\n        height: imageDimensions.height * decimalScale\n      }\n    })\n    handleRequestClose()\n  }, [\n    decimalScale,\n    handleRequestClose,\n    imageDimensions,\n    imageState,\n    onSubmitEditing\n  ])\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={handleRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default p-8 w-296 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        <div className='flex items-center justify-between space-x-4 mb-8'>\n          <div className='h-32 flex-1 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n            <div className='flex s-32 rounded-default rounded-r-none rounded-b-none bg-gray-200 text-gray-500 items-center justify-center font-semibold'>\n              <Icon>\n                <BiLink />\n              </Icon>\n            </div>\n            <input\n              className='border-none h-full px-6 bg-transparent font-medium flex-1 min-w-0'\n              type='text'\n              placeholder='https://www...'\n              value={imageState}\n              onChange={handleChangeImageUrl}\n              onBlur={handleBlurImageInput}\n            />\n          </div>\n          <div className='h-32 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n            <input\n              maxLength={3}\n              className='border-none h-full w-40 px-6 bg-transparent font-medium m-0'\n              placeholder='0'\n              value={scaleState}\n              onChange={handleChangeScale}\n            />\n            <div className='flex s-32 bg-transparent text-gray-300 items-center justify-center font-semibold'>\n              %\n            </div>\n          </div>\n        </div>\n        <div className='flex justify-end'>\n          <Button\n            disabled={nil(imageDimensions)}\n            className='h-32'\n            onPress={handlePressSubmit}\n          >\n            Insert\n          </Button>\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default ImagePopup\n","import React, {\n  FC,\n  memo,\n  MutableRefObject,\n  useCallback,\n  useState,\n  ChangeEvent\n} from 'react'\nimport Popup from '../../popup'\nimport css from './style.module.css'\nimport classnames from 'classnames'\nimport { areEqualColors, isHexColor } from '../../../core/utils'\nimport { useMouseDown } from '../../../core/hooks'\nimport { PRESET_COLORS } from '../../../core/constants'\n\ntype ColorPopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  value?: string\n  onChangeColorOption?: (value?: string, focus?: boolean) => void\n  onRequestClose: Fn\n}\n\ntype ColorBoxProps = {\n  active?: boolean\n  color: string\n  onPress?: (value: string) => void\n}\n\nconst BaseColorBox: FC<ColorBoxProps> = ({ active, color, onPress }) => {\n  const handlePress = useMouseDown(() => {\n    onPress?.(color)\n  })\n\n  return (\n    <div\n      style={{ color }}\n      onMouseDown={handlePress}\n      title={color}\n      className={classnames(\n        's-32 rounded-default bg-current cursor-pointer transition-shadow duration-250',\n        css['color-box'],\n        { [css.active]: active }\n      )}\n    />\n  )\n}\n\nconst ColorBox = memo(BaseColorBox)\n\nconst ColorPopup: FC<ColorPopupProps> = ({\n  anchorRef,\n  isVisible,\n  value,\n  onChangeColorOption,\n  onRequestClose\n}) => {\n  const [colorState, setColorState] = useState('')\n\n  const handlePressColorOption = useCallback(\n    (option: string) => {\n      if (!isHexColor(option)) {\n        return\n      }\n\n      const selectedColor = areEqualColors(value, option) ? null : option\n\n      setColorState(selectedColor?.replaceAll('#', ''))\n      onChangeColorOption?.(selectedColor)\n      onRequestClose?.()\n    },\n    [onChangeColorOption, onRequestClose, value]\n  )\n\n  const handleChangeInput = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      const inputValue = e.target.value\n      const parsedColor = inputValue?.length\n        ? `#${inputValue.replace('#', '')}`\n        : null\n\n      setColorState(e.target.value)\n\n      if (isHexColor(parsedColor)) {\n        onChangeColorOption?.(parsedColor, false)\n      }\n    },\n    [onChangeColorOption]\n  )\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={onRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default grid grid-cols-7 gap-6 p-8 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        {PRESET_COLORS.map((o) => (\n          <ColorBox\n            color={o}\n            key={o}\n            onPress={handlePressColorOption}\n            active={areEqualColors(value, o)}\n          />\n        ))}\n        <div className='h-32 col-span-4 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n          <div className='flex s-32 rounded-default rounded-r-none rounded-b-none bg-gray-200 text-gray-500 items-center justify-center font-semibold'>\n            #\n          </div>\n          <input\n            maxLength={6}\n            className={classnames(\n              'border-none h-full px-6 bg-transparent font-medium',\n              css.input\n            )}\n            type='text'\n            placeholder={value?.replace('#', '')}\n            value={colorState}\n            onChange={handleChangeInput}\n          />\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default ColorPopup\n","import React, {\n  Children,\n  cloneElement,\n  FC,\n  PropsWithChildren,\n  ReactElement\n} from 'react'\nimport classnames from 'classnames'\n\ntype FieldProps = PropsWithChildren<{\n  label?: string\n  className?: string\n}>\n\nconst Field: FC<FieldProps> = ({ className, children, label }) => {\n  return (\n    <div className={className}>\n      {!!label?.length && (\n        <label className='text-blue-500 block mb-4 text-subhead font-medium'>\n          {label}\n        </label>\n      )}\n      {Children.map(children, (child: ReactElement) =>\n        cloneElement(child, {\n          className: classnames(\n            child.props.className,\n            'w-full appearance-none border border-gray-200 rounded-default h-32 px-8 transition:colors transition:shadow duration-250 focus:border-blue-500 focus:shadow-outline'\n          )\n        })\n      )}\n    </div>\n  )\n}\n\nexport default Field\n","import React, {\n  ChangeEvent,\n  FC,\n  MutableRefObject,\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { useEditor, useOrphanNodes } from '../../../core/hooks'\nimport {\n  EditableAttributes,\n  EditableElementType,\n  EditableRefAttributes,\n  getMatchingNodes\n} from '../../../core/tools'\nimport Button from '../../button'\nimport Field from '../../field'\nimport Popup from '../../popup'\n\ntype ConditionPopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  onRequestClose: Fn\n  onSubmitEditing?: (value: EditableRefAttributes) => void\n}\n\nconst ConditionPopup: FC<ConditionPopupProps> = ({\n  anchorRef,\n  isVisible,\n  onRequestClose,\n  onSubmitEditing\n}) => {\n  const editor = useEditor()\n  const [orphanNodes] = useOrphanNodes()\n  const editableNodes = getMatchingNodes(\n    editor,\n    (o) =>\n      o.type === 'editable' &&\n      !(o.valueRef as string)?.length &&\n      ['options', 'radio'].includes(o.dataType as string)\n  )\n    .concat(orphanNodes)\n    .map((o) => o as EditableElementType<EditableAttributes>)\n\n  const [parent, setParent] = useState('')\n  const [value, setValue] = useState('')\n  const options = useMemo(\n    () => editableNodes.find((o) => o.id === parent)?.options || [],\n    [editableNodes, parent]\n  )\n\n  const isValid = !!parent?.length && !!value?.length\n\n  const handleChangeParent = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      const selected = e.target.value\n\n      if (selected === parent) {\n        return\n      }\n\n      setParent(selected)\n      setValue('')\n    },\n    [parent]\n  )\n\n  const handleChangeValue = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      const selected = e.target.value\n\n      if (selected === value) {\n        return\n      }\n\n      setValue(selected)\n    },\n    [value]\n  )\n\n  const handleRequestClose = useCallback(() => {\n    setParent('')\n    setValue('')\n    onRequestClose?.()\n  }, [onRequestClose])\n\n  const handlePressSubmit = useCallback(() => {\n    onSubmitEditing?.({\n      parent,\n      value\n    })\n    handleRequestClose()\n  }, [handleRequestClose, onSubmitEditing, parent, value])\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={handleRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default p-8 space-y-8 w-320 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        <Field label='Only show when...'>\n          <select value={parent} onChange={handleChangeParent}>\n            <option hidden value=''>\n              Choose one\n            </option>\n            {editableNodes.map((o) => (\n              <option key={o.id} value={o.id}>\n                {o.defaultValue}({o.label})\n              </option>\n            ))}\n          </select>\n        </Field>\n        <Field label='equals...'>\n          <select value={value} onChange={handleChangeValue}>\n            <option hidden value=''>\n              Choose one\n            </option>\n            {options.map((o) => (\n              <option key={o.id} value={o.id}>\n                {o.label}\n              </option>\n            ))}\n          </select>\n        </Field>\n        <div className='flex justify-end'>\n          <Button\n            disabled={!isValid}\n            className='h-32'\n            onPress={handlePressSubmit}\n          >\n            Add condition\n          </Button>\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default ConditionPopup\n","import React, { MouseEvent, FC, memo } from 'react'\nimport classnames from 'classnames'\n\ntype SegmentedControlProps = {\n  className?: string\n  value: number\n  options: Array<string>\n  onChangeValue: (value: number) => void\n}\n\nconst BaseSegmentedControl: FC<SegmentedControlProps> = ({\n  className,\n  value,\n  options,\n  onChangeValue\n}) => {\n  const handlePressOption = (e: MouseEvent, index: number) => {\n    e.preventDefault()\n    onChangeValue?.(index)\n  }\n\n  return (\n    <div\n      className={classnames(\n        'bg-gray-100 rounded-full p-4 w-296 h-40 flex items-center relative',\n        className\n      )}\n    >\n      <div\n        className='absolute bg-gray-500 rounded-full z-0 top-4 h-32 transition-all duration-500'\n        style={{ width: 144, left: 144 * value + 4 }}\n      />\n      {options.map((o, i) => (\n        <div\n          className={classnames(\n            'font-medium flex-1 flex items-center justify-center relative z-1 cursor-pointer transition-colors duration-500',\n            {\n              'text-gray-500 hover:text-gray-700': value !== i,\n              'text-white': value === i\n            }\n          )}\n          key={i}\n          onMouseDown={(e) => handlePressOption(e, i)}\n        >\n          {o}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst SegmentedControl = memo(BaseSegmentedControl)\n\nexport default SegmentedControl\n","import {\n  EditableAttributes,\n  EditableElementType,\n  getEditableAttributes,\n  getEditableAttributesValidity,\n  getMatchingNodes\n} from '../../../../core/tools'\nimport React, { ChangeEvent, FC, useCallback, useMemo, useState } from 'react'\n\nimport Button from '../../../button'\nimport Field from '../../../field'\nimport { useEditor } from '../../../../core/hooks'\n\ntype EditableCopyExistingProps = {\n  onSubmit?: (attributes: EditableAttributes) => void\n}\n\nconst EditableCopyExisting: FC<EditableCopyExistingProps> = ({ onSubmit }) => {\n  const editor = useEditor()\n  const editableNodes = useMemo(\n    () =>\n      getMatchingNodes(\n        editor,\n        (o) => o.type === 'editable' && !(o.valueRef as string)?.length\n      ).map((o) => o as EditableElementType<EditableAttributes>),\n    [editor]\n  )\n\n  const [valueRef, setValueRef] = useState('')\n  const [defaultValue, setDefaultValue] = useState('')\n  const dataType = useMemo(\n    () => editableNodes?.find((o) => o.id === valueRef)?.dataType,\n    [editableNodes, valueRef]\n  )\n\n  const isValid = useMemo(\n    () =>\n      getEditableAttributesValidity(\n        { valueRef, defaultValue, dataType },\n        false,\n        true\n      ),\n    [dataType, defaultValue, valueRef]\n  )\n\n  const handleChangeValueRef = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      const value = e.target.value\n\n      if (value === valueRef) {\n        return\n      }\n\n      setValueRef(value)\n      setDefaultValue(\n        editableNodes.find((o) => o.id === value)?.defaultValue || ''\n      )\n    },\n    [editableNodes, valueRef]\n  )\n\n  const handleChangeDefaultValue = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setDefaultValue(e.target.value)\n    },\n    []\n  )\n\n  const handlePressSubmit = useCallback(() => {\n    const data = getEditableAttributes({ valueRef, defaultValue, dataType })\n\n    onSubmit?.(data)\n  }, [dataType, defaultValue, onSubmit, valueRef])\n\n  return (\n    <div>\n      <Field label='Copy from' className='mb-18'>\n        <select value={valueRef} onChange={handleChangeValueRef}>\n          <option hidden value=''>\n            Choose one\n          </option>\n          {editableNodes.map((o) => (\n            <option key={o.id} value={o.id}>\n              {o.defaultValue}({o.label})\n            </option>\n          ))}\n        </select>\n      </Field>\n      <Field label='Default value' className='mb-18'>\n        <input\n          value={defaultValue}\n          onChange={handleChangeDefaultValue}\n          placeholder='Default'\n        />\n      </Field>\n      <div className='flex justify-end pt-24'>\n        <Button\n          disabled={!isValid}\n          className='h-32'\n          onPress={handlePressSubmit}\n        >\n          Insert\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default EditableCopyExisting\n","import React, { FC, memo } from 'react'\nimport ReactSwitch from 'react-switch'\n\ntype SwitchProps = {\n  className?: string\n  value: boolean\n  onChangeValue: (value: boolean) => void\n}\n\nconst BaseSwitch: FC<SwitchProps> = ({ className, value, onChangeValue }) => {\n  return (\n    <ReactSwitch\n      checked={value}\n      className={className}\n      onChange={onChangeValue}\n      offColor='#ADC5FA'\n      onColor='#326FF3'\n      checkedIcon={false}\n      uncheckedIcon={false}\n      handleDiameter={18}\n      height={22}\n      width={44}\n      activeBoxShadow='0 0 0 4px rgba(103, 126, 138, 0.125)'\n    />\n  )\n}\n\nconst Switch = memo(BaseSwitch)\n\nexport default Switch\n","import React, {\n  ChangeEvent,\n  FC,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n  KeyboardEvent\n} from 'react'\nimport Button from '../../../button'\nimport Field from '../../../field'\nimport Switch from '../../../switch'\nimport { FaRegTrashAlt } from '@react-icons/all-files/fa/FaRegTrashAlt'\nimport { AiFillPlusCircle } from '@react-icons/all-files/ai/AiFillPlusCircle'\nimport Icon from '../../../icon'\nimport {\n  EditableAttributes,\n  EditableDataType,\n  EditableOption,\n  getEditableAttributes,\n  getEditableAttributesValidity\n} from '../../../../core/tools'\nimport {\n  DATE_FORMATS,\n  EDITABLE_DATA_TYPES,\n  TIME_FORMATS\n} from '../../../../core/constants'\nimport { formatDate, generateUUID } from '../../../../core/utils'\n\ntype EditableCreateNewProps = {\n  onSubmit?: (attributes: EditableAttributes, isOrphan?: boolean) => void\n}\n\nconst EditableCreateNew: FC<EditableCreateNewProps> = ({ onSubmit }) => {\n  const now = useRef(new Date()).current\n  const dataTypeOptions = useRef(Object.entries(EDITABLE_DATA_TYPES)).current\n  const dateFormatOptions = useRef(DATE_FORMATS).current\n  const timeFormatOptions = useRef(TIME_FORMATS).current\n\n  const [dataType, setDataType] = useState<EditableDataType>(\n    '' as EditableDataType\n  )\n  const [defaultValue, setDefaultValue] = useState('')\n  const [dateTimeFormat, setDateTimeFormat] = useState('')\n  const [label, setLabel] = useState('')\n  const [multiline, setMultiline] = useState(false)\n  const [options, setOptions] = useState<Array<EditableOption>>([])\n  const [editingOption, setEditingOption] = useState('')\n  const [showTip, setShowTip] = useState(false)\n  const [isOrphan, setIsOrphan] = useState(false)\n  const [tip, setTip] = useState('')\n\n  const isValid = useMemo(\n    () =>\n      getEditableAttributesValidity(\n        {\n          dataType,\n          dateTimeFormat,\n          defaultValue,\n          label,\n          options,\n          tip\n        },\n        showTip\n      ),\n    [dataType, dateTimeFormat, defaultValue, label, options, showTip, tip]\n  )\n\n  const handlePressDeleteOption = useCallback(\n    (id: string) => {\n      const eventualValue = [...options]\n      const index = eventualValue.findIndex((o) => o.id === id)\n\n      if (~index) {\n        eventualValue.splice(index, 1)\n        setOptions(eventualValue)\n      }\n    },\n    [options]\n  )\n\n  const handlePressAddOption = useCallback(() => {\n    const label = editingOption?.trim()\n\n    if (!label?.length) {\n      return\n    }\n\n    const id = generateUUID()\n\n    setOptions((groundValue) => [...groundValue, { id, label }])\n    setEditingOption('')\n  }, [editingOption])\n\n  const handleEditingOptionKeydown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key?.toLowerCase() === 'enter') {\n        e.preventDefault()\n        handlePressAddOption()\n      }\n    },\n    [handlePressAddOption]\n  )\n\n  const handlePressSubmit = useCallback(() => {\n    const data = getEditableAttributes(\n      {\n        dataType,\n        dateTimeFormat,\n        multiline,\n        defaultValue,\n        label,\n        options,\n        tip\n      },\n      showTip\n    )\n\n    onSubmit?.(data, isOrphan)\n  }, [\n    dataType,\n    dateTimeFormat,\n    defaultValue,\n    isOrphan,\n    label,\n    multiline,\n    onSubmit,\n    options,\n    showTip,\n    tip\n  ])\n\n  const handleChangeDataType = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      const value = e.target.value as EditableDataType\n\n      if (value === dataType) {\n        return\n      }\n\n      setDataType(value)\n\n      if (value === 'date' || value === 'time') {\n        setDateTimeFormat('')\n      }\n    },\n    [dataType]\n  )\n\n  const handleChangeDateTimeFormat = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      setDateTimeFormat(e.target.value)\n    },\n    []\n  )\n\n  const handleChangeEditingOption = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setEditingOption(e.target.value)\n    },\n    []\n  )\n\n  const handleChangeLabel = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLabel(e.target.value)\n  }, [])\n\n  const handleChangeDefaultValue = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setDefaultValue(e.target.value)\n    },\n    []\n  )\n\n  const handleChangeTip = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTip(e.target.value)\n  }, [])\n\n  return (\n    <div>\n      <div className='flex items-end space-x-12 mb-18'>\n        <Field label='Type' className='flex-1'>\n          <select value={dataType} onChange={handleChangeDataType}>\n            <option hidden value=''>\n              Choose one\n            </option>\n            {dataTypeOptions.map(([value, label]) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n        </Field>\n        {dataType === 'text' && (\n          <div className='flex flex-1 justify-start items-center space-x-8 pb-6'>\n            <div>Multiline</div>\n            <Switch value={multiline} onChangeValue={setMultiline} />\n          </div>\n        )}\n        {dataType === 'date' && (\n          <Field label='Date format'>\n            <select\n              value={dateTimeFormat}\n              onChange={handleChangeDateTimeFormat}\n            >\n              <option hidden value=''>\n                Choose a format\n              </option>\n              {dateFormatOptions.map((o) => (\n                <option key={o} value={o}>\n                  {formatDate(now, o)}\n                </option>\n              ))}\n            </select>\n          </Field>\n        )}\n        {dataType === 'time' && (\n          <Field label='Time format'>\n            <select\n              value={dateTimeFormat}\n              onChange={handleChangeDateTimeFormat}\n            >\n              <option hidden value=''>\n                Choose a format\n              </option>\n              {timeFormatOptions.map((o) => (\n                <option key={o} value={o}>\n                  {formatDate(now, o)}\n                </option>\n              ))}\n            </select>\n          </Field>\n        )}\n      </div>\n      {['radio', 'options'].includes(dataType) && (\n        <div className='mb-18'>\n          <div className='text-blue-500 block mb-4 text-subhead font-medium'>\n            Options\n          </div>\n          <div className='space-y-6'>\n            {options?.map((o) => (\n              <div\n                key={o.id}\n                onClick={() => handlePressDeleteOption(o.id)}\n                className='flex items-center justify-between px-8 h-32 w-full border border-gray-200 bg-gray-100 rounded-default'\n              >\n                <span className='text-gray-500'>{o.label}</span>\n                <Icon className='cursor-pointer text-gray-500 transition-colors duration-250'>\n                  <FaRegTrashAlt />\n                </Icon>\n              </div>\n            ))}\n            <div className='flex items-center justify-between px-8 h-32 w-full border border-gray-200 rounded-default transition:colors transition:shadow duration-250 focus-within:shadow-outline focus-within:border-blue-500'>\n              <input\n                value={editingOption}\n                className='border-none h-full w-full bg-transparent m-0'\n                placeholder='+ Add an option'\n                onChange={handleChangeEditingOption}\n                onKeyDown={handleEditingOptionKeydown}\n              />\n              <Icon\n                onPress={handlePressAddOption}\n                className='cursor-pointer text-blue-500 transition-colors duration-250 hover:text-blue-600'\n              >\n                <AiFillPlusCircle />\n              </Icon>\n            </div>\n          </div>\n        </div>\n      )}\n      <Field label='Label' className='mb-18'>\n        <input\n          value={label}\n          onChange={handleChangeLabel}\n          placeholder='Question label'\n        />\n      </Field>\n      <Field label='Default value' className='mb-18'>\n        <input\n          value={defaultValue}\n          onChange={handleChangeDefaultValue}\n          placeholder='Default'\n        />\n      </Field>\n      <div className='flex flex-1 justify-between items-center mb-18'>\n        <div>Show description</div>\n        <Switch value={showTip} onChangeValue={setShowTip} />\n      </div>\n      {showTip && (\n        <Field label='Description' className='mb-18'>\n          <input\n            value={tip}\n            onChange={handleChangeTip}\n            placeholder='Lorem ipsum...'\n          />\n        </Field>\n      )}\n      <div className='flex flex-1 justify-between items-center mb-18'>\n        <div>Save in Icebox</div>\n        <Switch value={isOrphan} onChangeValue={setIsOrphan} />\n      </div>\n      <div className='flex justify-end pt-24'>\n        <Button\n          disabled={!isValid}\n          onPress={handlePressSubmit}\n          className='h-32'\n        >\n          Insert\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default EditableCreateNew\n","import React, { FC, useCallback, useState } from 'react'\nimport { EditableAttributes } from '../../../core/tools'\nimport Popup from '../../popup'\nimport SegmentedControl from '../../segmented-control'\nimport EditableCopyExisting from './copy-existing'\nimport EditableCreateNew from './create-new'\n\ntype EditablePopupProps = {\n  isVisible: boolean\n  onRequestClose: Fn\n  onSubmit: (attributes: EditableAttributes, isOrphan?: boolean) => void\n}\n\nconst EditablePopupProps: FC<EditablePopupProps> = ({\n  isVisible,\n  onRequestClose,\n  onSubmit\n}) => {\n  const [segment, setSegment] = useState(0)\n\n  const handleSubmit = useCallback(\n    (attributes: EditableAttributes, isOrphan = false) => {\n      onSubmit?.(attributes, isOrphan)\n      onRequestClose?.()\n      setSegment(0)\n    },\n    [onRequestClose, onSubmit]\n  )\n\n  return (\n    <Popup\n      position='center'\n      alignment='center'\n      isVisible={isVisible}\n      onRequestClose={onRequestClose}\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default w-480 py-12 px-16 bg-white border border-gray-300 overflow-hidden'>\n        <div className='flex items-center justify-center mb-28'>\n          <SegmentedControl\n            value={segment}\n            onChangeValue={setSegment}\n            options={['Create new', 'Copy existing']}\n          />\n        </div>\n        {segment === 0 && <EditableCreateNew onSubmit={handleSubmit} />}\n        {segment === 1 && <EditableCopyExisting onSubmit={handleSubmit} />}\n      </div>\n    </Popup>\n  )\n}\n\nexport default EditablePopupProps\n","import React, { ReactNode, Ref, forwardRef } from 'react'\n\nimport Icon from '../icon'\nimport classnames from 'classnames'\nimport css from './style.module.css'\nimport { useMouseDown } from '../../core/hooks'\n\ntype IconButtonProps = {\n  active?: boolean\n  disabled?: boolean\n  className?: string\n  data?: string\n  tip?: string\n  onPress?: Fn\n  children?: ReactNode\n}\n\nconst BaseIconButton = (\n  {\n    active,\n    data,\n    disabled,\n    className,\n    children,\n    onPress,\n    tip\n  }: IconButtonProps,\n  ref: Ref<HTMLDivElement>\n) => {\n  const handlePress = useMouseDown(() => {\n    onPress?.(data)\n  })\n\n  return (\n    <div\n      ref={ref}\n      className={classnames(\n        's-32 rounded-default bg-transparent cursor-pointer flex items-center justify-center transition-colors duration-250 hover:bg-blue-100 hover:text-blue-500',\n        {\n          'text-blue-500 bg-blue-highlight': active,\n          'pointer-events-none opacity-50': disabled,\n          [css.tooltip]: !!tip?.length\n        },\n        className\n      )}\n      data-tip={tip}\n      onMouseDown={handlePress}\n    >\n      <Icon className='s-20'>{children}</Icon>\n    </div>\n  )\n}\n\nconst IconButton = forwardRef(BaseIconButton)\n\nexport default IconButton\n","import React, { FC } from 'react'\n\nconst IconGroup: FC = ({ children }) => {\n  return <div className='px-16 flex items-center space-x-4'>{children}</div>\n}\n\nexport default IconGroup\n","import { ImageDimensions, notNil, parseNumber } from '../../../core/utils'\nimport React, {\n  ChangeEvent,\n  FC,\n  MutableRefObject,\n  useCallback,\n  useState\n} from 'react'\n\nimport Button from '../../button'\nimport Field from '../../field'\nimport Icon from '../../icon'\nimport Popup from '../../popup'\nimport { TiTimes } from '@react-icons/all-files/ti/TiTimes'\n\ntype ImageSizePopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  onRequestClose: Fn\n  onSubmitEditing?: (value: ImageDimensions, label?: string) => void\n}\n\nconst ImageSizePopup: FC<ImageSizePopupProps> = ({\n  anchorRef,\n  isVisible,\n  onRequestClose,\n  onSubmitEditing\n}) => {\n  const [width, setWidth] = useState(100)\n  const [height, setHeight] = useState(100)\n  const [label, setLabel] = useState('')\n\n  const isValid =\n    notNil(width) && notNil(height) && !!label?.length && width * height > 0\n\n  const handleChangeWidth = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setWidth(parseNumber(e.target.value))\n  }, [])\n\n  const handleChangeHeight = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setHeight(parseNumber(e.target.value))\n  }, [])\n\n  const handleChangeLabel = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLabel(e.target.value)\n  }, [])\n\n  const handleRequestClose = useCallback(() => {\n    setWidth(100)\n    setHeight(100)\n    onRequestClose?.()\n  }, [onRequestClose])\n\n  const handlePressSubmit = useCallback(() => {\n    onSubmitEditing?.(\n      {\n        width,\n        height\n      },\n      label\n    )\n    handleRequestClose()\n  }, [handleRequestClose, height, label, onSubmitEditing, width])\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={handleRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default p-8 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        <div>\n          <Field label='Label' className='mb-8'>\n            <input\n              value={label}\n              onChange={handleChangeLabel}\n              placeholder='Image upload label'\n            />\n          </Field>\n        </div>\n        <span className='text-blue-500 block mb-4 text-subhead font-medium'>\n          Dimensions\n        </span>\n        <div className='flex items-center justify-between space-x-4 mb-8'>\n          <div className='h-32 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n            <input\n              className='border-none h-full w-40 px-6 bg-transparent font-medium m-0'\n              placeholder='0'\n              value={width}\n              onChange={handleChangeWidth}\n            />\n            <div className='flex s-32 bg-transparent text-gray-300 items-center justify-center text-subhead font-semibold'>\n              PX\n            </div>\n          </div>\n          <Icon>\n            <TiTimes />\n          </Icon>\n          <div className='h-32 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n            <input\n              className='border-none h-full w-40 px-6 bg-transparent font-medium m-0'\n              placeholder='0'\n              value={height}\n              onChange={handleChangeHeight}\n            />\n            <div className='flex s-32 bg-transparent text-gray-300 items-center justify-center text-subhead font-semibold'>\n              PX\n            </div>\n          </div>\n        </div>\n        <div className='flex justify-end'>\n          <Button\n            disabled={!isValid}\n            className='h-32'\n            onPress={handlePressSubmit}\n          >\n            Insert\n          </Button>\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default ImageSizePopup\n","import React, { FC, MutableRefObject, useCallback } from 'react'\nimport { FiInbox } from '@react-icons/all-files/fi/FiInbox'\nimport { useOrphanNodes } from '../../../core/hooks'\nimport Icon from '../../icon'\nimport Popup from '../../popup'\nimport { FaRegTrashAlt } from '@react-icons/all-files/fa/FaRegTrashAlt'\n\ntype OrphanNodesPopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  onRequestClose: Fn\n}\n\nconst OrphanNodesPopup: FC<OrphanNodesPopupProps> = ({\n  anchorRef,\n  isVisible,\n  onRequestClose\n}) => {\n  const [orphanNodes, setOrphanNodes] = useOrphanNodes()\n\n  const handlePressDelete = useCallback(\n    (id: string) => {\n      const eventualValue = [...orphanNodes]\n      const index = eventualValue.findIndex((o) => o.id === id)\n\n      if (!~index) {\n        return\n      }\n\n      eventualValue.splice(index, 1)\n      setOrphanNodes(eventualValue)\n    },\n    [orphanNodes, setOrphanNodes]\n  )\n\n  return (\n    <Popup\n      position='down'\n      alignment='end'\n      isVisible={isVisible}\n      onRequestClose={onRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default p-8 space-y-8 w-320 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        {!orphanNodes.length && (\n          <div className='flex flex-col items-center justify-center text-center py-20 space-y-4'>\n            <Icon className='text-blue-500 s-28'>\n              <FiInbox />\n            </Icon>\n            <div className='text-heading-2 font-medium'>Spick and span!</div>\n            <div className='text-subhead'>\n              Choose the <span className='text-blue-500'>Save to Icebox</span>{' '}\n              option to create standalone editables that do not appear in the\n              document.\n            </div>\n          </div>\n        )}\n        <div className='space-y-4'>\n          {orphanNodes.map(({ id, defaultValue }) => (\n            <div\n              key={id as any}\n              className='rounded-default bg-blue-500 text-white font-medium px-8 py-8 flex items-center'\n            >\n              <div className='flex-1'>{defaultValue}</div>\n              <Icon\n                onPress={() => handlePressDelete(id as any)}\n                className='cursor-pointer text-white opacity-50 transition-opacity duration-250 hover:opacity-100'\n              >\n                <FaRegTrashAlt />\n              </Icon>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default OrphanNodesPopup\n","import React, {\n  FC,\n  MutableRefObject,\n  PropsWithChildren,\n  useCallback\n} from 'react'\nimport Popup from '../../popup'\nimport classnames from 'classnames'\nimport { HeadingFormatType } from '../../../core/tools'\nimport { nil } from '../../../core/utils'\nimport { useMouseDown } from '../../../core/hooks'\n\ntype TextSizePopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  value: HeadingFormatType\n  onPressOption?: (value: HeadingFormatType) => void\n  onRequestClose: Fn\n}\n\ntype TextSizeOptionProps = PropsWithChildren<{\n  active?: boolean\n  onPress?: Fn\n}>\n\nconst TextSizeOption: FC<TextSizeOptionProps> = ({\n  active,\n  children,\n  onPress\n}) => {\n  const handlePress = useMouseDown(onPress)\n\n  return (\n    <div\n      className={classnames(\n        'cursor-pointer h-40 px-20 flex items-center font-medium bg-transparent transition-colors duration-250 hover:bg-blue-100 hover:text-blue-500',\n        {\n          'text-blue-500 bg-blue-highlight': active\n        }\n      )}\n      onMouseDown={handlePress}\n    >\n      {children}\n    </div>\n  )\n}\n\nconst TextSizePopup: FC<TextSizePopupProps> = ({\n  anchorRef,\n  isVisible,\n  value,\n  onPressOption,\n  onRequestClose\n}) => {\n  const handlePressOption = useCallback(\n    (option?: HeadingFormatType) => {\n      onPressOption?.(option)\n      onRequestClose?.()\n    },\n    [onPressOption, onRequestClose]\n  )\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={onRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default w-144 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        <TextSizeOption active={nil(value)} onPress={() => handlePressOption()}>\n          <span className='-ml-1'>Normal</span>\n        </TextSizeOption>\n        <TextSizeOption\n          active={value === 'heading-three'}\n          onPress={() => handlePressOption('heading-three')}\n        >\n          <span className='text-headline -ml-1'>Heading 3</span>\n        </TextSizeOption>\n        <TextSizeOption\n          active={value === 'heading-two'}\n          onPress={() => handlePressOption('heading-two')}\n        >\n          <span className='text-heading-3 -ml-1'>Heading 2</span>\n        </TextSizeOption>\n        <TextSizeOption\n          active={value === 'heading-one'}\n          onPress={() => handlePressOption('heading-one')}\n        >\n          <span className='text-heading-2 -ml-1'>Heading 1</span>\n        </TextSizeOption>\n      </div>\n    </Popup>\n  )\n}\n\nexport default TextSizePopup\n","import {\n  BlockAlignment,\n  EditableAttributes,\n  EditableRefAttributes,\n  HeadingFormatType,\n  LeafFormatType,\n  createEditableNode,\n  decreaseIndentation,\n  focusEditor,\n  increaseIndentation,\n  insertEditableBlock,\n  insertImageBlock,\n  isBlockActive,\n  isMarkActive,\n  setAlignment,\n  setConditionActive,\n  toggleBlockActive,\n  toggleColorMarkActive,\n  toggleMarkActive,\n  unsetConditionActive\n} from '../../core/tools'\nimport { ImageDimensions, nil, notNil } from '../../core/utils'\nimport ImagePopup, { ImageProps } from '../popups/image'\nimport React, { FC, Fragment, useCallback, useRef } from 'react'\nimport {\n  useAlignmentValue,\n  useCanRedo,\n  useCanUndo,\n  useConditionActive,\n  useEditor,\n  useLeafColorValue,\n  useMouseDown,\n  useOrphanNodes,\n  usePopupUtils,\n  useTextSizeValue\n} from '../../core/hooks'\n\nimport { ALIGNMENTS } from '../../core/constants'\nimport ColorPopup from '../popups/color'\nimport ConditionPopup from '../popups/condition'\nimport EditablePopupProps from '../popups/editable'\nimport { FiInbox } from '@react-icons/all-files/fi/FiInbox'\nimport { GrRedo } from '@react-icons/all-files/gr/GrRedo'\nimport { GrUndo } from '@react-icons/all-files/gr/GrUndo'\nimport { HistoryEditor } from 'slate-history'\nimport Icon from '../icon'\nimport IconButton from '../icon-button'\nimport IconGroup from '../icon-group'\nimport ImageSizePopup from '../popups/image-size'\nimport { MdFormatAlignCenter } from '@react-icons/all-files/md/MdFormatAlignCenter'\nimport { MdFormatAlignJustify } from '@react-icons/all-files/md/MdFormatAlignJustify'\nimport { MdFormatAlignLeft } from '@react-icons/all-files/md/MdFormatAlignLeft'\nimport { MdFormatAlignRight } from '@react-icons/all-files/md/MdFormatAlignRight'\nimport { MdFormatBold } from '@react-icons/all-files/md/MdFormatBold'\nimport { MdFormatIndentDecrease } from '@react-icons/all-files/md/MdFormatIndentDecrease'\nimport { MdFormatIndentIncrease } from '@react-icons/all-files/md/MdFormatIndentIncrease'\nimport { MdFormatItalic } from '@react-icons/all-files/md/MdFormatItalic'\nimport { MdFormatListBulleted } from '@react-icons/all-files/md/MdFormatListBulleted'\nimport { MdFormatListNumbered } from '@react-icons/all-files/md/MdFormatListNumbered'\nimport { MdFormatSize } from '@react-icons/all-files/md/MdFormatSize'\nimport { MdFormatStrikethrough } from '@react-icons/all-files/md/MdFormatStrikethrough'\nimport { MdFormatUnderlined } from '@react-icons/all-files/md/MdFormatUnderlined'\nimport { MdTextFields } from '@react-icons/all-files/md/MdTextFields'\nimport { MdTransform } from '@react-icons/all-files/md/MdTransform'\nimport OrphanNodesPopup from '../popups/orphan-nodes'\nimport { RiImage2Fill } from '@react-icons/all-files/ri/RiImage2Fill'\nimport { RiImageEditFill } from '@react-icons/all-files/ri/RiImageEditFill'\nimport TextSizePopup from '../popups/text-size'\nimport { Transforms } from 'slate'\nimport classnames from 'classnames'\n\nconst Toolbar: FC = () => {\n  const editor = useEditor()\n  const editorSelection = useRef(editor.selection)\n\n  const textSizePopupAnchorRef = useRef(null)\n  const colorPopupAnchorRef = useRef(null)\n  const imagePopupAnchorRef = useRef(null)\n  const imageSizePopupAnchorRef = useRef(null)\n  const conditionPopupAnchorRef = useRef(null)\n  const orphanNodesPopupAnchorRef = useRef(null)\n\n  const textSizePopup = usePopupUtils()\n  const colorPopup = usePopupUtils()\n  const imagePopup = usePopupUtils()\n  const imageSizePopup = usePopupUtils()\n  const editablePopup = usePopupUtils()\n  const conditionPopup = usePopupUtils()\n  const orphanNodesPopup = usePopupUtils()\n\n  const textSizeValue = useTextSizeValue()\n  const leafColorValue = useLeafColorValue()\n  const alignmentValue = useAlignmentValue()\n  const canUndo = useCanUndo()\n  const canRedo = useCanRedo()\n  const conditionActive = useConditionActive()\n\n  const [, setOrphanNodes] = useOrphanNodes()\n\n  const handleChangeTextSizeOption = useCallback(\n    (value: HeadingFormatType) => {\n      const prevValue = textSizeValue?.name\n\n      if (value === prevValue) {\n        return\n      }\n\n      if (notNil(prevValue)) {\n        toggleBlockActive(editor, prevValue)\n      }\n\n      if (notNil(value)) {\n        toggleBlockActive(editor, value)\n      }\n\n      focusEditor(editor)\n    },\n    [editor, textSizeValue]\n  )\n\n  const handleChangeColorOption = useCallback(\n    (value: string, focus = true) => {\n      const prevValue = leafColorValue\n\n      if (value === prevValue) {\n        return\n      }\n\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      if (notNil(prevValue)) {\n        toggleColorMarkActive(editor, prevValue)\n      }\n\n      if (notNil(value)) {\n        toggleColorMarkActive(editor, value)\n      }\n\n      editorSelection.current = editor.selection\n\n      if (focus) {\n        focusEditor(editor)\n      }\n    },\n    [editor, leafColorValue]\n  )\n\n  const handleCreateImage = useCallback(\n    (value: ImageProps) => {\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      insertImageBlock(editor, value)\n      focusEditor(editor)\n    },\n    [editor]\n  )\n\n  const handleCreateEditableImage = useCallback(\n    (value: ImageDimensions, label: string) => {\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      insertImageBlock(editor, { dimensions: value, label }, true)\n      focusEditor(editor)\n    },\n    [editor]\n  )\n\n  const handleCreateEditable = useCallback(\n    (value: EditableAttributes, isOrphan = false) => {\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      if (isOrphan) {\n        const editableNode = createEditableNode(value, true)\n        setOrphanNodes((o) => [editableNode, ...o])\n      } else {\n        insertEditableBlock(editor, value)\n      }\n\n      focusEditor(editor)\n    },\n    [editor, setOrphanNodes]\n  )\n\n  const handleSetConditionActive = useCallback(\n    (value: EditableRefAttributes) => {\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      setConditionActive(editor, value)\n      focusEditor(editor)\n    },\n    [editor]\n  )\n\n  const handlePressTextSize = useMouseDown(() => {\n    textSizePopup.open()\n  })\n\n  const handlePressColor = useMouseDown(() => {\n    editorSelection.current = editor.selection\n    colorPopup.open()\n  })\n\n  const handlePressImage = useMouseDown(() => {\n    editorSelection.current = editor.selection\n    imagePopup.open()\n  })\n\n  const handlePressEditableImage = useMouseDown(() => {\n    editorSelection.current = editor.selection\n    imageSizePopup.open()\n  })\n\n  const handlePressInsertEditable = useMouseDown(() => {\n    editorSelection.current = editor.selection\n    editablePopup.open()\n  })\n\n  const handlePressCondition = useMouseDown(() => {\n    if (conditionActive) {\n      unsetConditionActive(editor)\n      return\n    }\n\n    editorSelection.current = editor.selection\n    conditionPopup.open()\n  })\n\n  const handlePressInlineFormat = useCallback(\n    (format: LeafFormatType) => {\n      toggleMarkActive(editor, format)\n    },\n    [editor]\n  )\n\n  const handlePressAlignment = useCallback(\n    (value?: BlockAlignment) => {\n      setAlignment(editor, value)\n    },\n    [editor]\n  )\n\n  const handlePressIncreaseIndentation = useCallback(() => {\n    increaseIndentation(editor)\n  }, [editor])\n\n  const handlePressDecreaseIndentation = useCallback(() => {\n    decreaseIndentation(editor)\n  }, [editor])\n\n  const handlePressNumberedList = useCallback(() => {\n    toggleBlockActive(editor, 'numbered-list')\n  }, [editor])\n\n  const handlePressBulletedList = useCallback(() => {\n    toggleBlockActive(editor, 'bulleted-list')\n  }, [editor])\n\n  const handlePressUndo = useCallback(() => {\n    HistoryEditor.undo(editor)\n  }, [editor])\n\n  const handlePressRedo = useCallback(() => {\n    HistoryEditor.redo(editor)\n  }, [editor])\n\n  return (\n    <Fragment>\n      <div className='border-t border-b border-solid border-gray-300 py-20 px-60 bg-blue-50 flex items-center divide-x divide-gray-300 text-gray-500'>\n        <div className='font-medium flex items-center'>\n          <div\n            ref={textSizePopupAnchorRef}\n            className='flex items-center w-144 space-x-4 flex-1'\n            onMouseDown={handlePressTextSize}\n          >\n            <Icon>\n              <MdFormatSize />\n            </Icon>\n            <span className='flex-1 cursor-pointer transition-colors duration-250 hover:text-blue-500'>\n              {textSizeValue?.label || 'Normal'}\n            </span>\n          </div>\n          <div\n            ref={colorPopupAnchorRef}\n            className={classnames(\n              's-28 cursor-pointer border-2 border-solid border-white mx-16 rounded-full shadow-2 transition-colors duration-250',\n              {\n                'bg-black': nil(leafColorValue)\n              }\n            )}\n            style={{ backgroundColor: leafColorValue }}\n            onMouseDown={handlePressColor}\n          />\n        </div>\n        <IconGroup>\n          <IconButton\n            data='bold'\n            tip='Bold'\n            active={isMarkActive(editor, 'bold')}\n            onPress={handlePressInlineFormat}\n          >\n            <MdFormatBold />\n          </IconButton>\n          <IconButton\n            data='italic'\n            tip='Italic'\n            active={isMarkActive(editor, 'italic')}\n            onPress={handlePressInlineFormat}\n          >\n            <MdFormatItalic />\n          </IconButton>\n          <IconButton\n            data='underline'\n            tip='Underline'\n            active={isMarkActive(editor, 'underline')}\n            onPress={handlePressInlineFormat}\n          >\n            <MdFormatUnderlined />\n          </IconButton>\n          <IconButton\n            data='strikethrough'\n            tip='Strikethrough'\n            active={isMarkActive(editor, 'strikethrough')}\n            onPress={handlePressInlineFormat}\n          >\n            <MdFormatStrikethrough />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Align left'\n            active={nil(alignmentValue) || alignmentValue === ALIGNMENTS.left}\n            onPress={handlePressAlignment}\n          >\n            <MdFormatAlignLeft />\n          </IconButton>\n          <IconButton\n            data='center'\n            tip='Align center'\n            active={alignmentValue === ALIGNMENTS.center}\n            onPress={handlePressAlignment}\n          >\n            <MdFormatAlignCenter />\n          </IconButton>\n          <IconButton\n            data='right'\n            tip='Align right'\n            active={alignmentValue === ALIGNMENTS.right}\n            onPress={handlePressAlignment}\n          >\n            <MdFormatAlignRight />\n          </IconButton>\n          <IconButton\n            data='justify'\n            tip='Justify'\n            active={alignmentValue === ALIGNMENTS.justify}\n            onPress={handlePressAlignment}\n          >\n            <MdFormatAlignJustify />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Decrease indent'\n            onPress={handlePressDecreaseIndentation}\n          >\n            <MdFormatIndentDecrease />\n          </IconButton>\n          <IconButton\n            tip='Increase indent'\n            onPress={handlePressIncreaseIndentation}\n          >\n            <MdFormatIndentIncrease />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Numbered list'\n            active={isBlockActive(editor, 'numbered-list')}\n            onPress={handlePressNumberedList}\n          >\n            <MdFormatListNumbered />\n          </IconButton>\n          <IconButton\n            tip='Bulleted list'\n            active={isBlockActive(editor, 'bulleted-list')}\n            onPress={handlePressBulletedList}\n          >\n            <MdFormatListBulleted />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Insert an image'\n            ref={imagePopupAnchorRef}\n            active={imagePopup.visible}\n            onPress={handlePressImage}\n          >\n            <RiImage2Fill />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Insert an editable image'\n            ref={imageSizePopupAnchorRef}\n            active={imageSizePopup.visible}\n            onPress={handlePressEditableImage}\n            className='border border-dotted border-gray-500'\n          >\n            <RiImageEditFill />\n          </IconButton>\n          <IconButton\n            tip='Insert editable content'\n            active={editablePopup.visible}\n            className='border border-dotted border-gray-500'\n            onPress={handlePressInsertEditable}\n          >\n            <MdTextFields />\n          </IconButton>\n          <IconButton\n            tip='Add a display condition'\n            ref={conditionPopupAnchorRef}\n            active={conditionActive || conditionPopup.visible}\n            onPress={handlePressCondition}\n            className='border border-dotted border-gray-500'\n          >\n            <MdTransform />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton tip='Undo' onPress={handlePressUndo} disabled={!canUndo}>\n            <GrUndo />\n          </IconButton>\n          <IconButton tip='Redo' onPress={handlePressRedo} disabled={!canRedo}>\n            <GrRedo />\n          </IconButton>\n        </IconGroup>\n        <div className='flex flex-1 items-center justify-end border-none'>\n          <IconButton\n            tip='Open Icebox'\n            ref={orphanNodesPopupAnchorRef}\n            active={orphanNodesPopup.visible}\n            onPress={orphanNodesPopup.open}\n          >\n            <FiInbox />\n          </IconButton>\n        </div>\n      </div>\n      <TextSizePopup\n        anchorRef={textSizePopupAnchorRef}\n        isVisible={textSizePopup.visible}\n        value={textSizeValue?.name}\n        onPressOption={handleChangeTextSizeOption}\n        onRequestClose={textSizePopup.close}\n      />\n      <ColorPopup\n        anchorRef={colorPopupAnchorRef}\n        isVisible={colorPopup.visible}\n        value={leafColorValue}\n        onChangeColorOption={handleChangeColorOption}\n        onRequestClose={colorPopup.close}\n      />\n      <ImagePopup\n        anchorRef={imagePopupAnchorRef}\n        isVisible={imagePopup.visible}\n        onRequestClose={imagePopup.close}\n        onSubmitEditing={handleCreateImage}\n      />\n      <ImageSizePopup\n        anchorRef={imageSizePopupAnchorRef}\n        isVisible={imageSizePopup.visible}\n        onRequestClose={imageSizePopup.close}\n        onSubmitEditing={handleCreateEditableImage}\n      />\n      <EditablePopupProps\n        isVisible={editablePopup.visible}\n        onRequestClose={editablePopup.close}\n        onSubmit={handleCreateEditable}\n      />\n      <ConditionPopup\n        anchorRef={conditionPopupAnchorRef}\n        isVisible={conditionPopup.visible}\n        onRequestClose={conditionPopup.close}\n        onSubmitEditing={handleSetConditionActive}\n      />\n      <OrphanNodesPopup\n        anchorRef={orphanNodesPopupAnchorRef}\n        isVisible={orphanNodesPopup.visible}\n        onRequestClose={orphanNodesPopup.close}\n      />\n    </Fragment>\n  )\n}\n\nexport default Toolbar\n","import { Editor, Element as SlateElement, Transforms } from 'slate'\n\nimport { ReactEditor } from 'slate-react'\nimport { jsx } from 'slate-hyperscript'\n\nconst ELEMENT_TAGS = {\n  A: (element: Element) => ({\n    type: 'link',\n    url: element.getAttribute('href')\n  }),\n  BLOCKQUOTE: () => ({ type: 'quote' }),\n  H1: () => ({ type: 'heading-one' }),\n  H2: () => ({ type: 'heading-two' }),\n  H3: () => ({ type: 'heading-three' }),\n  H4: () => ({ type: 'heading-four' }),\n  H5: () => ({ type: 'heading-five' }),\n  H6: () => ({ type: 'heading-six' }),\n  IMG: (element: Element) => ({\n    type: 'image',\n    url: element.getAttribute('src')\n  }),\n  LI: () => ({ type: 'list-item' }),\n  OL: () => ({ type: 'numbered-list' }),\n  P: () => ({ type: 'paragraph' }),\n  PRE: () => ({ type: 'code' }),\n  UL: () => ({ type: 'bulleted-list' })\n}\n\nconst TEXT_TAGS = {\n  CODE: () => ({ code: true }),\n  DEL: () => ({ strikethrough: true }),\n  EM: () => ({ italic: true }),\n  I: () => ({ italic: true }),\n  S: () => ({ strikethrough: true }),\n  STRONG: () => ({ bold: true }),\n  U: () => ({ underline: true })\n}\n\nexport const deserializeHTML = (el: ChildNode) => {\n  if (el.nodeType === 3) {\n    return el.textContent\n  } else if (el.nodeType !== 1) {\n    return null\n  } else if (el.nodeName === 'BR') {\n    return '\\n'\n  }\n\n  const { nodeName } = el\n  let parent = el\n\n  if (\n    nodeName === 'PRE' &&\n    el.childNodes[0] &&\n    el.childNodes[0].nodeName === 'CODE'\n  ) {\n    parent = el.childNodes[0]\n  }\n\n  const children = Array.from(parent.childNodes).map(deserializeHTML).flat()\n\n  if (el.nodeName === 'BODY') {\n    return jsx('fragment', {}, children)\n  }\n\n  if (ELEMENT_TAGS[nodeName]) {\n    const attrs = ELEMENT_TAGS[nodeName](el)\n    return jsx('element', attrs, children)\n  }\n\n  if (TEXT_TAGS[nodeName]) {\n    const attrs = TEXT_TAGS[nodeName](el)\n    return children.map((child) => jsx('text', attrs, child))\n  }\n\n  return children\n}\n\nexport const withHTML = (editor: Editor & ReactEditor) => {\n  const { insertData, isInline, isVoid } = editor\n\n  editor.isInline = (element: SlateElement) => {\n    return ['link', 'image'].includes(element.type as string)\n      ? true\n      : isInline(element)\n  }\n\n  editor.isVoid = (element) => {\n    return element.type === 'image' ? true : isVoid(element)\n  }\n\n  editor.insertData = (data) => {\n    const html = data.getData('text/html')\n    const rtf = data.getData('text/rtf')\n    console.log(rtf)\n\n    if (html) {\n      const parsed = new DOMParser().parseFromString(html, 'text/html')\n      // console.log(parsed)\n      const fragment = deserializeHTML(parsed.body)\n      Transforms.insertFragment(editor, fragment)\n      return\n    }\n\n    insertData(data)\n  }\n\n  return editor\n}\n","import 'tailwindcss/tailwind.css'\n\nimport { DocmakerData, SlateEditorType, toggleMarkActive } from './core/tools'\nimport { Editable, Slate, withReact } from 'slate-react'\nimport { Node, createEditor } from 'slate'\nimport React, {\n  KeyboardEvent,\n  useCallback,\n  useMemo,\n  useRef,\n  useState\n} from 'react'\nimport { stripHTMLEntities, toDate } from './core/utils'\n\nimport { HOT_KEYS } from './core/constants'\nimport Header from './modules/header'\nimport OrphanNodesContext from './core/contexts/orphan-nodes'\nimport TemplateEditor from './modules/template-editor'\nimport TemplateElement from './modules/template-element'\nimport TemplateLeaf from './modules/template-leaf'\nimport Toolbar from './modules/toolbar'\nimport classnames from 'classnames'\nimport isHotkey from 'is-hotkey'\n// import { jsx } from 'slate-hyperscript'\n// import { withDocxDeserializer } from 'slate-docx-deserializer'\nimport { withEditable } from './core/plugins/editable'\nimport { withHTML } from './core/plugins/paste-html'\nimport { withHistory } from 'slate-history'\n\ninterface Props {\n  className?: string\n  initialValue?: DocmakerData\n  onSubmitChanges?: (data: DocmakerData) => void\n}\n\nexport const DocmakerEditor = ({\n  className,\n  initialValue,\n  onSubmitChanges\n}: Props) => {\n  const initialData = useRef(initialValue || ({} as DocmakerData)).current\n  const editor = useMemo(\n    () => withHTML(withEditable(withReact(withHistory(createEditor())))),\n    []\n  )\n  const createdAt = useRef(toDate(initialData.createdAt).toISOString()).current\n\n  const [title, setTitle] = useState(initialData.title || '')\n  const [orphanNodes, setOrphanNodes] = useState<Array<Node>>(\n    initialData.orphans || []\n  )\n  const [editorState, setEditorState] = useState<Array<Node>>(\n    initialData.nodes?.length\n      ? initialData.nodes\n      : [\n          {\n            type: 'paragraph',\n            children: [{ text: '' }]\n          }\n        ]\n  )\n\n  const renderElement = useCallback(\n    (props) => <TemplateElement {...props} />,\n    []\n  )\n\n  const renderLeaf = useCallback((props) => <TemplateLeaf {...props} />, [])\n\n  const handleEditorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      for (const hotkey in HOT_KEYS) {\n        if (isHotkey(hotkey, event as any)) {\n          event.preventDefault()\n          const mark = HOT_KEYS[hotkey]\n          toggleMarkActive(editor as SlateEditorType, mark)\n        }\n      }\n    },\n    [editor]\n  )\n\n  const handlePressSave = useCallback(() => {\n    onSubmitChanges?.({\n      title: stripHTMLEntities(title),\n      createdAt,\n      nodes: editorState as any,\n      orphans: orphanNodes as any\n    })\n  }, [onSubmitChanges, title, createdAt, editorState, orphanNodes])\n\n  return (\n    <div className={classnames('font-sans', className)}>\n      <OrphanNodesContext.Provider value={[orphanNodes, setOrphanNodes]}>\n        <Slate editor={editor} value={editorState} onChange={setEditorState}>\n          <div className='sticky top-0'>\n            <Header\n              title={title}\n              createdAt={createdAt}\n              onChangeTitle={setTitle}\n              onPressSave={handlePressSave}\n            />\n            <Toolbar />\n          </div>\n          <TemplateEditor>\n            <Editable\n              spellCheck\n              placeholder='Start typing...'\n              renderElement={renderElement}\n              renderLeaf={renderLeaf}\n              onKeyDown={handleEditorKeydown}\n            />\n          </TemplateEditor>\n        </Slate>\n      </OrphanNodesContext.Provider>\n    </div>\n  )\n}\n","import { Editor, Element as SlateElement } from 'slate'\nimport { ReactEditor } from 'slate-react'\n\nexport const withEditable = (editor: Editor & ReactEditor) => {\n  const { isInline, isVoid } = editor\n\n  editor.isInline = (element: SlateElement) => {\n    return element.type === 'editable' ? true : isInline(element)\n  }\n\n  editor.isVoid = (element: SlateElement) => {\n    return element.type === 'editable' ? true : isVoid(element)\n  }\n\n  return editor\n}\n","import React from 'react'\n\nimport { DocmakerEditor } from 'react-docmaker'\nimport 'react-docmaker/dist/index.css'\n\nconst App = () => {\n  return <DocmakerEditor onSubmitChanges={console.log} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}