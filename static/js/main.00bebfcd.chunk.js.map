{"version":3,"sources":["../../src/core/constants/index.ts","../../src/core/utils/index.ts","../../src/core/tools/index.ts","../../src/modules/button/index.tsx","../../src/modules/header/index.tsx","../../src/core/contexts/orphan-nodes.ts","../../src/modules/template-editor/index.tsx","../../src/modules/elements/image/index.tsx","../../src/modules/elements/editable/index.tsx","../../src/modules/elements/table/utils/selection.ts","../../src/modules/elements/table/utils/options.ts","../../src/modules/elements/table/modules/horizontal-toolbar/index.tsx","../../src/modules/elements/table/modules/vertical-toolbar/index.tsx","../../src/modules/elements/table/modules/table-body/index.tsx","../../src/modules/elements/table/utils/commands.ts","../../src/core/hooks/index.ts","../../src/modules/icon/index.tsx","../../src/modules/icon-button/index.tsx","../../src/modules/icon-group/index.tsx","../../src/modules/elements/table/modules/cardbar/index.tsx","../../src/modules/elements/table/modules/table-cardbar/index.tsx","../../src/modules/elements/table/modules/table-cell/index.tsx","../../src/modules/elements/table/index.tsx","../../src/modules/template-element/index.tsx","../../src/modules/template-leaf/index.tsx","../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/modules/popup/content/index.tsx","../../src/modules/popup/index.tsx","../../src/modules/popups/image/index.tsx","../../src/modules/popups/color/index.tsx","../../src/modules/field/index.tsx","../../src/modules/popups/condition/index.tsx","../../src/modules/segmented-control/index.tsx","../../src/modules/popups/editable/copy-existing/index.tsx","../../src/modules/switch/index.tsx","../../src/modules/popups/editable/create-new/index.tsx","../../src/modules/popups/editable/index.tsx","../../src/modules/popups/image-size/index.tsx","../../src/modules/popups/orphan-nodes/index.tsx","../../src/modules/popups/text-size/index.tsx","../../src/modules/toolbar/index.tsx","../../src/core/plugins/paste-html.ts","../../src/core/plugins/table.ts","../../src/index.tsx","../../src/core/plugins/editable.ts","App.tsx","index.tsx"],"names":["LIST_TYPES","HOT_KEYS","mod+b","mod+i","mod+u","mod+shift+x","PRESET_COLORS","EDITABLE_DATA_TYPES","text","options","radio","date","time","DATE_FORMATS","TIME_FORMATS","nil","value","notNil","clamp","min","max","Math","parseNumber","parsed","parseFloat","isNaN","formatDate","dateTime","token","format","Date","error","isHexColor","test","areEqualColors","left","right","replace","toLowerCase","generateUUID","uuidv4","isBlockActive","editor","Editor","nodes","match","n","isEditor","SlateElement","isElement","type","isMarkActive","marks","nodesInSelection","getMatchingNodesInSelection","o","isInline","editableNodes","marksResolution","editablesResolution","includes","length","map","every","getColorMark","marksValue","color","editablesValue","toggleMarkActive","removeMark","Transforms","unsetNodes","isVoid","setNodes","hanging","addMark","toggleColorMarkActive","existingMark","toggleBlockActive","unwrapNodes","split","isList","wrapNodes","children","focusEditor","ReactEditor","focus","composeWithClassName","attributes","className","classnames","composeWithAlignmentClassName","alignment","text-right","text-center","text-justify","composeWithStyle","style","getCurrentNode","selection","anchor","parentNode","path","getIndentation","currentNode","indentation","getIndentationPercent","composeWithEditable","editable","id","createEditableNode","isOrphan","editableNode","insertImageBlock","dimensions","label","imageNode","url","width","height","dataType","insertNodes","move","insertParagraph","at","getEditableAttributes","showTip","dateTimeFormat","multiline","tip","valueRef","parsedAttributes","defaultValue","getEditableAttributesValidity","copyExisting","getMatchingNodes","node","matching","push","generator","Array","from","isInSameTable","edges","end","startTable","endTable","Path","equals","createTableContent","elements","createTableCell","colspan","rowspan","content","key","createTableRow","columns","cellNodes","data","Button","memo","disabled","React","onClick","onPress","bg-blue-500","pointer-events-none bg-blue-300","h-40","Header","title","createdAt","onChangeTitle","onPressSave","editorRef","useRef","state","ContentEditable","innerRef","placeholder","html","current","onChange","event","target","innerHTML","onBlur","formatRelative","toUpperCase","substr","OrphanNodesContext","createContext","TemplateEditor","ImageElement","element","selected","useSelected","focused","useFocused","useMemo","src","shadow-outline","EditableElement","useEffect","fontSize","contentEditable","splittedTable","table","startKey","tableDepth","cells","cell","realPath","gridTable","insertPosition","i","y","x","j","k","_y","_x","slice","isReal","originPath","isInsertPosition","getCol","result","forEach","row","col","removeSelection","selectedCell","defaultWidth","defaultHeight","tableStyle","borderSpacing","Layout","wordBreak","startFromX","HorizontalToolbar","tableNode","ref","useEditor","useState","cols","setCols","widthFnObject","colsArray","currCol","td","querySelector","el","offsetWidth","offsetLeft","findIndex","dataset","leftSumWidth","reduce","p","c","filter","item","maxWidth","closest","onHandleDrag","useCallback","index","e","changedWidth","clientX","dragger","draggerWidth","savedChangedWidth","moreThanMinWidth","onHandleDragEnd","newCols","draggable","onMouseDown","document","body","addEventListener","onDragEnd","removeEventListener","startFromY","VerticalToolbar","rows","setRows","heightFnObject","rowsArray","currCell","offsetHeight","changedHeight","clientY","minHeight","draggerHeight","savedChangedHeight","moreThanMinHeight","newRows","TableBody","props","useSlate","resizeTable","querySelectorAll","setStartKey","startNode","ResizeToolbar","Fragment","borderless","onDragStart","preventDefault","getAttribute","onMouseMove","endKey","endNode","startPath","endPath","head","tail","tailPath","headPath","coverCols","onMouseUp","onMouseLeave","splitCell","yIndex","xIndex","startCell","endCell","yStart","yEnd","xStart","xEnd","sourceCells","selectedCols","s","filterColsObject","Object","values","newPath","newCell","insertAbove","checkInsertEnable","insertYIndex","insertCols","Map","set","originCol","newRow","size","insertBelow","insertPositionCol","next","insertLeft","checkInsertable","insertRight","mergeSelection","startPoint","start","selectedTable","selectedCount","t","currRow","selectedWidth","couldMerge","tmpContent","string","removeNodes","minRowHeight","Infinity","mergedGridTable","idx","allColumnIsReal","minColWidth","insertContents","removeColumn","startCol","xLeft","xRight","bottomRight","setSelection","point","removedGridTable","removeRow","yTop","yBottom","removeTable","toggleBorders","usePopupUtils","initialOpen","visible","setVisible","handleOpen","handleClose","handleToggle","open","close","toggle","useMouseDown","fn","useOrphanNodes","useContext","Icon","handlePress","s-16","Children","child","cloneElement","IconButton","forwardRef","active","text-blue-500 bg-blue-highlight","pointer-events-none opacity-50","IconGroup","defaultProps","exec","func","args","Cardbar","AiOutlineDelete","TableCardbar","run","action","delete","AiOutlineInsertRowAbove","AiOutlineInsertRowBelow","AiOutlineInsertRowLeft","AiOutlineInsertRowRight","AiOutlineMergeCells","AiOutlineDeleteColumn","AiOutlineDeleteRow","AiOutlineSplitCells","AiOutlineBorderInner","TableCell","dataKey","colSpan","rowSpan","position","minWidth","Table","existSelectedCell","range","onDrag","TemplateElement","paddingLeft","href","TemplateLeaf","leaf","bold","code","italic","underline","strikethrough","bg-green-highlight","Symbol","iterator","asyncIterator","Content","onLayoutUpdate","hideArrow","setDimensions","useLayoutEffect","css","container","getBoundingClientRect","computedDimensions","JSON","stringify","composedClassName","arrow","top","getViewportWidth","window","innerWidth","documentElement","clientWidth","getViewportHeight","innerHeight","clientHeight","getPositioningWithoutAnchor","viewportWidth","viewportHeight","Popup","anchorRef","contentClassName","transparent","distance","offsets","isVisible","overlayCloseOnClick","onRequestClose","popupContentPosition","setPopupContentPosition","handleClickOverlay","handleKeyUp","createPortal","contentPosition","anchorElement","anchorWidth","anchorHeight","anchorX","anchorY","yOffset","rightEdge","bottomEdge","getElementById","ImagePopup","onSubmitEditing","imageState","setImageState","scaleState","setScaleState","imageDimensions","setImageDimensions","decimalScale","handleChangeImageUrl","handleChangeScale","handleBlurImageInput","recover","Promise","resolve","img","createElement","onload","naturalWidth","naturalHeight","onerror","then","handleRequestClose","handlePressSubmit","BiLink","maxLength","ColorBox","ColorPopup","onChangeColorOption","colorState","setColorState","handlePressColorOption","option","selectedColor","replaceAll","handleChangeInput","inputValue","parsedColor","Field","ConditionPopup","orphanNodes","concat","parent","setParent","setValue","find","isValid","handleChangeParent","handleChangeValue","hidden","SegmentedControl","onChangeValue","text-gray-500 hover:text-gray-700","text-white","EditableCopyExisting","onSubmit","setValueRef","setDefaultValue","handleChangeValueRef","handleChangeDefaultValue","Switch","ReactSwitch","checked","offColor","onColor","checkedIcon","uncheckedIcon","handleDiameter","activeBoxShadow","EditableCreateNew","now","dataTypeOptions","entries","dateFormatOptions","timeFormatOptions","setDataType","setDateTimeFormat","setLabel","setMultiline","setOptions","editingOption","setEditingOption","setShowTip","setIsOrphan","setTip","handlePressDeleteOption","eventualValue","splice","handlePressAddOption","trim","groundValue","handleEditingOptionKeydown","handleChangeDataType","handleChangeDateTimeFormat","handleChangeEditingOption","handleChangeLabel","handleChangeTip","FaRegTrashAlt","onKeyDown","AiFillPlusCircle","EditablePopupProps","segment","setSegment","handleSubmit","ImageSizePopup","setWidth","setHeight","handleChangeWidth","handleChangeHeight","TiTimes","OrphanNodesPopup","setOrphanNodes","handlePressDelete","FiInbox","TextSizeOption","TextSizePopup","onPressOption","handlePressOption","Toolbar","editorSelection","textSizePopupAnchorRef","colorPopupAnchorRef","imagePopupAnchorRef","imageSizePopupAnchorRef","conditionPopupAnchorRef","orphanNodesPopupAnchorRef","textSizePopup","colorPopup","imagePopup","imageSizePopup","editablePopup","conditionPopup","orphanNodesPopup","textSizeValue","headingOneActive","headingTwoActive","headingThreeActive","name","leafColorValue","alignmentValue","canUndo","history","_editor$history","undos","canRedo","_editor$history2","redos","conditionActive","handleChangeTextSizeOption","prevValue","handleChangeColorOption","select","handleCreateImage","handleCreateEditableImage","handleCreateEditable","handleSetConditionActive","condition","handlePressTextSize","handlePressColor","handlePressImage","handlePressEditableImage","handlePressInsertEditable","handlePressInsertTable","above","isCollapsed","Range","handlePressCondition","handlePressInlineFormat","handlePressAlignment","handlePressIncreaseIndentation","handlePressDecreaseIndentation","handlePressNumberedList","handlePressBulletedList","handlePressUndo","HistoryEditor","undo","handlePressRedo","redo","MdFormatSize","bg-black","backgroundColor","MdFormatBold","MdFormatItalic","MdFormatUnderlined","MdFormatStrikethrough","MdFormatAlignLeft","MdFormatAlignCenter","MdFormatAlignRight","MdFormatAlignJustify","MdFormatIndentDecrease","MdFormatIndentIncrease","MdFormatListNumbered","MdFormatListBulleted","RiImage2Fill","AiOutlineTable","RiImageEditFill","MdTextFields","MdTransform","GrUndo","GrRedo","ELEMENT_TAGS","A","BLOCKQUOTE","H1","H2","H3","H4","H5","H6","IMG","LI","OL","P","PRE","UL","TABLE","TH","TR","TD","TEXT_TAGS","CODE","DEL","EM","I","S","STRONG","U","PreserveSpaceAfter","Set","PreserveSpaceBefore","DocmakerEditor","onSubmitChanges","initialData","initialValue","normalizeNode","entry","preserved","has","prev","previous","deleteBackward","deleteFragment","lastSelection","isTable","selectedCells","isInTable","isStart","insertData","getData","fragment","deserializeHTML","nodeType","sanitized","textContent","nodeName","childNodes","flat","jsx","attrs","DOMParser","parseFromString","fragmentWithOnlyBlocks","isArray","inlineNodes","newFragments","maybePushInlineNodeParagraph","Text","isText","insertFragment","withReact","withHistory","createEditor","toISOString","setTitle","orphans","editorState","setEditorState","renderElement","renderLeaf","handleEditorKeydown","hotkey","isHotkey","handlePressSave","Provider","Slate","Editable","spellCheck","App","console","log","ReactDOM","render"],"mappings":"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","file":"static/js/main.00bebfcd.chunk.js","sourcesContent":["export const LIST_TYPES = ['numbered-list', 'bulleted-list']\n\nexport const HOT_KEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+shift+x': 'strikethrough'\n}\n\nexport const PRESET_COLORS = [\n  '#FF6900',\n  '#FCB900',\n  '#7BDCB5',\n  '#00D084',\n  '#8ED1FC',\n  '#326FF3',\n  '#ABB8C3',\n  '#EB144C',\n  '#F78DA7',\n  '#9900EF'\n]\n\nexport const ALIGNMENTS = {\n  left: 'left',\n  right: 'right',\n  center: 'center',\n  justify: 'justify'\n}\n\nexport const INDENTATION_FACTOR = 3\n\nexport const EDITABLE_DATA_TYPES = {\n  text: 'Text',\n  options: 'Dropdown',\n  radio: 'Radio',\n  date: 'Date',\n  time: 'Time'\n}\n\nexport const DATE_FORMATS = [\n  'do MMMM, yyyy',\n  'dd MMMM, yyyy',\n  'MMMM dd, yyyy',\n  'dd/MM/yyyy',\n  'MM/dd/yyyy',\n  'MMM d, yyyy',\n  'dd MMM, yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy'\n]\n\nexport const TIME_FORMATS = ['hh:mm a', 'hh:mm aaaa', 'HH:mm']\n","import format from 'date-fns/format'\nimport formatRelative from 'date-fns/formatRelative'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport type ValidDate = Date | string | number\n\nexport type ImageDimensions = {\n  width: number\n  height: number\n}\n\n// ----------------------------------------------------------------\n// UTILITY\n// ----------------------------------------------------------------\n\nexport function nil<T>(value: T): boolean {\n  return typeof value === 'undefined' || value === null\n}\n\nexport function notNil<T>(value: T): boolean {\n  return !nil(value)\n}\n\nexport function getImageSizeAsync(url: string): Promise<ImageDimensions> {\n  if (!url) {\n    return null\n  }\n\n  return new Promise((resolve) => {\n    const img = document.createElement('img')\n\n    img.onload = () => {\n      resolve({ width: img.naturalWidth, height: img.naturalHeight })\n    }\n\n    img.onerror = () => {\n      resolve(null)\n    }\n\n    img.src = url\n  })\n}\n\n// ----------------------------------------------------------------\n// NUMBER\n// ----------------------------------------------------------------\nexport function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max)\n}\n\nexport function parseNumber(value: string): number {\n  if (nil(value)) {\n    return null\n  }\n\n  const parsed = parseFloat(value)\n  return isNaN(parsed) ? 0 : parsed\n}\n\n// ----------------------------------------------------------------\n// DATETIME\n// ----------------------------------------------------------------\n\nexport function fromNow(dateTime: ValidDate): string {\n  return formatRelative(new Date(dateTime), new Date())\n}\n\nexport function formatDate(dateTime: ValidDate, token = 'yyyy-MM-dd'): string {\n  if (nil(dateTime)) return undefined\n\n  try {\n    return format(\n      dateTime instanceof Date ? dateTime : new Date(dateTime),\n      token\n    )\n  } catch (error) {\n    return undefined\n  }\n}\n\nexport function toDate(dateTime: ValidDate): Date {\n  if (!dateTime) {\n    return new Date()\n  }\n\n  return dateTime instanceof Date ? dateTime : new Date(dateTime)\n}\n\n// ----------------------------------------------------------------\n// STRING\n// ----------------------------------------------------------------\n\nexport function toTitleCase(text: string) {\n  if (nil(text)) {\n    return text\n  }\n  return `${text[0]?.toUpperCase()}${text?.substr(1).toLowerCase()}`\n}\n\nexport function toCapitalizedFirst(text: string) {\n  if (nil(text)) {\n    return text\n  }\n  return `${text[0]?.toUpperCase()}${text?.substr(1)}`\n}\n\nexport function stripHTMLEntities(text: string) {\n  return text\n    ?.replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/\"/g, '&nbsp;')\n}\n\nexport function isHexColor(text: string) {\n  return /^#([0-9A-F]{3}){1,2}$/i.test(text)\n}\n\nexport function areEqualColors(left: string, right: string) {\n  left = left?.replace(/^#/gi, '')?.toLowerCase()\n  right = right?.replace(/^#/gi, '')?.toLowerCase()\n\n  return left === right\n}\n\nexport function getPlaceholderImage(width: number, height?: number) {\n  return `https://dummyimage.com/${width}x${height || width}/326FF3/FFFFFF`\n}\n\nexport function generateUUID() {\n  return uuidv4()\n}\n","import {\n  Editor,\n  Node,\n  NodeEntry,\n  Path,\n  Point,\n  Range,\n  Element as SlateElement,\n  Transforms\n} from 'slate'\nimport { INDENTATION_FACTOR, LIST_TYPES } from '../constants'\nimport { areEqualColors, clamp, generateUUID, nil, notNil } from '../utils'\n\nimport { CSSProperties } from 'react'\nimport { HistoryEditor } from 'slate-history'\nimport { ImageElementType } from '../../modules/elements/image'\nimport { ImageProps } from '../../modules/popups/image'\nimport { ReactEditor } from 'slate-react'\nimport classnames from 'classnames'\n\nexport type TableCell = {\n  type: 'table-cell'\n  key: string\n  rowspan?: number\n  colspan?: number\n  width?: number\n  height?: number\n  selectedCell?: boolean\n  children: Node[]\n} & SlateElement\n\nexport type TableRow = {\n  type: 'table-row'\n  key: string\n  data: any\n  children: TableCell[]\n} & SlateElement\n\nexport type TableContent = {\n  type: 'table-content'\n  children: Node[]\n} & SlateElement\n\nexport type Table = {\n  type: 'table'\n  children: TableRow[]\n  data: any\n  borderless?: boolean\n} & SlateElement\n\nexport type BlockAlignment = 'left' | 'center' | 'right' | 'justify'\n\nexport type LeafFormatType =\n  | 'bold'\n  | 'code'\n  | 'italic'\n  | 'underline'\n  | 'strikethrough'\n  | 'color'\n  | 'ref'\n\nexport type HeadingFormatType = 'heading-one' | 'heading-two' | 'heading-three'\n\nexport type ListFormatType = 'numbered-list' | 'bulleted-list'\n\nexport type QuoteFormatType = 'block-quote'\n\nexport type TableFormatType =\n  | 'table'\n  | 'table-content'\n  | 'table-row'\n  | 'table-cell'\n\nexport type ElementFormatType =\n  | HeadingFormatType\n  | ListFormatType\n  | QuoteFormatType\n  | TableFormatType\n\nexport type SlateEditorType = Editor & ReactEditor & HistoryEditor\n\nexport type EditableElementType<T> = {\n  id?: string\n  editable?: true\n} & T\n\nexport type EditableDataType =\n  | 'text'\n  | 'options'\n  | 'radio'\n  | 'time'\n  | 'date'\n  | 'image'\n\nexport type EditableOption = {\n  id: string\n  label: string\n}\n\nexport type EditableRefAttributes = {\n  parent: string\n  value: string\n}\n\nexport type EditableAttributes = Partial<{\n  dataType: EditableDataType\n  dateTimeFormat: string\n  defaultValue: string\n  label: string\n  multiline: boolean\n  options: Array<EditableOption>\n  tip: string\n  valueRef: string\n  ref: EditableRefAttributes\n  isOrphan: boolean\n  children: Array<EditableAttributes & { text: string }>\n}>\n\nexport type DocmakerNode = EditableElementType<\n  EditableAttributes & { text: string }\n>\n\nexport type DocmakerData = Partial<{\n  title: string\n  createdAt: string\n  nodes: Array<DocmakerNode>\n  orphans: Array<DocmakerNode>\n}>\n\nexport function isBlockActive(\n  editor: SlateEditorType,\n  format: ElementFormatType\n) {\n  const [match] = Editor.nodes(editor, {\n    match: (n) =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format\n  }) as any\n\n  return !!match\n}\n\nexport function isMarkActiveLegacy(\n  editor: SlateEditorType,\n  format: LeafFormatType\n) {\n  if (!editor) {\n    return null\n  }\n\n  const marks = Editor.marks(editor)\n\n  if (notNil(marks)) {\n    const value = marks[format]\n    return format === 'ref' ? notNil(value) : value === true\n  }\n\n  return false\n}\n\nexport function isMarkActive(editor: SlateEditorType, format: LeafFormatType) {\n  if (!editor) {\n    return null\n  }\n\n  const marks = Editor.marks(editor)\n  const nodesInSelection = getMatchingNodesInSelection(editor, (o) =>\n    Editor.isInline(editor, o)\n  )\n  const editableNodes = getMatchingNodesInSelection(\n    editor,\n    (o) => o.type === 'editable'\n  )\n\n  let marksResolution = false\n  let editablesResolution = false\n\n  if (notNil(marks)) {\n    const value = marks[format]\n    marksResolution = ['color', 'ref'].includes(format)\n      ? notNil(value)\n      : value === true\n  }\n\n  if (editableNodes?.length) {\n    editablesResolution = editableNodes\n      .map((o) =>\n        ['color', 'ref'].includes(format)\n          ? notNil(o[format])\n          : o[format] === true\n      )\n      .every((o) => o)\n  }\n\n  if (\n    nodesInSelection?.length &&\n    nodesInSelection.every((o) => editableNodes.includes(o))\n  ) {\n    return editablesResolution\n  }\n\n  return editableNodes?.length\n    ? editablesResolution && marksResolution\n    : marksResolution\n}\n\nexport function isColorMarkActive(editor: SlateEditorType) {\n  if (!editor) {\n    return null\n  }\n\n  const marks = Editor.marks(editor)\n  return marks ? notNil(marks.color) : false\n}\n\nexport function getColorMark(editor: SlateEditorType) {\n  if (!editor) {\n    return null\n  }\n\n  const marks = Editor.marks(editor)\n  const nodesInSelection = getMatchingNodesInSelection(editor, (o) =>\n    Editor.isInline(editor, o)\n  )\n  const editableNodes = getMatchingNodesInSelection(\n    editor,\n    (o) => o.type === 'editable'\n  )\n\n  const marksValue = marks?.color\n  let editablesValue = null\n\n  if (editableNodes?.length) {\n    editablesValue = editableNodes[0].color\n  }\n\n  if (\n    nodesInSelection?.length &&\n    nodesInSelection.every((o) => editableNodes.includes(o))\n  ) {\n    return editablesValue\n  }\n\n  return editableNodes?.length ? editablesValue : marksValue\n}\n\nexport function toggleMarkActiveLegacy(\n  editor: SlateEditorType,\n  format: LeafFormatType\n) {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}\n\nexport function toggleMarkActive(\n  editor: SlateEditorType,\n  format: LeafFormatType\n) {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n    Transforms.unsetNodes(editor, format, {\n      match: (o) => Editor.isVoid(editor, o) && o.type === 'editable'\n    })\n  } else {\n    Transforms.setNodes(\n      editor,\n      { [format]: true },\n      {\n        match: (o) => Editor.isVoid(editor, o) && o.type === 'editable',\n        hanging: true\n      }\n    )\n    Editor.addMark(editor, format, true)\n  }\n}\n\nexport function toggleColorMarkActive(editor: SlateEditorType, value?: string) {\n  const existingMark = getColorMark(editor)\n\n  if (notNil(existingMark) && areEqualColors(existingMark, value)) {\n    Editor.removeMark(editor, 'color')\n    Transforms.unsetNodes(editor, 'color', {\n      match: (o) => Editor.isVoid(editor, o) && o.type === 'editable'\n    })\n  } else {\n    Transforms.setNodes(\n      editor,\n      { color: value },\n      {\n        match: (o) => Editor.isVoid(editor, o) && o.type === 'editable',\n        hanging: true\n      }\n    )\n    Editor.addMark(editor, 'color', value)\n  }\n}\n\nexport function toggleBlockActive(\n  editor: SlateEditorType,\n  format: ElementFormatType\n) {\n  const isActive = isBlockActive(editor, format)\n\n  if (isActive) {\n    setBlockInactive(editor)\n    return\n  }\n\n  setBlockActive(editor, format)\n}\n\nexport function setBlockActive(\n  editor: SlateEditorType,\n  format: ElementFormatType\n) {\n  const isList = LIST_TYPES.includes(format)\n\n  Transforms.unwrapNodes(editor, {\n    match: (n) =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && (n.type as any)\n      ),\n    split: true\n  })\n\n  const newProperties: Partial<SlateElement> = {\n    type: isList ? 'list-item' : format\n  }\n\n  Transforms.setNodes(editor, newProperties)\n\n  if (isList) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}\n\nexport function setBlockInactive(editor: SlateEditorType) {\n  Transforms.unwrapNodes(editor, {\n    match: (n) =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && (n.type as any)\n      ),\n    split: true\n  })\n\n  const newProperties: Partial<SlateElement> = {\n    type: 'paragraph'\n  }\n\n  Transforms.setNodes(editor, newProperties)\n}\n\nexport function focusEditor(editor: SlateEditorType) {\n  ReactEditor.focus(editor as ReactEditor)\n}\n\nexport function composeWithClassName(attributes: any, className?: string) {\n  return {\n    ...attributes,\n    className: classnames(attributes?.className, className)\n  }\n}\n\nexport function composeWithAlignmentClassName(\n  attributes: any,\n  alignment?: BlockAlignment,\n  className?: string\n) {\n  return {\n    ...attributes,\n    className: classnames(attributes?.className, className, {\n      'text-right': alignment === 'right',\n      'text-center': alignment === 'center',\n      'text-justify': alignment === 'justify'\n    })\n  }\n}\n\nexport function composeWithStyle(attributes: any, style: CSSProperties = {}) {\n  return {\n    ...attributes,\n    style: { ...(attributes?.style || {}), ...style }\n  }\n}\n\nexport function getCurrentNode(editor: SlateEditorType) {\n  const selection = editor?.selection\n\n  if (selection !== null && selection.anchor !== null) {\n    const parentNode = editor.children[selection.anchor.path[0]]\n\n    if (LIST_TYPES.includes(parentNode?.type as BlockAlignment)) {\n      return parentNode.children[selection.anchor.path[1]]\n    }\n\n    return parentNode\n  } else {\n    return null\n  }\n}\n\nexport function getAlignment(editor: SlateEditorType): BlockAlignment {\n  const currentNode = getCurrentNode(editor) as any\n  return currentNode?.alignment\n}\n\nexport function setAlignment(editor: SlateEditorType, value?: BlockAlignment) {\n  const alignment = value === 'left' ? null : value\n  const newProperties: Partial<SlateElement> = {\n    alignment\n  }\n\n  Transforms.setNodes(editor, newProperties)\n}\n\nexport function getIndentation(editor: SlateEditorType): number {\n  const currentNode = getCurrentNode(editor) as any\n  return currentNode?.indentation\n}\n\nexport function getIndentationPercent(value: number): string {\n  if (!value) {\n    return null\n  }\n\n  return `${value}%`\n}\n\nexport function increaseIndentation(editor: SlateEditorType) {\n  const currentIndentation = getIndentation(editor) || 0\n  const indentation = clamp(currentIndentation + INDENTATION_FACTOR, 0, 99)\n  const newProperties: Partial<SlateElement> = {\n    indentation\n  }\n\n  Transforms.setNodes(editor, newProperties)\n}\n\nexport function decreaseIndentation(editor: SlateEditorType) {\n  const currentIndentation = getIndentation(editor) || 0\n  const indentation = clamp(currentIndentation - INDENTATION_FACTOR, 0, 99)\n  const newProperties: Partial<SlateElement> = {\n    indentation: indentation === 0 ? null : indentation\n  }\n\n  Transforms.setNodes(editor, newProperties)\n}\n\nexport function composeWithEditable<T extends object>(\n  attributes: T\n): EditableElementType<T> {\n  if (nil(attributes)) {\n    return null\n  }\n\n  return {\n    ...attributes,\n    editable: true,\n    id: generateUUID()\n  }\n}\n\nexport function createEditableNode(\n  attributes: EditableAttributes,\n  isOrphan = false\n) {\n  let editableNode: SlateElement & EditableAttributes = {\n    type: 'editable',\n    ...attributes,\n    children: [{ text: '' }]\n  }\n\n  if (isOrphan) {\n    editableNode.isOrphan = isOrphan\n  }\n\n  editableNode = composeWithEditable(editableNode)\n\n  return editableNode\n}\n\nexport function insertImageBlock(\n  editor: SlateEditorType,\n  attributes: ImageProps,\n  editable?: boolean\n) {\n  const {\n    url,\n    dimensions: { width, height },\n    label\n  } = attributes\n\n  let imageNode: SlateElement & ImageElementType = {\n    type: 'image',\n    url,\n    width,\n    height,\n    children: [{ text: '' }]\n  }\n\n  if (editable) {\n    imageNode.type = 'editable'\n    imageNode.dataType = 'image'\n    imageNode.label = label\n    imageNode = composeWithEditable(imageNode)\n  }\n\n  Transforms.insertNodes(editor, imageNode)\n  Transforms.move(editor)\n}\n\nexport function insertEditableBlock(\n  editor: SlateEditorType,\n  attributes: EditableAttributes\n) {\n  const editableNode = createEditableNode(attributes)\n\n  Transforms.insertNodes(editor, editableNode)\n  Transforms.move(editor)\n}\n\nexport function insertParagraph(\n  editor: Editor & ReactEditor,\n  at: Path | Point,\n  text = ''\n) {\n  Transforms.insertNodes(\n    editor,\n    {\n      type: 'paragraph',\n      children: [{ text }]\n    },\n    {\n      at\n    }\n  )\n}\n\nexport function insertTableBlock(editor: SlateEditorType) {\n  if (!editor.selection) return\n\n  const node = Editor.above(editor, {\n    match: (n) => n.type === 'table'\n  })\n\n  const isCollapsed = Range.isCollapsed(editor.selection)\n\n  if (!node && isCollapsed) {\n    const table = createTable(3, 3)\n    Transforms.insertNodes(editor, table)\n  }\n}\n\nexport function getEditableAttributes(\n  attributes: EditableAttributes,\n  showTip = false\n) {\n  const {\n    dataType,\n    dateTimeFormat,\n    multiline,\n    defaultValue,\n    label,\n    options,\n    tip,\n    valueRef\n  } = attributes\n\n  const parsedAttributes = {\n    dataType,\n    defaultValue\n  } as EditableAttributes\n\n  if (valueRef?.length) {\n    parsedAttributes.valueRef = valueRef\n    return parsedAttributes\n  }\n\n  if (showTip) {\n    parsedAttributes.tip = tip\n  }\n\n  if (dataType === 'text' && multiline) {\n    parsedAttributes.multiline = multiline\n  }\n\n  if (['options', 'radio'].includes(dataType)) {\n    parsedAttributes.options = options\n  }\n\n  if (['date', 'time'].includes(dataType)) {\n    parsedAttributes.dateTimeFormat = dateTimeFormat\n  }\n\n  parsedAttributes.label = label\n\n  return parsedAttributes\n}\n\nexport function getEditableAttributesValidity(\n  attributes: EditableAttributes,\n  showTip = false,\n  copyExisting = false\n): boolean {\n  const {\n    dataType,\n    dateTimeFormat,\n    defaultValue,\n    label,\n    options,\n    tip,\n    valueRef\n  } = attributes\n\n  if (copyExisting) {\n    return !!valueRef?.length && !!defaultValue?.length\n  }\n\n  if (\n    !dataType?.length ||\n    !defaultValue?.length ||\n    !label?.length ||\n    (showTip && !tip.length)\n  ) {\n    return false\n  }\n\n  if (['options', 'radio'].includes(dataType)) {\n    return !!options?.length\n  }\n\n  if (['date', 'time'].includes(dataType)) {\n    return !!dateTimeFormat?.length\n  }\n\n  return true\n}\n\nexport function getMatchingNodes(\n  node: Node,\n  match: (node: Node) => boolean = () => true,\n  matching: Array<Node> = []\n) {\n  if (match(node)) {\n    matching.push(node)\n  }\n\n  const children = node.children as Array<Node>\n\n  if (children?.length) {\n    for (const child of children) {\n      getMatchingNodes(child, match, matching)\n    }\n  }\n\n  return matching\n}\n\nexport function getMatchingNodesInSelection(\n  node: SlateEditorType,\n  match: (node: Node) => boolean = () => true\n) {\n  const generator = Editor.nodes(node, {\n    match\n  })\n\n  return Array.from(generator).map((o) => o[0])\n}\n\nexport function setConditionActive(\n  editor: SlateEditorType,\n  condition: EditableRefAttributes\n) {\n  Editor.addMark(editor, 'ref', condition)\n  Transforms.setNodes(\n    editor,\n    { ref: condition },\n    {\n      match: (o) => Editor.isVoid(editor, o) && o.type === 'editable'\n    }\n  )\n}\n\nexport function unsetConditionActive(editor: SlateEditorType) {\n  Editor.removeMark(editor, 'ref')\n  Transforms.unsetNodes(editor, 'ref', {\n    match: (o) => Editor.isVoid(editor, o) && o.type === 'editable'\n  })\n}\n\nexport function checkTableIsExist(editor: Editor, table: NodeEntry) {\n  const cells = Array.from(\n    Editor.nodes(editor, {\n      at: table[1],\n      match: (n) => n.type === 'table-cell'\n    })\n  )\n\n  return !!cells.length\n}\n\nexport function isTableElement(type: string) {\n  return (\n    type === 'table' ||\n    type === 'table-row' ||\n    type === 'table-cell' ||\n    type === 'table-content'\n  )\n}\n\nexport function isInSameTable(editor: Editor): boolean {\n  if (!editor.selection) return false\n\n  const [start, end] = Editor.edges(editor, editor.selection)\n  const [startTable] = Editor.nodes(editor, {\n    at: start,\n    match: (n) => n.type === 'table'\n  })\n\n  const [endTable] = Editor.nodes(editor, {\n    at: end,\n    match: (n) => n.type === 'table'\n  })\n\n  if (startTable && endTable) {\n    const [, startPath]: [any, Path] = startTable\n    const [, endPath]: [any, Path] = endTable\n\n    if (Path.equals(startPath, endPath)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function createTableContent(elements?: Node[]): TableContent {\n  return {\n    type: 'table-content',\n    children: elements || [{ type: 'paragraph', children: [{ text: '' }] }]\n  }\n}\n\nexport function createTableCell({\n  elements,\n  colspan,\n  rowspan,\n  height,\n  width\n}: {\n  elements?: Node[]\n  height?: number\n  width?: number\n  colspan?: number\n  rowspan?: number\n} = {}): TableCell {\n  const content = createTableContent(elements)\n\n  return {\n    type: 'table-cell',\n    key: `cell_${generateUUID()}`,\n    children: [content],\n    width: width,\n    height: height,\n    colspan,\n    rowspan\n  }\n}\n\nexport function createTableRow(columns: number): TableRow {\n  const cellNodes = [...new Array(columns)].map(() => createTableCell())\n\n  return {\n    type: 'table-row',\n    key: `row_${generateUUID()}`,\n    data: {},\n    children: cellNodes\n  }\n}\n\nexport function createTable(columns: number, rows: number): Table {\n  const rowNodes = [...new Array(rows)].map(() => createTableRow(columns))\n\n  return {\n    type: 'table',\n    children: rowNodes,\n    borderless: false,\n    data: {}\n  }\n}\n","import React, { FC, memo, PropsWithChildren } from 'react'\nimport classnames from 'classnames'\n\ntype ButtonProps = PropsWithChildren<{\n  className?: string\n  disabled?: boolean\n  onPress?: Fn\n}>\n\nconst BaseButton: FC<ButtonProps> = ({\n  children,\n  className,\n  disabled,\n  onPress\n}) => {\n  return (\n    <button\n      onClick={onPress}\n      className={classnames(\n        'border-transparent rounded-default font-medium cursor-pointer text-white px-18 flex items-center justify-center transition-colors duration-250 hover:bg-blue-600',\n        {\n          'bg-blue-500': !disabled,\n          'pointer-events-none bg-blue-300': disabled,\n          'h-40': !/\\bh-[0-9]/gi.test(className)\n        },\n        className\n      )}\n    >\n      {children}\n    </button>\n  )\n}\n\nconst Button = memo(BaseButton)\n\nexport default Button\n","import React, { FC, useRef } from 'react'\nimport ContentEditable, { ContentEditableEvent } from 'react-contenteditable'\nimport Button from '../button'\nimport classnames from 'classnames'\nimport css from './style.module.css'\nimport { fromNow, toCapitalizedFirst } from '../../core/utils'\n\ntype HeaderProps = {\n  title?: string\n  createdAt?: string\n  onChangeTitle?: (value: string) => void\n  onPressSave?: Fn\n}\n\nconst Header: FC<HeaderProps> = ({\n  title,\n  createdAt,\n  onChangeTitle,\n  onPressSave\n}) => {\n  const editorRef = useRef(null)\n  const state = useRef(title)\n\n  const handleBlur = () => {\n    onChangeTitle?.(state.current)\n  }\n\n  const handleChange = (event: ContentEditableEvent) => {\n    const value = event.target.value\n    state.current = value\n\n    if (value === '<br>') {\n      editorRef.current.innerHTML = ''\n    }\n  }\n\n  return (\n    <div className='bg-white py-18 px-60 flex items-center justify-between'>\n      <div>\n        <ContentEditable\n          innerRef={editorRef}\n          className={classnames(\n            css.container,\n            'text-heading-2 font-medium mb-4'\n          )}\n          placeholder='Untitled document'\n          html={state.current}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n        {createdAt && (\n          <div className='font-medium text-gray-400 text-subhead'>\n            {toCapitalizedFirst(fromNow(createdAt))}\n          </div>\n        )}\n      </div>\n      <Button disabled={!state.current?.length} onPress={onPressSave}>\n        Save changes\n      </Button>\n    </div>\n  )\n}\n\nexport default Header\n","import { createContext, Dispatch, SetStateAction } from 'react'\nimport { Node } from 'slate'\n\nconst OrphanNodesContext = createContext<\n  [Array<Node>, Dispatch<SetStateAction<Array<Node>>>]\n>(null)\n\nexport default OrphanNodesContext\n","import React, { FC } from 'react'\n\ntype TemplateEditorProps = {}\n\nconst TemplateEditor: FC<TemplateEditorProps> = ({ children }) => {\n  return <div className='max-w-6xl m-auto pt-120 pb-120 px-60'>{children}</div>\n}\n\nexport default TemplateEditor\n","import React, { FC, PropsWithChildren, useMemo } from 'react'\nimport { useFocused, useSelected } from 'slate-react'\n\nimport { EditableElementType } from '../../../core/tools'\nimport classnames from 'classnames'\nimport { getPlaceholderImage } from '../../../core/utils'\n\nexport type ImageElementType = EditableElementType<{\n  url: string\n  label?: string\n  width?: number\n  height?: number\n}>\n\ntype ImageElementProps = PropsWithChildren<{\n  attributes: any\n  element: ImageElementType\n}>\n\nconst ImageElement: FC<ImageElementProps> = ({\n  attributes,\n  children,\n  element\n}) => {\n  const selected = useSelected()\n  const focused = useFocused()\n  const url = useMemo(\n    () =>\n      element.editable\n        ? getPlaceholderImage(element.width, element.height)\n        : element.url,\n    [element.editable, element.height, element.url, element.width]\n  )\n\n  return (\n    <span {...attributes}>\n      {children}\n      <img\n        src={url}\n        style={{ width: element.width, height: element.height }}\n        className={classnames(\n          'inline-block max-w-full rounded-default align-bottom',\n          {\n            'shadow-outline': selected && focused\n          }\n        )}\n      />\n    </span>\n  )\n}\n\nexport default ImageElement\n","import React, { FC, PropsWithChildren, useEffect } from 'react'\nimport { useFocused, useSelected } from 'slate-react'\nimport classnames from 'classnames'\nimport {\n  composeWithClassName,\n  composeWithStyle,\n  EditableAttributes,\n  EditableElementType\n} from '../../../core/tools'\n\ntype EditableElementProps = PropsWithChildren<{\n  attributes: any\n  element: EditableElementType<EditableAttributes>\n}>\n\nconst EditableElement: FC<EditableElementProps> = ({\n  attributes,\n  children,\n  element\n}) => {\n  const selected = useSelected()\n  const focused = useFocused()\n\n  useEffect(() => {\n    return () => {\n      // TODO: Find refs that match unset ref value\n    }\n  }, [])\n\n  return (\n    <span\n      {...composeWithStyle(\n        composeWithClassName(\n          attributes,\n          classnames(\n            'bg-blue-500 text-white font-medium px-4 py-2 rounded-default mx-1',\n            {\n              'shadow-outline': selected && focused\n            }\n          )\n        ),\n        { fontSize: '0.82em' }\n      )}\n      contentEditable={false}\n    >\n      {element.defaultValue}\n      {children}\n    </span>\n  )\n}\n\nexport default EditableElement\n","import { Editor, NodeEntry, Path, Transforms } from 'slate'\n\nimport { TableCell } from '../../../../core/tools'\n\nexport type Col = {\n  cell: TableCell\n  isReal: boolean\n  path: Path\n  originPath: Path\n  isInsertPosition?: boolean\n}\n\nexport const splittedTable: (\n  editor: Editor,\n  table: NodeEntry,\n  startKey?: string | undefined\n) => {\n  tableDepth?: number\n  gridTable: Col[][]\n  getCol: (match?: (node: Col) => boolean) => Col[]\n} = (editor, table, startKey) => {\n  const tableDepth = table[1].length\n\n  const cells = [] as { cell: TableCell; path: Path; realPath: Path }[]\n\n  const nodes = Editor.nodes(editor, {\n    at: table[1],\n    match: (n) => n.type === 'table-cell'\n  })\n\n  for (const node of nodes) {\n    const [cell, path] = node as [TableCell, Path]\n    cells.push({\n      cell,\n      path,\n      realPath: [...path]\n    })\n  }\n\n  const gridTable: Col[][] = []\n  let insertPosition = null\n\n  for (let i = 0; i < cells.length; i++) {\n    const { cell, path, realPath } = cells[i]\n    const { rowspan = 1, colspan = 1 } = cell\n    const y = path[tableDepth]\n    let x = path[tableDepth + 1]\n\n    if (!gridTable[y]) {\n      gridTable[y] = []\n    }\n\n    while (gridTable[y][x]) {\n      x++\n    }\n\n    for (let j = 0; j < rowspan; j++) {\n      for (let k = 0; k < colspan; k++) {\n        const _y = y + j\n        const _x = x + k\n\n        if (!gridTable[_y]) {\n          gridTable[_y] = []\n        }\n\n        gridTable[_y][_x] = {\n          cell,\n          path: [...realPath.slice(0, tableDepth), _y, _x],\n          isReal: (rowspan === 1 && colspan === 1) || (_y === y && _x === x),\n          originPath: path\n        }\n\n        if (!insertPosition && cell.key === startKey) {\n          insertPosition = gridTable[_y][_x]\n          gridTable[_y][_x].isInsertPosition = true\n        }\n      }\n    }\n  }\n\n  const getCol = (match?: (node: Col) => boolean): Col[] => {\n    const result: Col[] = []\n\n    gridTable.forEach((row) => {\n      row.forEach((col: Col) => {\n        if (match && match(col)) {\n          result.push(col)\n        }\n      })\n    })\n\n    return result\n  }\n\n  return {\n    gridTable,\n    tableDepth,\n    getCol\n  }\n}\n\nexport function addSelection(\n  editor: Editor,\n  table: NodeEntry | null,\n  startPath: Path,\n  endPath: Path\n): Col[] {\n  removeSelection(editor)\n\n  if (!table) return []\n\n  const { gridTable, getCol } = splittedTable(editor, table)\n\n  if (!getCol || !gridTable) return []\n\n  const [head] = getCol(\n    (n: Col) =>\n      Path.equals(Editor.path(editor, n.originPath), startPath) && n.isReal\n  )\n  const [tail] = getCol(\n    (n: Col) =>\n      Path.equals(Editor.path(editor, n.originPath), endPath) && n.isReal\n  )\n\n  if (!tail || !head) return []\n\n  const { path: tailPath } = tail\n  const { path: headPath } = head\n\n  headPath.forEach((item: number, index: number) => {\n    headPath[index] = Math.min(item, tailPath[index])\n    tailPath[index] = Math.max(item, tailPath[index])\n  })\n\n  const coverCols: Col[] = []\n\n  gridTable.forEach((row: Col[]) => {\n    row.forEach((col: Col) => {\n      const { path } = col\n\n      const isOver = path.findIndex((item, index) => {\n        if (item < headPath[index] || item > tailPath[index]) {\n          return true\n        }\n        return false\n      })\n\n      if (isOver < 0) {\n        coverCols.push(col)\n      }\n    })\n  })\n\n  coverCols.forEach(({ originPath }) => {\n    Transforms.setNodes(\n      editor,\n      {\n        selectedCell: true\n      },\n      {\n        at: originPath,\n        match: (n) => n.type === 'table-cell'\n      }\n    )\n  })\n\n  return coverCols\n}\n\nexport function removeSelection(editor: Editor) {\n  Transforms.unsetNodes(editor, 'selectedCell', {\n    at: [],\n    match: (n) => !!n.selectedCell\n  })\n}\n","import { CSSProperties } from 'react'\n\nexport const options = {\n  defaultWidth: 50 as number,\n  defaultHeight: 22 as number,\n  tableStyle: {\n    borderSpacing: 0,\n    Layout: 'fixed',\n    wordBreak: 'break-word'\n  } as CSSProperties\n}\n","import { NodeEntry, Transforms } from 'slate'\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport css from '../../style.module.css'\nimport { options } from '../../utils/options'\nimport { splittedTable } from '../../utils/selection'\nimport { useEditor } from 'slate-react'\n\nlet startFromX = 0\n\nexport const HorizontalToolbar: React.FC<{\n  table: HTMLElement\n  tableNode: NodeEntry\n}> = ({ table, tableNode }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const editor = useEditor()\n  const [cols, setCols] = useState<{ width: number; el: HTMLElement[] }[]>([])\n  const widthFnObject = useRef({}).current\n\n  useEffect(() => {\n    const { gridTable = [] } = splittedTable(editor, tableNode)\n    if (!gridTable.length) return\n\n    const colsArray = [] as { width: number; el: HTMLElement[] }[]\n    for (let i = 0; i < gridTable[0].length; i++) {\n      for (let j = 0; j < gridTable.length; j++) {\n        const currCol = gridTable[j][i]\n        if (!currCol) continue\n\n        const td = table.querySelector(\n          `[data-key=${currCol.cell.key}]`\n        ) as HTMLElement\n\n        if (!td) continue\n\n        if (!colsArray[i]) {\n          colsArray[i] = {\n            width: 0,\n            el: []\n          }\n        }\n\n        colsArray[i].width = !colsArray[i].width\n          ? td.offsetWidth + td.offsetLeft\n          : Math.min(colsArray[i].width, td.offsetWidth + td.offsetLeft)\n\n        if (\n          colsArray[i].el.findIndex(\n            ({ dataset }) => dataset.key === td.dataset.key\n          ) < 0\n        ) {\n          colsArray[i].el.push(td)\n        }\n      }\n    }\n\n    for (let i = 1; i < colsArray.length; i++) {\n      const leftSumWidth = colsArray\n        .slice(0, i)\n        .reduce((p, c) => p + c.width, 0)\n      colsArray[i].width = colsArray[i].width - leftSumWidth\n    }\n    setCols(colsArray.filter((item) => item.width))\n  }, [editor, table, tableNode])\n\n  const maxWidth = useMemo(() => table.closest('div')?.offsetWidth, [table])\n\n  const onHandleDrag = useCallback(\n    ({ item, index }) => {\n      if (widthFnObject[index]) {\n        return widthFnObject[index]\n      }\n\n      const fn = function (e: React.MouseEvent) {\n        const changedWidth = e.clientX - startFromX\n\n        if (!changedWidth || !e.clientX) {\n          return\n        }\n\n        const tableWidthAfterChanged = table.offsetWidth + changedWidth\n\n        if (item.el && maxWidth && tableWidthAfterChanged < maxWidth) {\n          const dragger = ref.current?.querySelector(\n            `#horizontal-dragger-item-${index}`\n          ) as HTMLElement\n\n          if (!dragger) return\n          const draggerWidth = dragger.offsetWidth\n\n          if (draggerWidth + changedWidth > options.defaultWidth) {\n            dragger.style.width = `${draggerWidth + changedWidth}px`\n          }\n\n          const savedChangedWidth = []\n          let moreThanMinWidth = true\n          for (const cell of item.el) {\n            if (cell.offsetWidth + changedWidth <= options.defaultWidth) {\n              moreThanMinWidth = false\n              break\n            }\n            savedChangedWidth.push({\n              target: cell,\n              width: cell.offsetWidth + changedWidth\n            })\n          }\n\n          if (moreThanMinWidth) {\n            savedChangedWidth.forEach((item) => {\n              item.target.style.width = `${item.width}px`\n            })\n          }\n        }\n\n        startFromX = e.clientX\n      }\n\n      widthFnObject[index] = fn\n      return widthFnObject[index]\n    },\n    [maxWidth, table, widthFnObject]\n  )\n\n  const onHandleDragEnd = useCallback(\n    (item: { width: number; el: HTMLElement[] }, index: number) => () => {\n      if (item.el) {\n        for (const cell of item.el) {\n          Transforms.setNodes(\n            editor,\n            {\n              width: cell.offsetWidth\n            },\n            {\n              at: tableNode[1],\n              match: (n) => n.key === cell.dataset.key\n            }\n          )\n        }\n\n        const dragger = ref.current?.querySelector(\n          `#horizontal-dragger-item-${index}`\n        ) as HTMLElement\n        const draggerWidth = dragger.offsetWidth\n\n        const newCols = Array.from(cols)\n        newCols[index] = {\n          width: draggerWidth,\n          el: item.el\n        }\n\n        setCols(() => newCols)\n      }\n    },\n    [cols, editor, tableNode]\n  )\n\n  return (\n    <div\n      contentEditable={false}\n      className={css['table-horizontal-toolbar']}\n      ref={ref}\n    >\n      {cols.map((item, index) => (\n        <div\n          key={index}\n          className={css['table-dragger-item']}\n          style={{ width: `${item.width}px` }}\n          id={`horizontal-dragger-item-${index}`}\n        >\n          <div\n            className={css['table-trigger']}\n            draggable\n            onMouseDown={(e) => {\n              startFromX = e.clientX\n              document.body.addEventListener(\n                'dragover',\n                onHandleDrag({ item, index }),\n                false\n              )\n            }}\n            onDragEnd={() => {\n              document.body.removeEventListener(\n                'dragover',\n                onHandleDrag({ item, index })\n              )\n              onHandleDragEnd(item, index)\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  )\n}\n","import { NodeEntry, Transforms } from 'slate'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\n\nimport css from '../../style.module.css'\nimport { options } from '../../utils/options'\nimport { splittedTable } from '../../utils/selection'\nimport { useEditor } from 'slate-react'\n\nlet startFromY = 0\n\nexport const VerticalToolbar: React.FC<{\n  table: HTMLElement\n  tableNode: NodeEntry\n}> = ({ table, tableNode }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const editor = useEditor()\n  const [rows, setRows] = useState<{ height: number; el: HTMLElement[] }[]>([])\n  const heightFnObject = useRef({}).current\n\n  useEffect(() => {\n    const { gridTable = [] } = splittedTable(editor, tableNode)\n    if (!gridTable.length) return\n\n    const rowsArray = [] as { height: number; el: HTMLElement[] }[]\n\n    for (let i = 0; i < gridTable.length; i++) {\n      for (let j = 0; j < gridTable[i].length; j++) {\n        const currCell = gridTable[i][j]\n        const td = table.querySelector(\n          `[data-key=${currCell.cell.key}]`\n        ) as HTMLElement\n\n        if (!td) continue\n\n        if (!rowsArray[i]) {\n          rowsArray[i] = {\n            height: 0,\n            el: []\n          }\n        }\n\n        if (currCell.isReal) {\n          rowsArray[i].height = !rowsArray[i].height\n            ? td.offsetHeight\n            : Math.min(rowsArray[i].height, td.offsetHeight)\n        }\n\n        if (\n          rowsArray[i].el.findIndex(\n            ({ dataset }) => dataset.key === td.dataset.key\n          ) < 0\n        ) {\n          rowsArray[i].el.push(td)\n        }\n      }\n    }\n\n    setRows(() => rowsArray)\n  }, [editor, table, tableNode])\n\n  const onHandleDrag = useCallback(\n    ({ item, index }) => {\n      if (heightFnObject[index]) {\n        return heightFnObject[index]\n      }\n\n      const fn = function (e: React.MouseEvent | MouseEvent) {\n        const changedHeight = e.clientY - startFromY\n\n        if (!changedHeight || !e.clientY) {\n          return\n        }\n\n        if (item.el) {\n          const minHeight = options.defaultHeight\n\n          const dragger = ref.current?.querySelector(\n            `#vertical-dragger-item-${index}`\n          ) as HTMLElement\n\n          if (!dragger) return\n          const draggerHeight = dragger.offsetHeight\n\n          if (draggerHeight + changedHeight > minHeight) {\n            dragger.style.height = `${draggerHeight + changedHeight}px`\n          }\n\n          const savedChangedHeight = []\n          let moreThanMinHeight = true\n          for (const cell of item.el) {\n            if (cell.offsetHeight + changedHeight < minHeight) {\n              moreThanMinHeight = false\n              break\n            }\n\n            savedChangedHeight.push({\n              td: cell,\n              height: cell.offsetHeight + changedHeight\n            })\n          }\n\n          if (moreThanMinHeight) {\n            savedChangedHeight.forEach((item) => {\n              item.td.style.height = `${item.height}px`\n            })\n          }\n        }\n\n        startFromY = e.clientY\n      }\n\n      heightFnObject[index] = fn\n\n      return heightFnObject[index]\n    },\n    [heightFnObject]\n  )\n\n  const onHandleDragEnd = useCallback(\n    (item: { height: number; el: HTMLElement[] }, index: number) => {\n      if (item.el) {\n        for (const cell of item.el) {\n          Transforms.setNodes(\n            editor,\n            {\n              height: cell.offsetHeight\n            },\n            {\n              at: tableNode[1],\n              match: (n) => n.key === cell.dataset.key\n            }\n          )\n        }\n\n        const dragger = ref.current?.querySelector(\n          `#vertical-dragger-item-${index}`\n        ) as HTMLElement\n\n        const draggerHeight = dragger.offsetHeight\n\n        const newRows = Array.from(rows)\n        newRows[index] = {\n          height: draggerHeight,\n          el: item.el\n        }\n\n        setRows(() => newRows)\n      }\n    },\n    [rows, editor, tableNode]\n  )\n\n  return (\n    <div\n      contentEditable={false}\n      className={css['table-vertical-toolbar']}\n      ref={ref}\n    >\n      {rows.map((item, index) => (\n        <div\n          key={index}\n          className={css['table-dragger-item']}\n          style={{ height: `${item.height}px` }}\n          id={`vertical-dragger-item-${index}`}\n        >\n          <div\n            className={css['table-trigger']}\n            draggable\n            onMouseDown={(e) => {\n              startFromY = e.clientY\n              document.body.addEventListener(\n                'dragover',\n                onHandleDrag({ item, index }),\n                false\n              )\n            }}\n            onDragEnd={() => {\n              document.body.removeEventListener(\n                'dragover',\n                onHandleDrag({ item, index }),\n                false\n              )\n\n              onHandleDragEnd(item, index)\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  )\n}\n","import { Editor, NodeEntry, Transforms } from 'slate'\nimport React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react'\nimport { RenderElementProps, useSelected, useSlate } from 'slate-react'\nimport { addSelection, removeSelection } from '../../utils/selection'\n\nimport { HorizontalToolbar } from '../horizontal-toolbar'\nimport { VerticalToolbar } from '../vertical-toolbar'\nimport classnames from 'classnames'\nimport css from '../../style.module.css'\nimport { options } from '../../utils/options'\n\nexport const TableBody: React.FC<\n  {\n    table: NodeEntry | null\n  } & RenderElementProps\n> = (props) => {\n  const { table, children, element } = props\n  const editor = useSlate()\n  const selected = useSelected()\n  const ref = useRef<HTMLTableElement>(null)\n\n  const resizeTable = useCallback(() => {\n    if (ref.current) {\n      ref.current.querySelectorAll('td').forEach((cell) => {\n        Transforms.setNodes(\n          editor,\n          {\n            width: cell.offsetWidth,\n            height: cell.offsetHeight\n          },\n          {\n            at: [],\n            match: (n) => n.key === cell.dataset.key\n          }\n        )\n      })\n    }\n  }, [editor])\n\n  useEffect(() => {\n    resizeTable()\n  }, [resizeTable, selected, editor.selection])\n\n  useEffect(() => {\n    if (!selected) removeSelection(editor)\n  }, [selected, editor])\n\n  const [startKey, setStartKey] = useState<string>('')\n\n  const startNode = useMemo(() => {\n    const [node] = Editor.nodes(editor, {\n      match: (n) => n.key === startKey,\n      at: []\n    })\n\n    return node\n  }, [startKey, editor])\n\n  const ResizeToolbar = useMemo(() => {\n    return (\n      selected &&\n      ref.current &&\n      table && (\n        <Fragment>\n          <HorizontalToolbar table={ref.current} tableNode={table} />\n          <VerticalToolbar table={ref.current} tableNode={table} />\n        </Fragment>\n      )\n    )\n  }, [selected, table])\n\n  return (\n    <Fragment>\n      {ResizeToolbar}\n      <table\n        className={classnames(css.table, {\n          [css.borderless]: !!element.borderless\n        })}\n        slate-table-element='table'\n        ref={ref}\n        style={options.tableStyle}\n        onDragStart={(e) => e.preventDefault()}\n        onMouseDown={(e) => {\n          const cell = (e.target as HTMLBaseElement).closest('td')\n          const key = cell?.getAttribute('data-key') || ''\n          setStartKey(key)\n        }}\n        onMouseMove={(e) => {\n          const cell = (e.target as HTMLBaseElement).closest('td')\n          if (cell && startKey) {\n            const endKey = cell.getAttribute('data-key')\n\n            const [endNode] = Editor.nodes(editor, {\n              match: (n) => n.key === endKey,\n              at: []\n            })\n\n            addSelection(\n              editor,\n              table,\n              Editor.path(editor, startNode[1]),\n              Editor.path(editor, endNode[1])\n            )\n          }\n        }}\n        onMouseUp={() => {\n          setStartKey('')\n          resizeTable()\n        }}\n        onMouseLeave={() => {\n          setStartKey('')\n        }}\n      >\n        <tbody slate-table-element='tbody'>{children}</tbody>\n      </table>\n    </Fragment>\n  )\n}\n","/* eslint-disable no-useless-return */\nimport { Col, splittedTable } from './selection'\nimport { Editor, NodeEntry, Path, Transforms } from 'slate'\nimport {\n  TableCell,\n  createTableCell,\n  createTableRow\n} from '../../../../core/tools'\n\nexport function splitCell(table: NodeEntry, editor: Editor) {\n  const { selection } = editor\n  if (!selection || !table) return\n\n  const yIndex = table[1].length\n  const xIndex = table[1].length + 1\n\n  const { getCol } = splittedTable(editor, table)\n\n  const [start, end] = Editor.edges(editor, selection)\n  const [startNode] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell',\n      at: start\n    })\n  )\n\n  const [endNode] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell',\n      at: end\n    })\n  )\n\n  if (!startNode || !endNode) return\n\n  const [startCell] = getCol((n: Col) => n.cell.key === startNode[0].key)\n  const [endCell] = getCol((n: Col) => n.cell.key === endNode[0].key)\n\n  const [yStart, yEnd] = [startCell.path[yIndex], endCell.path[yIndex]]\n  const [xStart, xEnd] = [startCell.path[xIndex], endCell.path[xIndex]]\n\n  const sourceCells = [] as Col[]\n  const selectedCols = getCol((n: Col) => {\n    if (n.cell.selectedCell) {\n      return true\n    }\n\n    const [y, x] = n.path.slice(yIndex, xIndex + 1)\n    if (y >= yStart && y <= yEnd && x >= xStart && x <= xEnd) {\n      if (!n.isReal) {\n        const [sourceCell] = getCol(\n          (s: Col) => s.isReal && s.cell.key === n.cell.key\n        )\n        sourceCells.push(sourceCell)\n      }\n      return true\n    }\n\n    return false\n  })\n\n  selectedCols.push(...sourceCells)\n\n  const filterColsObject = selectedCols.reduce(\n    (p: { [key: string]: Col }, c: Col) => {\n      if (c.isReal) {\n        p[c.cell.key] = c\n      }\n      return p\n    },\n    {}\n  ) as { [key: string]: Col }\n\n  Object.values(filterColsObject).forEach((col: Col) => {\n    const { cell, isReal, originPath } = col\n    const { rowspan = 1, colspan = 1, children } = cell\n\n    if (isReal && (rowspan !== 1 || colspan !== 1)) {\n      Transforms.delete(editor, {\n        at: originPath\n      })\n\n      for (let i = 0; i < rowspan; i++) {\n        for (let j = 0; j < colspan; j++) {\n          const newPath = Array.from(originPath)\n          newPath[yIndex] += i\n\n          const newCell = createTableCell({\n            width: 0,\n            height: 0,\n            elements:\n              i === 0 && j === colspan - 1\n                ? (children[0].children as any)\n                : null\n          })\n\n          Transforms.insertNodes(editor, newCell, {\n            at: newPath\n          })\n        }\n      }\n    }\n  })\n}\n\nexport function insertAbove(table: NodeEntry, editor: Editor) {\n  const { selection } = editor\n  if (!selection || !table) return\n\n  const yIndex = table[1].length\n\n  const { gridTable, getCol } = splittedTable(editor, table)\n\n  const [startCell] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell'\n    })\n  )\n\n  const [insertPositionCol] = getCol(\n    (c: Col) => c.cell.key === startCell[0].key && c.isReal\n  )\n\n  let checkInsertEnable = true\n  const insertYIndex = insertPositionCol.path[yIndex]\n  const insertCols = new Map<string, Col>()\n\n  gridTable[insertYIndex].forEach((col: Col) => {\n    if (!col.isReal) {\n      const [originCol] = getCol(\n        (c: Col) => c.isReal && c.cell.key === col.cell.key\n      )\n\n      if (originCol.path[yIndex] === insertYIndex) {\n        insertCols.set(originCol.cell.key, originCol)\n      } else {\n        checkInsertEnable = false\n        return\n      }\n    } else {\n      insertCols.set(col.cell.key, col)\n    }\n  })\n\n  if (!checkInsertEnable) {\n    return\n  }\n\n  const newRow = createTableRow(insertCols.size)\n\n  ;[...Array.from(Array.from(insertCols.values()))].forEach((col, index) => {\n    newRow.children[index].colspan = col.cell.colspan || 1\n  })\n\n  const [[, path]] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-row'\n    })\n  )\n\n  Transforms.insertNodes(editor, newRow, {\n    at: path\n  })\n}\n\nexport function insertBelow(table: NodeEntry, editor: Editor) {\n  const { selection } = editor\n  if (!selection || !table) return\n\n  const yIndex = table[1].length\n\n  const { gridTable, getCol } = splittedTable(editor, table)\n\n  const [startCell] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell'\n    })\n  )\n\n  const [insertPositionCol] = getCol(\n    (c: Col) => c.cell.key === startCell[0].key && c.isReal\n  )\n\n  let checkInsertEnable = true\n  const insertCols = new Map<string, Col>()\n\n  const y =\n    insertPositionCol.path[yIndex] + (insertPositionCol.cell.rowspan || 1) - 1\n\n  gridTable[y].forEach((col: Col) => {\n    const [originCol] = getCol(\n      (n: any) => n.isReal && n.cell.key === col.cell.key\n    )\n\n    const { cell, path } = originCol\n\n    if (!gridTable[y + 1]) {\n      insertCols.set(cell.key, originCol)\n    } else if (path[yIndex] + (cell.rowspan || 1) - 1 === y) {\n      insertCols.set(cell.key, originCol)\n    } else {\n      checkInsertEnable = false\n      return\n    }\n  })\n\n  if (!checkInsertEnable) {\n    return\n  }\n\n  const newRow = createTableRow(insertCols.size)\n\n  ;[...Array.from(insertCols.values())].forEach((value, index) => {\n    newRow.children[index].colspan = value.cell.colspan || 1\n  })\n\n  const [[, path]] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-row'\n    })\n  )\n\n  for (let i = 1; i < startCell[0].rowspan; i++) {\n    path[yIndex] += 1\n  }\n\n  Transforms.insertNodes(editor, newRow, {\n    at: Path.next(path)\n  })\n}\n\nexport function insertLeft(table: NodeEntry, editor: Editor) {\n  const { selection } = editor\n  if (!selection || !table) return\n\n  const xIndex = table[1].length + 1\n\n  const { gridTable, getCol } = splittedTable(editor, table)\n\n  const [startCell] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell'\n    })\n  )\n\n  const [insertPositionCol] = getCol(\n    (c: Col) => c.cell.key === startCell[0].key && c.isReal\n  )\n\n  const x = insertPositionCol.path[xIndex]\n\n  const insertCols = new Map<string, Col>()\n  let checkInsertable = true\n\n  gridTable.forEach((row: Col[]) => {\n    const col = row[x]\n\n    if (col.isReal) {\n      insertCols.set(col.cell.key, col)\n    } else {\n      const [originCol] = getCol(\n        (n: Col) => n.cell.key === col.cell.key && n.isReal\n      )\n      const { cell, path } = originCol\n\n      if (path[xIndex] === x) {\n        insertCols.set(cell.key, originCol)\n      } else {\n        checkInsertable = false\n        return\n      }\n    }\n  })\n\n  if (!checkInsertable) {\n    return\n  }\n\n  insertCols.forEach((col: Col) => {\n    const newCell = createTableCell({\n      rowspan: col.cell.rowspan || 1\n    })\n\n    Transforms.insertNodes(editor, newCell, {\n      at: col.originPath\n    })\n  })\n}\n\nexport function insertRight(table: NodeEntry, editor: Editor) {\n  const { selection } = editor\n  if (!selection || !table) return\n\n  const xIndex = table[1].length + 1\n\n  const { gridTable, getCol } = splittedTable(editor, table)\n\n  const [startCell] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell'\n    })\n  )\n\n  const [insertPositionCol] = getCol(\n    (c: Col) => c.cell.key === startCell[0].key && c.isReal\n  )\n\n  const x =\n    insertPositionCol.path[xIndex] + (insertPositionCol.cell.colspan || 1) - 1\n\n  const insertCols = new Map<string, Col>()\n  let checkInsertable = true\n\n  gridTable.forEach((row: Col[]) => {\n    const col = row[x]\n\n    const [originCol] = getCol(\n      (n: Col) => n.cell.key === col.cell.key && n.isReal\n    )\n\n    const { cell, path } = originCol\n\n    if (\n      !row[x + 1] ||\n      (col.isReal && (!col.cell.colspan || col.cell.colspan === 1))\n    ) {\n      insertCols.set(cell.key, originCol)\n    } else {\n      if (path[xIndex] + (cell.colspan || 1) - 1 === x) {\n        insertCols.set(cell.key, originCol)\n      } else {\n        checkInsertable = false\n        return\n      }\n    }\n  })\n\n  if (!checkInsertable) {\n    return\n  }\n\n  insertCols.forEach((col: Col) => {\n    const newCell = createTableCell({\n      rowspan: col.cell.rowspan || 1\n    })\n\n    Transforms.insertNodes(editor, newCell, {\n      at: Path.next(col.originPath)\n    })\n  })\n}\n\nexport function mergeSelection(table: NodeEntry, editor: Editor) {\n  if (!table || !editor.selection) return\n\n  const startPoint = Editor.start(editor, editor.selection)\n  const [startCell] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.selectedCell as any,\n      at: startPoint\n    })\n  )\n\n  if (!startCell) return\n\n  const { gridTable } = splittedTable(editor, table, startCell[0].key as any)\n\n  const selectedTable = checkMerge(gridTable)\n  if (!selectedTable) return\n\n  const insertPositionCol = selectedTable[0][0]\n  const tmpContent: { [key: string]: Node[] } = {}\n\n  gridTable.forEach((row: Col[]) => {\n    row.forEach((col: Col) => {\n      if (\n        col.cell.selectedCell &&\n        col.cell.key !== insertPositionCol.cell.key &&\n        col.isReal\n      ) {\n        const [node] = Array.from(\n          Editor.nodes(editor, {\n            match: (n) => n.key === col.cell.key,\n            at: []\n          })\n        )\n\n        if (node) {\n          if (Editor.string(editor, node[1])) {\n            tmpContent[col.cell.key] = node[0].children as any\n          }\n\n          Transforms.removeNodes(editor, {\n            at: table[1],\n            match: (n) => n.key === col.cell.key\n          })\n        }\n      }\n    })\n  })\n\n  Transforms.setNodes(\n    editor,\n    {\n      height: 0,\n      width: 0,\n      colspan: selectedTable[0].length,\n      rowspan: selectedTable.length\n    },\n    {\n      at: table[1],\n      match: (n) => n.key === insertPositionCol.cell.key\n    }\n  )\n\n  Transforms.removeNodes(editor, {\n    at: table[1],\n    match: (n) => {\n      if (n.type !== 'table-row') {\n        return false\n      }\n\n      if (\n        !n.children ||\n        (n.children as any).findIndex(\n          (cell: TableCell) => cell.type === 'table-cell'\n        ) < 0\n      ) {\n        return true\n      }\n\n      return false\n    }\n  })\n\n  const rows = Editor.nodes(editor, {\n    at: table[1],\n    match: (n) => n.type === 'table-row'\n  })\n\n  for (const row of Array.from(rows)) {\n    let minRowHeight = Infinity\n    ;(row[0].children as any).forEach((cell: TableCell) => {\n      const { rowspan = 1 } = cell\n      if (rowspan < minRowHeight) {\n        minRowHeight = rowspan\n      }\n    })\n\n    if (minRowHeight > 1 && minRowHeight < Infinity) {\n      ;(row[0].children as any).forEach((cell: TableCell) => {\n        Transforms.setNodes(\n          editor,\n          {\n            height: 0,\n            width: 0,\n            rowspan: (cell.rowspan || 1) - minRowHeight + 1\n          },\n          {\n            at: table[1],\n            match: (n) => n.key === cell.key\n          }\n        )\n      })\n    }\n  }\n\n  const { gridTable: mergedGridTable } = splittedTable(editor, table)\n  for (let idx = 0; idx < mergedGridTable[0].length; idx++) {\n    let allColumnIsReal = true\n    let minColWidth = Infinity\n\n    for (let j = 0; j < mergedGridTable.length; j++) {\n      if (!mergedGridTable[j][idx]) continue\n\n      if (!mergedGridTable[j][idx].isReal) {\n        allColumnIsReal = false\n      } else {\n        const { colspan = 1 } = mergedGridTable[j][idx].cell\n        if (colspan < minColWidth) {\n          minColWidth = colspan\n        }\n      }\n    }\n\n    if (allColumnIsReal && minColWidth < Infinity && minColWidth > 1) {\n      for (let j = 0; j < mergedGridTable.length; j++) {\n        const { cell } = mergedGridTable[j][idx]\n        Transforms.setNodes(\n          editor,\n          {\n            height: 0,\n            width: 0,\n            colspan: (cell.colspan || 1) - minColWidth + 1\n          },\n          {\n            at: table[1],\n            match: (n) => n.key === cell.key\n          }\n        )\n      }\n    }\n  }\n\n  const [insertContents] = Array.from(\n    Editor.nodes(editor, {\n      at: insertPositionCol.originPath,\n      match: (n) => n.type === 'table-content'\n    })\n  )\n\n  Object.values(tmpContent).forEach((content) => {\n    if (content[0] && (content[0] as any).children) {\n      Transforms.insertNodes(editor, (content[0] as any).children, {\n        at: Editor.end(editor, insertContents[1])\n      })\n    }\n  })\n}\n\nexport function removeColumn(table: NodeEntry, editor: Editor) {\n  const { selection } = editor\n  if (!selection || !table) return\n\n  const { gridTable, getCol } = splittedTable(editor, table)\n  const xIndex = table[1].length + 1\n\n  const [start, end] = Editor.edges(editor, selection)\n  const [startNode] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell',\n      at: start\n    })\n  )\n\n  const [endNode] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell',\n      at: end\n    })\n  )\n\n  const [startCol] = getCol((col: Col) => col.cell.key === startNode[0].key)\n  const [endCol] = getCol((col: Col) => col.cell.key === endNode[0].key)\n\n  const xLeft = startCol.path[xIndex]\n  const xRight = endCol.path[xIndex]\n\n  const topLeftCol = gridTable[0][xLeft]\n  const bottomRight = gridTable[gridTable.length - 1][xRight]\n\n  Transforms.setSelection(editor, {\n    anchor: Editor.point(editor, topLeftCol.originPath),\n    focus: Editor.point(editor, bottomRight.originPath)\n  })\n\n  splitCell(table, editor)\n\n  const { gridTable: splitedGridTable } = splittedTable(editor, table)\n\n  const removedCells = splitedGridTable.reduce((p: Col[], c: Col[]) => {\n    const cells = c.slice(xLeft, xRight + 1)\n    return [...p, ...cells]\n  }, []) as Col[]\n\n  removedCells.forEach((cell: { cell: { key: any } }) => {\n    Transforms.removeNodes(editor, {\n      at: table[1],\n      match: (n) => n.key === cell.cell.key\n    })\n  })\n\n  Transforms.removeNodes(editor, {\n    at: table[1],\n    match: (n) => {\n      if (n.type !== 'table-row') {\n        return false\n      }\n\n      if (\n        !n.children ||\n        (n.children as any).findIndex(\n          (cell: TableCell) => cell.type === 'table-cell'\n        ) < 0\n      ) {\n        return true\n      }\n\n      return false\n    }\n  })\n\n  const rows = Editor.nodes(editor, {\n    at: table[1],\n    match: (n) => n.type === 'table-row'\n  })\n\n  for (const row of Array.from(rows)) {\n    let minRowHeight = Infinity\n    ;(row[0].children as any).forEach((cell: TableCell) => {\n      const { rowspan = 1 } = cell\n      if (rowspan < minRowHeight) {\n        minRowHeight = rowspan\n      }\n    })\n\n    if (minRowHeight > 1 && minRowHeight < Infinity) {\n      ;(row[0].children as any).forEach((cell: TableCell) => {\n        Transforms.setNodes(\n          editor,\n          {\n            rowspan: (cell.rowspan || 1) - minRowHeight + 1\n          },\n          {\n            at: table[1],\n            match: (n) => n.key === cell.key\n          }\n        )\n      })\n    }\n  }\n\n  const { gridTable: removedGridTable } = splittedTable(editor, table)\n\n  if (!removedGridTable.length) {\n    const contentAfterRemove = Editor.string(editor, table[1])\n\n    if (!contentAfterRemove) {\n      Transforms.removeNodes(editor, {\n        at: table[1]\n      })\n    }\n\n    return\n  }\n\n  for (let idx = 0; idx < removedGridTable[0].length; idx++) {\n    let allColumnIsReal = true\n    let minColWidth = Infinity\n\n    for (let j = 0; j < removedGridTable.length; j++) {\n      if (!removedGridTable[j][idx].isReal) {\n        allColumnIsReal = false\n      } else {\n        const { colspan = 1 } = removedGridTable[j][idx].cell\n        if (colspan < minColWidth) {\n          minColWidth = colspan\n        }\n      }\n    }\n\n    if (allColumnIsReal && minColWidth < Infinity && minColWidth > 1) {\n      for (let j = 0; j < removedGridTable.length; j++) {\n        const { cell } = removedGridTable[j][idx]\n        Transforms.setNodes(\n          editor,\n          {\n            colspan: (cell.colspan || 1) - minColWidth + 1\n          },\n          {\n            at: table[1],\n            match: (n) => n.key === cell.key\n          }\n        )\n      }\n    }\n  }\n}\n\nexport function removeRow(table: NodeEntry, editor: Editor) {\n  const { selection } = editor\n  if (!selection || !table) return\n\n  const { gridTable, getCol } = splittedTable(editor, table)\n\n  const yIndex = table[1].length\n\n  const [start, end] = Editor.edges(editor, selection)\n  const [startNode] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell',\n      at: start\n    })\n  )\n\n  const [endNode] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table-cell',\n      at: end\n    })\n  )\n\n  const [startCol] = getCol((col: Col) => col.cell.key === startNode[0].key)\n  const [endCol] = getCol((col: Col) => col.cell.key === endNode[0].key)\n\n  const yTop = startCol.path[yIndex]\n  const yBottom = endCol.path[yIndex]\n\n  const topLeftCol = gridTable[yTop][0]\n  const bottomRight = gridTable[yBottom][gridTable[yBottom].length - 1]\n\n  Transforms.setSelection(editor, {\n    anchor: Editor.point(editor, topLeftCol.originPath),\n    focus: Editor.point(editor, bottomRight.originPath)\n  })\n\n  splitCell(table, editor)\n\n  const { gridTable: splitedGridTable } = splittedTable(editor, table)\n\n  const removeCols = splitedGridTable\n    .slice(yTop, yBottom + 1)\n    .reduce((p: Col[], c: Col[]) => [...p, ...c], []) as Col[]\n\n  removeCols.forEach((col: Col) => {\n    Transforms.removeNodes(editor, {\n      at: table[1],\n      match: (n) => n.key === col.cell.key\n    })\n  })\n\n  Transforms.removeNodes(editor, {\n    at: table[1],\n    match: (n) => {\n      if (n.type !== 'table-row') {\n        return false\n      }\n\n      if (\n        !n.children ||\n        (n.children as any).findIndex(\n          (cell: TableCell) => cell.type === 'table-cell'\n        ) < 0\n      ) {\n        return true\n      }\n\n      return false\n    }\n  })\n\n  if (!Editor.string(editor, table[1])) {\n    Transforms.removeNodes(editor, {\n      at: table[1]\n    })\n  }\n}\n\nexport function removeTable(table: NodeEntry, editor: Editor) {\n  if (editor && table) {\n    Transforms.removeNodes(editor, {\n      match: (n) => n.type === 'table',\n      at: table[1]\n    })\n  }\n}\n\nexport function toggleBorders(table: NodeEntry, editor: Editor) {\n  if (editor && table) {\n    Transforms.setNodes(\n      editor,\n      {\n        borderless: !table[0].borderless\n      },\n      {\n        match: (n) => n.type === 'table',\n        at: table[1]\n      }\n    )\n  }\n}\n\nfunction checkMerge(table: Col[][]): Col[][] | undefined {\n  let selectedCount = 0\n\n  const selectedTable = table.reduce((t: Col[][], row: Col[]) => {\n    const currRow = row.filter((col: Col) => col.cell.selectedCell)\n    if (currRow.length) {\n      t.push(currRow)\n      selectedCount += currRow.length\n    }\n    return t\n  }, [])\n\n  if (selectedCount < 2) {\n    return undefined\n  }\n\n  const selectedWidth = selectedTable[0].length\n  let couldMerge = true\n\n  selectedTable.forEach((row: Col[]) => {\n    if (row.length !== selectedWidth) {\n      couldMerge = false\n    }\n  })\n\n  if (!couldMerge) {\n    return undefined\n  }\n\n  return selectedTable\n}\n","import { useState, useCallback, useMemo, MouseEvent, useContext } from 'react'\nimport { useSlate } from 'slate-react'\nimport OrphanNodesContext from '../contexts/orphan-nodes'\nimport {\n  BlockAlignment,\n  getAlignment,\n  getColorMark,\n  HeadingFormatType,\n  isBlockActive,\n  isMarkActive,\n  SlateEditorType\n} from '../tools'\n\ntype PopupActions = {\n  visible: boolean\n  open: Fn\n  close: Fn\n  toggle: Fn\n}\n\nexport type TextSizeValue = {\n  name: HeadingFormatType\n  label: string\n  value: boolean\n}\n\nexport function usePopupUtils(initialOpen: boolean = false): PopupActions {\n  const [visible, setVisible] = useState(initialOpen)\n\n  const handleOpen = useCallback(() => {\n    setVisible(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  const handleToggle = useCallback(() => {\n    setVisible((o) => !o)\n  }, [])\n\n  const popupActions: PopupActions = useMemo(\n    () => ({\n      visible,\n      open: handleOpen,\n      close: handleClose,\n      toggle: handleToggle\n    }),\n    [handleClose, handleOpen, handleToggle, visible]\n  )\n\n  return popupActions\n}\n\nexport function useEditor(): SlateEditorType {\n  return useSlate() as SlateEditorType\n}\n\nexport function useTextSizeValue(): TextSizeValue {\n  const editor = useEditor()\n\n  const headingOneActive = isBlockActive(editor, 'heading-one')\n  const headingTwoActive = isBlockActive(editor, 'heading-two')\n  const headingThreeActive = isBlockActive(editor, 'heading-three')\n\n  const results = useMemo(\n    () =>\n      [\n        { name: 'heading-one', label: 'Heading 1', value: headingOneActive },\n        { name: 'heading-two', label: 'Heading 2', value: headingTwoActive },\n        { name: 'heading-three', label: 'Heading 3', value: headingThreeActive }\n      ] as Array<TextSizeValue>,\n    [headingOneActive, headingThreeActive, headingTwoActive]\n  )\n\n  return results.find((o) => o.value)\n}\n\nexport function useLeafColorValue(): string {\n  const editor = useEditor()\n  return getColorMark(editor)\n}\n\nexport function useAlignmentValue(): BlockAlignment {\n  const editor = useEditor()\n  return getAlignment(editor)\n}\n\nexport function useMouseDown(fn: Fn): (e: MouseEvent) => void {\n  return useCallback(\n    (e: MouseEvent) => {\n      e?.preventDefault()\n      fn?.()\n    },\n    [fn]\n  )\n}\n\nexport function useCanUndo(): boolean {\n  const editor = useEditor()\n  return !!editor.history?.undos?.length\n}\n\nexport function useCanRedo(): boolean {\n  const editor = useEditor()\n  return !!editor.history?.redos?.length\n}\n\nexport function useConditionActive(): boolean {\n  const editor = useEditor()\n  return isMarkActive(editor, 'ref')\n}\n\nexport function useOrphanNodes() {\n  const context = useContext(OrphanNodesContext)\n  return context\n}\n","import React, {\n  Children,\n  cloneElement,\n  FC,\n  memo,\n  PropsWithChildren,\n  ReactElement\n} from 'react'\nimport classnames from 'classnames'\nimport { useMouseDown } from '../../core/hooks'\n\ntype IconProps = PropsWithChildren<{\n  className?: string\n  onPress?: Fn\n}>\n\nconst BaseIcon: FC<IconProps> = ({ children, className, onPress }) => {\n  const handlePress = useMouseDown(onPress)\n  return (\n    <figure\n      onMouseDown={handlePress}\n      className={classnames('flex-shrink-0', className, {\n        's-16': !/\\bs-[0-9]/gi.test(className)\n      })}\n    >\n      {Children.map(children, (child: ReactElement) =>\n        cloneElement(child, {\n          className: classnames(\n            child.props.className,\n            'h-full w-full object-contain object-center m-auto pointer-events-none'\n          )\n        })\n      )}\n    </figure>\n  )\n}\n\nconst Icon = memo(BaseIcon)\n\nexport default Icon\n","import React, { ReactNode, Ref, forwardRef } from 'react'\n\nimport Icon from '../icon'\nimport classnames from 'classnames'\nimport css from './style.module.css'\nimport { useMouseDown } from '../../core/hooks'\n\ntype IconButtonProps = {\n  active?: boolean\n  disabled?: boolean\n  className?: string\n  data?: string\n  tip?: string\n  onPress?: Fn\n  children?: ReactNode\n}\n\nconst BaseIconButton = (\n  {\n    active,\n    data,\n    disabled,\n    className,\n    children,\n    onPress,\n    tip\n  }: IconButtonProps,\n  ref: Ref<HTMLDivElement>\n) => {\n  const handlePress = useMouseDown(() => {\n    onPress?.(data)\n  })\n\n  return (\n    <div\n      ref={ref}\n      className={classnames(\n        's-32 rounded-default bg-transparent cursor-pointer flex items-center justify-center transition-colors duration-250 hover:bg-blue-100 hover:text-blue-500',\n        {\n          'text-blue-500 bg-blue-highlight': active,\n          'pointer-events-none opacity-50': disabled,\n          [css.tooltip]: !!tip?.length\n        },\n        className\n      )}\n      data-tip={tip}\n      onMouseDown={handlePress}\n    >\n      <Icon className='s-20'>{children}</Icon>\n    </div>\n  )\n}\n\nconst IconButton = forwardRef(BaseIconButton)\n\nexport default IconButton\n","import React, { FC } from 'react'\n\nimport classnames from 'classnames'\n\ntype IconGroupProps = {\n  className?: string\n}\n\nconst IconGroup: FC<IconGroupProps> = ({ className, children }) => {\n  return (\n    <div className={classnames('flex items-center space-x-4', className)}>\n      {children}\n    </div>\n  )\n}\n\nIconGroup.defaultProps = {\n  className: 'px-16'\n}\n\nexport default IconGroup\n","import React, { HTMLAttributes } from 'react'\n\nimport { AiOutlineDelete } from '@react-icons/all-files/ai/AiOutlineDelete'\nimport IconButton from '../../../../icon-button'\nimport IconGroup from '../../../../icon-group'\nimport classnames from 'classnames'\nimport css from './style.module.css'\n\ninterface CardbarProps extends HTMLAttributes<HTMLDivElement> {\n  delete?: () => void\n}\n\nconst exec = (func: Function, ...args: any[]) => (e?: React.MouseEvent) => {\n  e && e.preventDefault()\n  return func(...args)\n}\n\nexport const Cardbar: React.FC<CardbarProps> = (props) => {\n  return (\n    <div className={classnames(css.cardbar, props.className)}>\n      <IconGroup className='px-0 text-gray-500 bg-blue-50 rounded-default'>\n        {props.children}\n        {props.delete && (\n          <IconButton onPress={exec(props.delete)} tip='Delete table'>\n            <AiOutlineDelete />\n          </IconButton>\n        )}\n      </IconGroup>\n    </div>\n  )\n}\n","import React, { HTMLAttributes } from 'react'\nimport {\n  insertAbove,\n  insertBelow,\n  insertLeft,\n  insertRight,\n  mergeSelection,\n  removeColumn,\n  removeRow,\n  removeTable,\n  splitCell,\n  toggleBorders\n} from '../../utils/commands'\n\nimport { AiOutlineBorderInner } from '@react-icons/all-files/ai/AiOutlineBorderInner'\nimport { AiOutlineDeleteColumn } from '@react-icons/all-files/ai/AiOutlineDeleteColumn'\nimport { AiOutlineDeleteRow } from '@react-icons/all-files/ai/AiOutlineDeleteRow'\nimport { AiOutlineInsertRowAbove } from '@react-icons/all-files/ai/AiOutlineInsertRowAbove'\nimport { AiOutlineInsertRowBelow } from '@react-icons/all-files/ai/AiOutlineInsertRowBelow'\nimport { AiOutlineInsertRowLeft } from '@react-icons/all-files/ai/AiOutlineInsertRowLeft'\nimport { AiOutlineInsertRowRight } from '@react-icons/all-files/ai/AiOutlineInsertRowRight'\nimport { AiOutlineMergeCells } from '@react-icons/all-files/ai/AiOutlineMergeCells'\nimport { AiOutlineSplitCells } from '@react-icons/all-files/ai/AiOutlineSplitCells'\nimport { Cardbar } from '../cardbar'\nimport { Editor } from 'slate'\nimport IconButton from '../../../../icon-button'\nimport classnames from 'classnames'\nimport css from '../../style.module.css'\nimport { useSlate } from 'slate-react'\n\ninterface TableCardbarProps extends HTMLAttributes<HTMLDivElement> {}\n\nexport const TableCardbar: React.FC<TableCardbarProps> = (props) => {\n  const editor = useSlate()\n\n  const [table] = Array.from(\n    Editor.nodes(editor, {\n      match: (n) => n.type === 'table'\n    })\n  )\n\n  const run = (action: (table: any, editor: Editor) => any) => () =>\n    action(table, editor)\n\n  const getIsBorderActive = () => {\n    if (!table) {\n      return false\n    }\n\n    return !table?.[0].borderless\n  }\n\n  return (\n    <Cardbar\n      className={classnames(props.className, css['table-cardbar'])}\n      delete={run(removeTable)}\n    >\n      <IconButton onPress={run(insertAbove)} tip='Insert row above'>\n        <AiOutlineInsertRowAbove />\n      </IconButton>\n      <IconButton onPress={run(insertBelow)} tip='Insert row below'>\n        <AiOutlineInsertRowBelow />\n      </IconButton>\n      <IconButton onPress={run(insertLeft)} tip='Insert column left'>\n        <AiOutlineInsertRowLeft />\n      </IconButton>\n      <IconButton onPress={run(insertRight)} tip='Insert column right'>\n        <AiOutlineInsertRowRight />\n      </IconButton>\n      <IconButton onPress={run(mergeSelection)} tip='Merge selection'>\n        <AiOutlineMergeCells />\n      </IconButton>\n      <IconButton onPress={run(removeColumn)} tip='Remove column'>\n        <AiOutlineDeleteColumn />\n      </IconButton>\n      <IconButton onPress={run(removeRow)} tip='Remove row'>\n        <AiOutlineDeleteRow />\n      </IconButton>\n      <IconButton onPress={run(splitCell)} tip='Split cell'>\n        <AiOutlineSplitCells />\n      </IconButton>\n      <IconButton\n        active={getIsBorderActive()}\n        onPress={run(toggleBorders)}\n        tip='Toggle borders'\n      >\n        <AiOutlineBorderInner />\n      </IconButton>\n    </Cardbar>\n  )\n}\n","import React from 'react'\nimport { RenderElementProps } from 'slate-react'\nimport classnames from 'classnames'\nimport css from '../../style.module.css'\n\nexport const TableCell: React.FC<\n  {\n    node: {\n      width: number\n      height: number\n      selectedCell?: boolean\n      colspan?: number\n      rowspan?: number\n    }\n    dataKey: string\n  } & RenderElementProps\n> = ({ attributes, node, dataKey, children }) => {\n  const { selectedCell } = node\n\n  return (\n    <td\n      {...attributes}\n      className={classnames(css['table-td'], {\n        [css.selectedCell]: selectedCell\n      })}\n      slate-table-element='td'\n      data-key={dataKey}\n      colSpan={node.colspan}\n      rowSpan={node.rowspan}\n      onDragStart={(e) => e.preventDefault()}\n      style={{\n        position: 'relative',\n        minWidth: '50px',\n        width: node.width ? `${node.width}px` : 'auto',\n        height: node.width ? `${node.height}px` : 'auto'\n      }}\n    >\n      {children}\n    </td>\n  )\n}\n","import { Editor, NodeEntry } from 'slate'\nimport { RenderElementProps, useEditor, useSelected } from 'slate-react'\n\nimport React from 'react'\nimport { TableBody } from './modules/table-body'\nimport { TableCardbar } from './modules/table-cardbar'\nimport { TableCell } from './modules/table-cell'\nimport classnames from 'classnames'\nimport css from './style.module.css'\n\nexport const Table: React.FC<RenderElementProps> = (props) => {\n  const { attributes, children, element } = props\n  const selected = useSelected()\n  const editor = useEditor()\n\n  switch (element.type) {\n    case 'table': {\n      let existSelectedCell = false\n      let table: NodeEntry | null = null\n\n      if (selected && editor.selection) {\n        ;[table] = Editor.nodes(editor, {\n          match: (n) => n.type === 'table',\n          at: Editor.path(editor, editor.selection)\n        })\n\n        if (table) {\n          const [selectedCell] = Editor.nodes(editor, {\n            at: Editor.range(editor, table[1]),\n            match: (n) => n.selectedCell as any\n          })\n\n          if (selectedCell) {\n            existSelectedCell = true\n          }\n        }\n      }\n\n      return (\n        <div style={{ position: 'relative' }}>\n          <TableCardbar\n            className={classnames({ selected: selected || existSelectedCell })}\n          />\n          <TableBody {...props} table={table}>\n            {children}\n          </TableBody>\n        </div>\n      )\n    }\n\n    case 'table-row': {\n      return (\n        <tr\n          {...attributes}\n          className={css['table-tr']}\n          slate-table-element='tr'\n          data-key={element.key}\n          onDrag={(e) => e.preventDefault()}\n        >\n          {children}\n        </tr>\n      )\n    }\n\n    case 'table-cell': {\n      return (\n        <TableCell\n          {...props}\n          dataKey={element.key as any}\n          node={children.props.node}\n        >\n          {children}\n        </TableCell>\n      )\n    }\n\n    case 'table-content': {\n      return (\n        <div slate-table-element='content' className={css['table-content']}>\n          {children}\n        </div>\n      )\n    }\n\n    default:\n      return <p {...props} />\n  }\n}\n","import {\n  BlockAlignment,\n  EditableAttributes,\n  EditableElementType,\n  composeWithAlignmentClassName,\n  composeWithStyle,\n  getIndentationPercent\n} from '../../core/tools'\nimport ImageElement, { ImageElementType } from '../elements/image'\nimport React, { FC, PropsWithChildren } from 'react'\n\nimport EditableElement from '../elements/editable'\nimport { Table } from '../elements/table'\n\nexport type ElementType =\n  | 'quote'\n  | 'code'\n  | 'bulleted-list'\n  | 'heading-one'\n  | 'heading-two'\n  | 'heading-three'\n  | 'heading-four'\n  | 'heading-five'\n  | 'heading-six'\n  | 'list-item'\n  | 'numbered-list'\n  | 'link'\n  | 'table'\n  | 'table-row'\n  | 'table-cell'\n  | 'table-content'\n  | 'image'\n  | 'editable'\n\ntype TemplateElementType = {\n  type: ElementType\n  alignment?: BlockAlignment\n  indentation?: number\n  children: any\n} & ImageElementType &\n  EditableElementType<EditableAttributes>\n\ntype TemplateElementProps = PropsWithChildren<{\n  attributes: any\n  element: TemplateElementType\n}>\n\nconst TemplateElement: FC<TemplateElementProps> = ({\n  attributes,\n  children,\n  element\n}) => {\n  const { type, url, alignment, indentation, dataType } = element\n\n  switch (type) {\n    default:\n      return (\n        <p\n          {...composeWithStyle(\n            composeWithAlignmentClassName(attributes, alignment),\n            { paddingLeft: getIndentationPercent(indentation) }\n          )}\n        >\n          {children}\n        </p>\n      )\n    case 'quote':\n      return <blockquote {...attributes}>{children}</blockquote>\n    case 'code':\n      return (\n        <pre>\n          <code {...attributes}>{children}</code>\n        </pre>\n      )\n    case 'bulleted-list':\n      return (\n        <ul\n          {...composeWithAlignmentClassName(\n            attributes,\n            alignment,\n            'list-disc list-inside'\n          )}\n        >\n          {children}\n        </ul>\n      )\n    case 'heading-one':\n      return (\n        <h1\n          {...composeWithStyle(\n            composeWithAlignmentClassName(\n              attributes,\n              alignment,\n              'text-heading-2'\n            ),\n            { paddingLeft: getIndentationPercent(indentation) }\n          )}\n        >\n          {children}\n        </h1>\n      )\n    case 'heading-two':\n      return (\n        <h2\n          {...composeWithStyle(\n            composeWithAlignmentClassName(\n              attributes,\n              alignment,\n              'text-heading-3'\n            ),\n            { paddingLeft: getIndentationPercent(indentation) }\n          )}\n        >\n          {children}\n        </h2>\n      )\n    case 'heading-three':\n      return (\n        <h3\n          {...(composeWithStyle(\n            composeWithAlignmentClassName(\n              attributes,\n              alignment,\n              'text-headline'\n            )\n          ),\n          { paddingLeft: getIndentationPercent(indentation) })}\n        >\n          {children}\n        </h3>\n      )\n    case 'heading-four':\n      return <h4 {...attributes}>{children}</h4>\n    case 'heading-five':\n      return <h5 {...attributes}>{children}</h5>\n    case 'heading-six':\n      return <h6 {...attributes}>{children}</h6>\n    case 'list-item':\n      return (\n        <li\n          {...composeWithStyle(attributes, {\n            paddingLeft: getIndentationPercent(indentation)\n          })}\n        >\n          {children}\n        </li>\n      )\n    case 'numbered-list':\n      return (\n        <ol\n          {...composeWithAlignmentClassName(\n            attributes,\n            alignment,\n            'list-decimal list-inside'\n          )}\n        >\n          {children}\n        </ol>\n      )\n    case 'link':\n      return (\n        <a href={url} {...attributes}>\n          {children}\n        </a>\n      )\n    case 'table':\n    case 'table-row':\n    case 'table-cell':\n    case 'table-content':\n      return <Table {...{ attributes, children, element }} />\n    case 'image':\n      return <ImageElement {...{ attributes, children, element }} />\n    case 'editable':\n      return dataType === 'image' ? (\n        <ImageElement {...{ attributes, children, element }} />\n      ) : (\n        <EditableElement {...{ attributes, children, element }} />\n      )\n  }\n}\n\nexport default TemplateElement\n","import React, { FC, PropsWithChildren } from 'react'\nimport {\n  composeWithClassName,\n  composeWithStyle,\n  EditableRefAttributes\n} from '../../core/tools'\nimport classnames from 'classnames'\nimport { notNil } from '../../core/utils'\n\nexport type TemplateLeafType = Partial<{\n  bold: boolean\n  code: boolean\n  italic: boolean\n  underline: boolean\n  strikethrough: boolean\n  color: string\n  ref: EditableRefAttributes\n}>\n\ntype TemplateLeafProps = PropsWithChildren<{\n  attributes: any\n  leaf: TemplateLeafType\n}>\n\nconst TemplateLeaf: FC<TemplateLeafProps> = ({\n  attributes,\n  children,\n  leaf\n}) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  if (leaf.strikethrough) {\n    children = <del>{children}</del>\n  }\n\n  return (\n    <span\n      {...composeWithClassName(\n        composeWithStyle(attributes, { color: leaf.color }),\n        classnames({ 'bg-green-highlight': notNil(leaf.ref) })\n      )}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TemplateLeaf\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import classnames from 'classnames'\nimport React, { useLayoutEffect, useState } from 'react'\n\nimport css from './style.module.css'\n\nexport type ContentDimensions = {\n  width?: number\n  height?: number\n  x?: number\n  y?: number\n}\n\ntype ContentProps = {\n  onLayoutUpdate: (dimensions: ContentDimensions) => void\n  x?: number\n  y?: number\n  hideArrow?: boolean\n  position?: string\n  alignment?: string\n  className?: string\n}\n\nconst Content: React.FC<ContentProps> = ({\n  onLayoutUpdate,\n  children,\n  x,\n  y,\n  position,\n  alignment,\n  className,\n  hideArrow\n}) => {\n  const [dimensions, setDimensions] = useState<ContentDimensions>({ x, y })\n\n  useLayoutEffect(() => {\n    const element = document.querySelector(`.${css.container}`)\n    const { width, height, x, y } = element.getBoundingClientRect()\n    const computedDimensions: ContentDimensions = { width, height, x, y }\n\n    if (JSON.stringify(computedDimensions) !== JSON.stringify(dimensions)) {\n      setDimensions(computedDimensions)\n      onLayoutUpdate(computedDimensions)\n    }\n  }, [dimensions, onLayoutUpdate])\n\n  let composedClassName = css.container\n  const arrowClassName = ` ${css.arrow} ${css[`arrow${position}`]} ${\n    css[`arrow${alignment}`]\n  }`\n\n  if (!hideArrow) composedClassName += arrowClassName\n\n  return (\n    <div\n      className={classnames(composedClassName, 'shadow-6', className)}\n      style={{ top: y, left: x }}\n    >\n      {children}\n    </div>\n  )\n}\n\nContent.defaultProps = {\n  x: 0,\n  y: 0\n}\n\nexport default Content\n","import Content, { ContentDimensions } from './content'\nimport React, {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useState\n} from 'react'\n\nimport { createPortal } from 'react-dom'\nimport { useMouseDown } from '../../core/hooks'\n\nexport type AnchorRef = MutableRefObject<Element>\n\nexport type PopupPosition = 'up' | 'right' | 'down' | 'left' | 'center'\n\nexport type PopupAlignment = 'start' | 'center' | 'end'\n\ntype PopupOffset = {\n  x: number\n  y: number\n}\n\ntype PopupContentPosition = {\n  x: number\n  y: number\n}\n\ntype PopupProps = {\n  anchor?: string\n  anchorRef?: AnchorRef\n  contentClassName?: string\n  position?: PopupPosition\n  alignment?: PopupAlignment\n  transparent?: boolean\n  distance?: number\n  offsets?: PopupOffset\n  hideArrow?: boolean\n  isVisible?: boolean\n  overlayCloseOnClick?: boolean\n  onRequestClose: () => void\n}\n\nconst EDGE_PADDING = 12\n\nconst getViewportWidth = () =>\n  window.innerWidth ||\n  document.documentElement.clientWidth ||\n  document.body.clientWidth\n\nconst getViewportHeight = () =>\n  window.innerHeight ||\n  document.documentElement.clientHeight ||\n  document.body.clientHeight\n\nconst getPositioningWithoutAnchor = (\n  dimensions: ContentDimensions,\n  position: PopupPosition,\n  alignment: PopupAlignment\n) => {\n  const viewportWidth = getViewportWidth()\n  const viewportHeight = getViewportHeight()\n  const { width, height } = dimensions\n\n  let x: number, y: number\n\n  switch (position) {\n    case 'up':\n      y = 0\n      break\n    case 'down':\n      y = viewportHeight - height\n      break\n    case 'center':\n      y = (viewportHeight - height) / 2\n      break\n    default:\n      y = 0\n      break\n  }\n\n  switch (alignment) {\n    case 'start':\n      x = 0\n      break\n    case 'center':\n      x = (viewportWidth - width) / 2\n      break\n    case 'end':\n      x = viewportWidth - width\n      break\n    default:\n      x = 0\n      break\n  }\n\n  return { x, y }\n}\n\nconst getPositioningWithAnchor = (\n  dimensions: ContentDimensions,\n  anchor: string,\n  anchorRef: AnchorRef,\n  distance: number,\n  position: PopupPosition,\n  alignment: PopupAlignment\n) => {\n  const anchorElement = anchorRef.current || document.querySelector(anchor)\n  if (!anchorElement)\n    return getPositioningWithoutAnchor(dimensions, position, alignment)\n\n  const {\n    width: anchorWidth,\n    height: anchorHeight,\n    x: anchorX,\n    y: anchorY\n  } = anchorElement.getBoundingClientRect()\n  const { width, height } = dimensions\n\n  let x: number, y: number\n\n  if (position === 'up') {\n    y = anchorY - height - distance\n\n    switch (alignment) {\n      case 'start':\n        x = anchorX\n        break\n      case 'center':\n        x = anchorX + anchorWidth / 2 - width / 2\n        break\n      case 'end':\n        x = anchorX + anchorWidth - width\n        break\n      default:\n        break\n    }\n  }\n\n  if (position === 'down') {\n    y = anchorY + anchorHeight + distance\n\n    switch (alignment) {\n      case 'start':\n        x = anchorX\n        break\n      case 'center':\n        x = anchorX + anchorWidth / 2 - width / 2\n        break\n      case 'end':\n        x = anchorX + anchorWidth - width\n        break\n      default:\n        break\n    }\n  }\n\n  if (position === 'left') {\n    x = anchorX - width - distance\n\n    switch (alignment) {\n      case 'start':\n        y = anchorY\n        break\n      case 'center':\n        y = anchorY + anchorHeight / 2 - height / 2\n        break\n      case 'end':\n        y = anchorY + anchorHeight - height\n        break\n      default:\n        break\n    }\n  }\n\n  if (position === 'right') {\n    x = anchorX + anchorWidth + distance\n\n    switch (alignment) {\n      case 'start':\n        y = anchorY\n        break\n      case 'center':\n        y = anchorY + anchorHeight / 2 - height / 2\n        break\n      case 'end':\n        y = anchorY + anchorHeight - height\n        break\n      default:\n        break\n    }\n  }\n\n  return { x, y }\n}\n\nconst getValidPositioning = (\n  dimensions: ContentDimensions,\n  anchor: string,\n  anchorRef: AnchorRef,\n  distance: number,\n  position: PopupPosition,\n  alignment: PopupAlignment,\n  offsets: PopupOffset\n) => {\n  const { width, height } = dimensions\n  const viewportWidth = getViewportWidth()\n  const viewportHeight = getViewportHeight()\n  let contentPosition: PopupContentPosition\n\n  if (!!anchor || !!anchorRef) {\n    contentPosition = getPositioningWithAnchor(\n      dimensions,\n      anchor,\n      anchorRef,\n      distance,\n      position,\n      alignment\n    )\n  } else {\n    contentPosition = getPositioningWithoutAnchor(\n      dimensions,\n      position,\n      alignment\n    )\n  }\n\n  if (offsets) {\n    const xOffset = offsets.x || 0\n    const yOffset = offsets.y || 0\n\n    contentPosition.x = contentPosition.x + xOffset\n    contentPosition.y = contentPosition.y + yOffset\n  }\n\n  const leftEdge = EDGE_PADDING\n  const topEdge = EDGE_PADDING\n  const rightEdge = viewportWidth - width\n  const bottomEdge = viewportHeight - height\n\n  if (contentPosition.x <= leftEdge) contentPosition.x = leftEdge\n  if (contentPosition.y <= topEdge) contentPosition.y = topEdge\n  if (contentPosition.x >= rightEdge) contentPosition.x = rightEdge\n  if (contentPosition.y >= bottomEdge) contentPosition.y = bottomEdge\n\n  return contentPosition\n}\n\nconst Popup: React.FC<PopupProps> = ({\n  anchor,\n  anchorRef,\n  children,\n  contentClassName,\n  position,\n  alignment,\n  transparent,\n  distance,\n  offsets,\n  isVisible,\n  hideArrow,\n  overlayCloseOnClick,\n  onRequestClose\n}) => {\n  const [\n    popupContentPosition,\n    setPopupContentPosition\n  ] = useState<PopupContentPosition>({\n    x: 0,\n    y: 0\n  })\n\n  const handleClickOverlay = useMouseDown(() => {\n    if (overlayCloseOnClick) onRequestClose()\n  })\n\n  const handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isVisible) onRequestClose()\n    },\n    [isVisible, onRequestClose]\n  )\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [isVisible, handleKeyUp])\n\n  const render = () => (\n    <div className='fixed top-0 left-0 w-full h-full z-2'>\n      <div\n        className={\n          transparent\n            ? 'w-full h-full absolute top-0 left-0 z-0'\n            : 'w-full h-full absolute top-0 left-0 z-0 bg-blue-800 opacity-50'\n        }\n        onMouseDown={handleClickOverlay}\n      />\n      <Content\n        className={contentClassName}\n        x={popupContentPosition.x}\n        y={popupContentPosition.y}\n        position={position}\n        alignment={alignment}\n        hideArrow={(!anchorRef && !anchor) || hideArrow}\n        onLayoutUpdate={(dimensions) =>\n          setPopupContentPosition(\n            getValidPositioning(\n              dimensions,\n              anchor,\n              anchorRef,\n              distance,\n              position,\n              alignment,\n              offsets\n            )\n          )\n        }\n      >\n        {children}\n      </Content>\n    </div>\n  )\n\n  if (!isVisible) return null\n\n  return createPortal(render(), document.getElementById('docmaker-modal-root'))\n}\n\nPopup.defaultProps = {\n  position: 'center',\n  alignment: 'center',\n  transparent: false,\n  distance: 10,\n  overlayCloseOnClick: true,\n  hideArrow: false,\n  isVisible: false\n}\n\nexport default Popup\n","import { ImageDimensions, getImageSizeAsync, nil } from '../../../core/utils'\nimport React, {\n  ChangeEvent,\n  FC,\n  MutableRefObject,\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\n\nimport { BiLink } from '@react-icons/all-files/bi/BiLink'\nimport Button from '../../button'\nimport Icon from '../../icon'\nimport Popup from '../../popup'\n\nexport type ImageProps = {\n  url?: string\n  label?: string\n  dimensions: ImageDimensions\n}\n\ntype ImagePopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  onRequestClose: Fn\n  onSubmitEditing?: (value: ImageProps) => void\n}\n\nconst ImagePopup: FC<ImagePopupProps> = ({\n  anchorRef,\n  isVisible,\n  onRequestClose,\n  onSubmitEditing\n}) => {\n  const [imageState, setImageState] = useState('')\n  const [scaleState, setScaleState] = useState('100')\n  const [imageDimensions, setImageDimensions] = useState<ImageDimensions>()\n\n  const decimalScale = useMemo(() => {\n    const value = parseFloat(scaleState)\n    const normalized = isNaN(value) || value < 1 ? 1 : value\n    return normalized / 100\n  }, [scaleState])\n\n  const handleChangeImageUrl = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setImageState(e.target.value)\n    },\n    []\n  )\n\n  const handleChangeScale = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setScaleState(e.target.value)\n  }, [])\n\n  const handleBlurImageInput = useCallback(async () => {\n    if (!imageState?.length) {\n      setImageDimensions(null)\n      return\n    }\n\n    try {\n      const dimensions = await getImageSizeAsync(imageState)\n      setImageDimensions(dimensions)\n    } catch (error) {\n      setImageDimensions(null)\n    }\n  }, [imageState])\n\n  const handleRequestClose = useCallback(() => {\n    setImageState('')\n    setScaleState('100')\n    setImageDimensions(null)\n    onRequestClose?.()\n  }, [onRequestClose])\n\n  const handlePressSubmit = useCallback(() => {\n    onSubmitEditing?.({\n      url: imageState,\n      dimensions: {\n        width: imageDimensions.width * decimalScale,\n        height: imageDimensions.height * decimalScale\n      }\n    })\n    handleRequestClose()\n  }, [\n    decimalScale,\n    handleRequestClose,\n    imageDimensions,\n    imageState,\n    onSubmitEditing\n  ])\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={handleRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default p-8 w-296 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        <div className='flex items-center justify-between space-x-4 mb-8'>\n          <div className='h-32 flex-1 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n            <div className='flex s-32 rounded-default rounded-r-none rounded-b-none bg-gray-200 text-gray-500 items-center justify-center font-semibold'>\n              <Icon>\n                <BiLink />\n              </Icon>\n            </div>\n            <input\n              className='border-none h-full px-6 bg-transparent font-medium flex-1 min-w-0'\n              type='text'\n              placeholder='https://www...'\n              value={imageState}\n              onChange={handleChangeImageUrl}\n              onBlur={handleBlurImageInput}\n            />\n          </div>\n          <div className='h-32 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n            <input\n              maxLength={3}\n              className='border-none h-full w-40 px-6 bg-transparent font-medium m-0'\n              placeholder='0'\n              value={scaleState}\n              onChange={handleChangeScale}\n            />\n            <div className='flex s-32 bg-transparent text-gray-300 items-center justify-center font-semibold'>\n              %\n            </div>\n          </div>\n        </div>\n        <div className='flex justify-end'>\n          <Button\n            disabled={nil(imageDimensions)}\n            className='h-32'\n            onPress={handlePressSubmit}\n          >\n            Insert\n          </Button>\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default ImagePopup\n","import React, {\n  FC,\n  memo,\n  MutableRefObject,\n  useCallback,\n  useState,\n  ChangeEvent\n} from 'react'\nimport Popup from '../../popup'\nimport css from './style.module.css'\nimport classnames from 'classnames'\nimport { areEqualColors, isHexColor } from '../../../core/utils'\nimport { useMouseDown } from '../../../core/hooks'\nimport { PRESET_COLORS } from '../../../core/constants'\n\ntype ColorPopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  value?: string\n  onChangeColorOption?: (value?: string, focus?: boolean) => void\n  onRequestClose: Fn\n}\n\ntype ColorBoxProps = {\n  active?: boolean\n  color: string\n  onPress?: (value: string) => void\n}\n\nconst BaseColorBox: FC<ColorBoxProps> = ({ active, color, onPress }) => {\n  const handlePress = useMouseDown(() => {\n    onPress?.(color)\n  })\n\n  return (\n    <div\n      style={{ color }}\n      onMouseDown={handlePress}\n      title={color}\n      className={classnames(\n        's-32 rounded-default bg-current cursor-pointer transition-shadow duration-250',\n        css['color-box'],\n        { [css.active]: active }\n      )}\n    />\n  )\n}\n\nconst ColorBox = memo(BaseColorBox)\n\nconst ColorPopup: FC<ColorPopupProps> = ({\n  anchorRef,\n  isVisible,\n  value,\n  onChangeColorOption,\n  onRequestClose\n}) => {\n  const [colorState, setColorState] = useState('')\n\n  const handlePressColorOption = useCallback(\n    (option: string) => {\n      if (!isHexColor(option)) {\n        return\n      }\n\n      const selectedColor = areEqualColors(value, option) ? null : option\n\n      setColorState(selectedColor?.replaceAll('#', ''))\n      onChangeColorOption?.(selectedColor)\n      onRequestClose?.()\n    },\n    [onChangeColorOption, onRequestClose, value]\n  )\n\n  const handleChangeInput = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      const inputValue = e.target.value\n      const parsedColor = inputValue?.length\n        ? `#${inputValue.replace('#', '')}`\n        : null\n\n      setColorState(e.target.value)\n\n      if (isHexColor(parsedColor)) {\n        onChangeColorOption?.(parsedColor, false)\n      }\n    },\n    [onChangeColorOption]\n  )\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={onRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default grid grid-cols-7 gap-6 p-8 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        {PRESET_COLORS.map((o) => (\n          <ColorBox\n            color={o}\n            key={o}\n            onPress={handlePressColorOption}\n            active={areEqualColors(value, o)}\n          />\n        ))}\n        <div className='h-32 col-span-4 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n          <div className='flex s-32 rounded-default rounded-r-none rounded-b-none bg-gray-200 text-gray-500 items-center justify-center font-semibold'>\n            #\n          </div>\n          <input\n            maxLength={6}\n            className={classnames(\n              'border-none h-full px-6 bg-transparent font-medium',\n              css.input\n            )}\n            type='text'\n            placeholder={value?.replace('#', '')}\n            value={colorState}\n            onChange={handleChangeInput}\n          />\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default ColorPopup\n","import React, {\n  Children,\n  cloneElement,\n  FC,\n  PropsWithChildren,\n  ReactElement\n} from 'react'\nimport classnames from 'classnames'\n\ntype FieldProps = PropsWithChildren<{\n  label?: string\n  className?: string\n}>\n\nconst Field: FC<FieldProps> = ({ className, children, label }) => {\n  return (\n    <div className={className}>\n      {!!label?.length && (\n        <label className='text-blue-500 block mb-4 text-subhead font-medium'>\n          {label}\n        </label>\n      )}\n      {Children.map(children, (child: ReactElement) =>\n        cloneElement(child, {\n          className: classnames(\n            child.props.className,\n            'w-full appearance-none border border-gray-200 rounded-default h-32 px-8 transition:colors transition:shadow duration-250 focus:border-blue-500 focus:shadow-outline'\n          )\n        })\n      )}\n    </div>\n  )\n}\n\nexport default Field\n","import React, {\n  ChangeEvent,\n  FC,\n  MutableRefObject,\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { useEditor, useOrphanNodes } from '../../../core/hooks'\nimport {\n  EditableAttributes,\n  EditableElementType,\n  EditableRefAttributes,\n  getMatchingNodes\n} from '../../../core/tools'\nimport Button from '../../button'\nimport Field from '../../field'\nimport Popup from '../../popup'\n\ntype ConditionPopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  onRequestClose: Fn\n  onSubmitEditing?: (value: EditableRefAttributes) => void\n}\n\nconst ConditionPopup: FC<ConditionPopupProps> = ({\n  anchorRef,\n  isVisible,\n  onRequestClose,\n  onSubmitEditing\n}) => {\n  const editor = useEditor()\n  const [orphanNodes] = useOrphanNodes()\n  const editableNodes = getMatchingNodes(\n    editor,\n    (o) =>\n      o.type === 'editable' &&\n      !(o.valueRef as string)?.length &&\n      ['options', 'radio'].includes(o.dataType as string)\n  )\n    .concat(orphanNodes)\n    .map((o) => o as EditableElementType<EditableAttributes>)\n\n  const [parent, setParent] = useState('')\n  const [value, setValue] = useState('')\n  const options = useMemo(\n    () => editableNodes.find((o) => o.id === parent)?.options || [],\n    [editableNodes, parent]\n  )\n\n  const isValid = !!parent?.length && !!value?.length\n\n  const handleChangeParent = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      const selected = e.target.value\n\n      if (selected === parent) {\n        return\n      }\n\n      setParent(selected)\n      setValue('')\n    },\n    [parent]\n  )\n\n  const handleChangeValue = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      const selected = e.target.value\n\n      if (selected === value) {\n        return\n      }\n\n      setValue(selected)\n    },\n    [value]\n  )\n\n  const handleRequestClose = useCallback(() => {\n    setParent('')\n    setValue('')\n    onRequestClose?.()\n  }, [onRequestClose])\n\n  const handlePressSubmit = useCallback(() => {\n    onSubmitEditing?.({\n      parent,\n      value\n    })\n    handleRequestClose()\n  }, [handleRequestClose, onSubmitEditing, parent, value])\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={handleRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default p-8 space-y-8 w-320 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        <Field label='Only show when...'>\n          <select value={parent} onChange={handleChangeParent}>\n            <option hidden value=''>\n              Choose one\n            </option>\n            {editableNodes.map((o) => (\n              <option key={o.id} value={o.id}>\n                {o.defaultValue}({o.label})\n              </option>\n            ))}\n          </select>\n        </Field>\n        <Field label='equals...'>\n          <select value={value} onChange={handleChangeValue}>\n            <option hidden value=''>\n              Choose one\n            </option>\n            {options.map((o) => (\n              <option key={o.id} value={o.id}>\n                {o.label}\n              </option>\n            ))}\n          </select>\n        </Field>\n        <div className='flex justify-end'>\n          <Button\n            disabled={!isValid}\n            className='h-32'\n            onPress={handlePressSubmit}\n          >\n            Add condition\n          </Button>\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default ConditionPopup\n","import React, { MouseEvent, FC, memo } from 'react'\nimport classnames from 'classnames'\n\ntype SegmentedControlProps = {\n  className?: string\n  value: number\n  options: Array<string>\n  onChangeValue: (value: number) => void\n}\n\nconst BaseSegmentedControl: FC<SegmentedControlProps> = ({\n  className,\n  value,\n  options,\n  onChangeValue\n}) => {\n  const handlePressOption = (e: MouseEvent, index: number) => {\n    e.preventDefault()\n    onChangeValue?.(index)\n  }\n\n  return (\n    <div\n      className={classnames(\n        'bg-gray-100 rounded-full p-4 w-296 h-40 flex items-center relative',\n        className\n      )}\n    >\n      <div\n        className='absolute bg-gray-500 rounded-full z-0 top-4 h-32 transition-all duration-500'\n        style={{ width: 144, left: 144 * value + 4 }}\n      />\n      {options.map((o, i) => (\n        <div\n          className={classnames(\n            'font-medium flex-1 flex items-center justify-center relative z-1 cursor-pointer transition-colors duration-500',\n            {\n              'text-gray-500 hover:text-gray-700': value !== i,\n              'text-white': value === i\n            }\n          )}\n          key={i}\n          onMouseDown={(e) => handlePressOption(e, i)}\n        >\n          {o}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst SegmentedControl = memo(BaseSegmentedControl)\n\nexport default SegmentedControl\n","import {\n  EditableAttributes,\n  EditableElementType,\n  getEditableAttributes,\n  getEditableAttributesValidity,\n  getMatchingNodes\n} from '../../../../core/tools'\nimport React, { ChangeEvent, FC, useCallback, useMemo, useState } from 'react'\n\nimport Button from '../../../button'\nimport Field from '../../../field'\nimport { useEditor } from '../../../../core/hooks'\n\ntype EditableCopyExistingProps = {\n  onSubmit?: (attributes: EditableAttributes) => void\n}\n\nconst EditableCopyExisting: FC<EditableCopyExistingProps> = ({ onSubmit }) => {\n  const editor = useEditor()\n  const editableNodes = useMemo(\n    () =>\n      getMatchingNodes(\n        editor,\n        (o) => o.type === 'editable' && !(o.valueRef as string)?.length\n      ).map((o) => o as EditableElementType<EditableAttributes>),\n    [editor]\n  )\n\n  const [valueRef, setValueRef] = useState('')\n  const [defaultValue, setDefaultValue] = useState('')\n  const dataType = useMemo(\n    () => editableNodes?.find((o) => o.id === valueRef)?.dataType,\n    [editableNodes, valueRef]\n  )\n\n  const isValid = useMemo(\n    () =>\n      getEditableAttributesValidity(\n        { valueRef, defaultValue, dataType },\n        false,\n        true\n      ),\n    [dataType, defaultValue, valueRef]\n  )\n\n  const handleChangeValueRef = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      const value = e.target.value\n\n      if (value === valueRef) {\n        return\n      }\n\n      setValueRef(value)\n      setDefaultValue(\n        editableNodes.find((o) => o.id === value)?.defaultValue || ''\n      )\n    },\n    [editableNodes, valueRef]\n  )\n\n  const handleChangeDefaultValue = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setDefaultValue(e.target.value)\n    },\n    []\n  )\n\n  const handlePressSubmit = useCallback(() => {\n    const data = getEditableAttributes({ valueRef, defaultValue, dataType })\n\n    onSubmit?.(data)\n  }, [dataType, defaultValue, onSubmit, valueRef])\n\n  return (\n    <div>\n      <Field label='Copy from' className='mb-18'>\n        <select value={valueRef} onChange={handleChangeValueRef}>\n          <option hidden value=''>\n            Choose one\n          </option>\n          {editableNodes.map((o) => (\n            <option key={o.id} value={o.id}>\n              {o.defaultValue}({o.label})\n            </option>\n          ))}\n        </select>\n      </Field>\n      <Field label='Default value' className='mb-18'>\n        <input\n          value={defaultValue}\n          onChange={handleChangeDefaultValue}\n          placeholder='Default'\n        />\n      </Field>\n      <div className='flex justify-end pt-24'>\n        <Button\n          disabled={!isValid}\n          className='h-32'\n          onPress={handlePressSubmit}\n        >\n          Insert\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default EditableCopyExisting\n","import React, { FC, memo } from 'react'\nimport ReactSwitch from 'react-switch'\n\ntype SwitchProps = {\n  className?: string\n  value: boolean\n  onChangeValue: (value: boolean) => void\n}\n\nconst BaseSwitch: FC<SwitchProps> = ({ className, value, onChangeValue }) => {\n  return (\n    <ReactSwitch\n      checked={value}\n      className={className}\n      onChange={onChangeValue}\n      offColor='#ADC5FA'\n      onColor='#326FF3'\n      checkedIcon={false}\n      uncheckedIcon={false}\n      handleDiameter={18}\n      height={22}\n      width={44}\n      activeBoxShadow='0 0 0 4px rgba(103, 126, 138, 0.125)'\n    />\n  )\n}\n\nconst Switch = memo(BaseSwitch)\n\nexport default Switch\n","import React, {\n  ChangeEvent,\n  FC,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n  KeyboardEvent\n} from 'react'\nimport Button from '../../../button'\nimport Field from '../../../field'\nimport Switch from '../../../switch'\nimport { FaRegTrashAlt } from '@react-icons/all-files/fa/FaRegTrashAlt'\nimport { AiFillPlusCircle } from '@react-icons/all-files/ai/AiFillPlusCircle'\nimport Icon from '../../../icon'\nimport {\n  EditableAttributes,\n  EditableDataType,\n  EditableOption,\n  getEditableAttributes,\n  getEditableAttributesValidity\n} from '../../../../core/tools'\nimport {\n  DATE_FORMATS,\n  EDITABLE_DATA_TYPES,\n  TIME_FORMATS\n} from '../../../../core/constants'\nimport { formatDate, generateUUID } from '../../../../core/utils'\n\ntype EditableCreateNewProps = {\n  onSubmit?: (attributes: EditableAttributes, isOrphan?: boolean) => void\n}\n\nconst EditableCreateNew: FC<EditableCreateNewProps> = ({ onSubmit }) => {\n  const now = useRef(new Date()).current\n  const dataTypeOptions = useRef(Object.entries(EDITABLE_DATA_TYPES)).current\n  const dateFormatOptions = useRef(DATE_FORMATS).current\n  const timeFormatOptions = useRef(TIME_FORMATS).current\n\n  const [dataType, setDataType] = useState<EditableDataType>(\n    '' as EditableDataType\n  )\n  const [defaultValue, setDefaultValue] = useState('')\n  const [dateTimeFormat, setDateTimeFormat] = useState('')\n  const [label, setLabel] = useState('')\n  const [multiline, setMultiline] = useState(false)\n  const [options, setOptions] = useState<Array<EditableOption>>([])\n  const [editingOption, setEditingOption] = useState('')\n  const [showTip, setShowTip] = useState(false)\n  const [isOrphan, setIsOrphan] = useState(false)\n  const [tip, setTip] = useState('')\n\n  const isValid = useMemo(\n    () =>\n      getEditableAttributesValidity(\n        {\n          dataType,\n          dateTimeFormat,\n          defaultValue,\n          label,\n          options,\n          tip\n        },\n        showTip\n      ),\n    [dataType, dateTimeFormat, defaultValue, label, options, showTip, tip]\n  )\n\n  const handlePressDeleteOption = useCallback(\n    (id: string) => {\n      const eventualValue = [...options]\n      const index = eventualValue.findIndex((o) => o.id === id)\n\n      if (~index) {\n        eventualValue.splice(index, 1)\n        setOptions(eventualValue)\n      }\n    },\n    [options]\n  )\n\n  const handlePressAddOption = useCallback(() => {\n    const label = editingOption?.trim()\n\n    if (!label?.length) {\n      return\n    }\n\n    const id = generateUUID()\n\n    setOptions((groundValue) => [...groundValue, { id, label }])\n    setEditingOption('')\n  }, [editingOption])\n\n  const handleEditingOptionKeydown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key?.toLowerCase() === 'enter') {\n        e.preventDefault()\n        handlePressAddOption()\n      }\n    },\n    [handlePressAddOption]\n  )\n\n  const handlePressSubmit = useCallback(() => {\n    const data = getEditableAttributes(\n      {\n        dataType,\n        dateTimeFormat,\n        multiline,\n        defaultValue,\n        label,\n        options,\n        tip\n      },\n      showTip\n    )\n\n    onSubmit?.(data, isOrphan)\n  }, [\n    dataType,\n    dateTimeFormat,\n    defaultValue,\n    isOrphan,\n    label,\n    multiline,\n    onSubmit,\n    options,\n    showTip,\n    tip\n  ])\n\n  const handleChangeDataType = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      const value = e.target.value as EditableDataType\n\n      if (value === dataType) {\n        return\n      }\n\n      setDataType(value)\n\n      if (value === 'date' || value === 'time') {\n        setDateTimeFormat('')\n      }\n    },\n    [dataType]\n  )\n\n  const handleChangeDateTimeFormat = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      setDateTimeFormat(e.target.value)\n    },\n    []\n  )\n\n  const handleChangeEditingOption = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setEditingOption(e.target.value)\n    },\n    []\n  )\n\n  const handleChangeLabel = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLabel(e.target.value)\n  }, [])\n\n  const handleChangeDefaultValue = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setDefaultValue(e.target.value)\n    },\n    []\n  )\n\n  const handleChangeTip = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTip(e.target.value)\n  }, [])\n\n  return (\n    <div>\n      <div className='flex items-end space-x-12 mb-18'>\n        <Field label='Type' className='flex-1'>\n          <select value={dataType} onChange={handleChangeDataType}>\n            <option hidden value=''>\n              Choose one\n            </option>\n            {dataTypeOptions.map(([value, label]) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n        </Field>\n        {dataType === 'text' && (\n          <div className='flex flex-1 justify-start items-center space-x-8 pb-6'>\n            <div>Multiline</div>\n            <Switch value={multiline} onChangeValue={setMultiline} />\n          </div>\n        )}\n        {dataType === 'date' && (\n          <Field label='Date format'>\n            <select\n              value={dateTimeFormat}\n              onChange={handleChangeDateTimeFormat}\n            >\n              <option hidden value=''>\n                Choose a format\n              </option>\n              {dateFormatOptions.map((o) => (\n                <option key={o} value={o}>\n                  {formatDate(now, o)}\n                </option>\n              ))}\n            </select>\n          </Field>\n        )}\n        {dataType === 'time' && (\n          <Field label='Time format'>\n            <select\n              value={dateTimeFormat}\n              onChange={handleChangeDateTimeFormat}\n            >\n              <option hidden value=''>\n                Choose a format\n              </option>\n              {timeFormatOptions.map((o) => (\n                <option key={o} value={o}>\n                  {formatDate(now, o)}\n                </option>\n              ))}\n            </select>\n          </Field>\n        )}\n      </div>\n      {['radio', 'options'].includes(dataType) && (\n        <div className='mb-18'>\n          <div className='text-blue-500 block mb-4 text-subhead font-medium'>\n            Options\n          </div>\n          <div className='space-y-6'>\n            {options?.map((o) => (\n              <div\n                key={o.id}\n                onClick={() => handlePressDeleteOption(o.id)}\n                className='flex items-center justify-between px-8 h-32 w-full border border-gray-200 bg-gray-100 rounded-default'\n              >\n                <span className='text-gray-500'>{o.label}</span>\n                <Icon className='cursor-pointer text-gray-500 transition-colors duration-250'>\n                  <FaRegTrashAlt />\n                </Icon>\n              </div>\n            ))}\n            <div className='flex items-center justify-between px-8 h-32 w-full border border-gray-200 rounded-default transition:colors transition:shadow duration-250 focus-within:shadow-outline focus-within:border-blue-500'>\n              <input\n                value={editingOption}\n                className='border-none h-full w-full bg-transparent m-0'\n                placeholder='+ Add an option'\n                onChange={handleChangeEditingOption}\n                onKeyDown={handleEditingOptionKeydown}\n              />\n              <Icon\n                onPress={handlePressAddOption}\n                className='cursor-pointer text-blue-500 transition-colors duration-250 hover:text-blue-600'\n              >\n                <AiFillPlusCircle />\n              </Icon>\n            </div>\n          </div>\n        </div>\n      )}\n      <Field label='Label' className='mb-18'>\n        <input\n          value={label}\n          onChange={handleChangeLabel}\n          placeholder='Question label'\n        />\n      </Field>\n      <Field label='Default value' className='mb-18'>\n        <input\n          value={defaultValue}\n          onChange={handleChangeDefaultValue}\n          placeholder='Default'\n        />\n      </Field>\n      <div className='flex flex-1 justify-between items-center mb-18'>\n        <div>Show description</div>\n        <Switch value={showTip} onChangeValue={setShowTip} />\n      </div>\n      {showTip && (\n        <Field label='Description' className='mb-18'>\n          <input\n            value={tip}\n            onChange={handleChangeTip}\n            placeholder='Lorem ipsum...'\n          />\n        </Field>\n      )}\n      <div className='flex flex-1 justify-between items-center mb-18'>\n        <div>Save in Icebox</div>\n        <Switch value={isOrphan} onChangeValue={setIsOrphan} />\n      </div>\n      <div className='flex justify-end pt-24'>\n        <Button\n          disabled={!isValid}\n          onPress={handlePressSubmit}\n          className='h-32'\n        >\n          Insert\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default EditableCreateNew\n","import React, { FC, useCallback, useState } from 'react'\nimport { EditableAttributes } from '../../../core/tools'\nimport Popup from '../../popup'\nimport SegmentedControl from '../../segmented-control'\nimport EditableCopyExisting from './copy-existing'\nimport EditableCreateNew from './create-new'\n\ntype EditablePopupProps = {\n  isVisible: boolean\n  onRequestClose: Fn\n  onSubmit: (attributes: EditableAttributes, isOrphan?: boolean) => void\n}\n\nconst EditablePopupProps: FC<EditablePopupProps> = ({\n  isVisible,\n  onRequestClose,\n  onSubmit\n}) => {\n  const [segment, setSegment] = useState(0)\n\n  const handleSubmit = useCallback(\n    (attributes: EditableAttributes, isOrphan = false) => {\n      onSubmit?.(attributes, isOrphan)\n      onRequestClose?.()\n      setSegment(0)\n    },\n    [onRequestClose, onSubmit]\n  )\n\n  return (\n    <Popup\n      position='center'\n      alignment='center'\n      isVisible={isVisible}\n      onRequestClose={onRequestClose}\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default w-480 py-12 px-16 bg-white border border-gray-300 overflow-hidden'>\n        <div className='flex items-center justify-center mb-28'>\n          <SegmentedControl\n            value={segment}\n            onChangeValue={setSegment}\n            options={['Create new', 'Copy existing']}\n          />\n        </div>\n        {segment === 0 && <EditableCreateNew onSubmit={handleSubmit} />}\n        {segment === 1 && <EditableCopyExisting onSubmit={handleSubmit} />}\n      </div>\n    </Popup>\n  )\n}\n\nexport default EditablePopupProps\n","import { ImageDimensions, notNil, parseNumber } from '../../../core/utils'\nimport React, {\n  ChangeEvent,\n  FC,\n  MutableRefObject,\n  useCallback,\n  useState\n} from 'react'\n\nimport Button from '../../button'\nimport Field from '../../field'\nimport Icon from '../../icon'\nimport Popup from '../../popup'\nimport { TiTimes } from '@react-icons/all-files/ti/TiTimes'\n\ntype ImageSizePopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  onRequestClose: Fn\n  onSubmitEditing?: (value: ImageDimensions, label?: string) => void\n}\n\nconst ImageSizePopup: FC<ImageSizePopupProps> = ({\n  anchorRef,\n  isVisible,\n  onRequestClose,\n  onSubmitEditing\n}) => {\n  const [width, setWidth] = useState(100)\n  const [height, setHeight] = useState(100)\n  const [label, setLabel] = useState('')\n\n  const isValid =\n    notNil(width) && notNil(height) && !!label?.length && width * height > 0\n\n  const handleChangeWidth = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setWidth(parseNumber(e.target.value))\n  }, [])\n\n  const handleChangeHeight = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setHeight(parseNumber(e.target.value))\n  }, [])\n\n  const handleChangeLabel = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLabel(e.target.value)\n  }, [])\n\n  const handleRequestClose = useCallback(() => {\n    setWidth(100)\n    setHeight(100)\n    onRequestClose?.()\n  }, [onRequestClose])\n\n  const handlePressSubmit = useCallback(() => {\n    onSubmitEditing?.(\n      {\n        width,\n        height\n      },\n      label\n    )\n    handleRequestClose()\n  }, [handleRequestClose, height, label, onSubmitEditing, width])\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={handleRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default p-8 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        <div>\n          <Field label='Label' className='mb-8'>\n            <input\n              value={label}\n              onChange={handleChangeLabel}\n              placeholder='Image upload label'\n            />\n          </Field>\n        </div>\n        <span className='text-blue-500 block mb-4 text-subhead font-medium'>\n          Dimensions\n        </span>\n        <div className='flex items-center justify-between space-x-4 mb-8'>\n          <div className='h-32 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n            <input\n              className='border-none h-full w-40 px-6 bg-transparent font-medium m-0'\n              placeholder='0'\n              value={width}\n              onChange={handleChangeWidth}\n            />\n            <div className='flex s-32 bg-transparent text-gray-300 items-center justify-center text-subhead font-semibold'>\n              PX\n            </div>\n          </div>\n          <Icon>\n            <TiTimes />\n          </Icon>\n          <div className='h-32 overflow-hidden rounded-default border border-gray-200 flex items-center justify-start'>\n            <input\n              className='border-none h-full w-40 px-6 bg-transparent font-medium m-0'\n              placeholder='0'\n              value={height}\n              onChange={handleChangeHeight}\n            />\n            <div className='flex s-32 bg-transparent text-gray-300 items-center justify-center text-subhead font-semibold'>\n              PX\n            </div>\n          </div>\n        </div>\n        <div className='flex justify-end'>\n          <Button\n            disabled={!isValid}\n            className='h-32'\n            onPress={handlePressSubmit}\n          >\n            Insert\n          </Button>\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default ImageSizePopup\n","import React, { FC, MutableRefObject, useCallback } from 'react'\nimport { FiInbox } from '@react-icons/all-files/fi/FiInbox'\nimport { useOrphanNodes } from '../../../core/hooks'\nimport Icon from '../../icon'\nimport Popup from '../../popup'\nimport { FaRegTrashAlt } from '@react-icons/all-files/fa/FaRegTrashAlt'\n\ntype OrphanNodesPopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  onRequestClose: Fn\n}\n\nconst OrphanNodesPopup: FC<OrphanNodesPopupProps> = ({\n  anchorRef,\n  isVisible,\n  onRequestClose\n}) => {\n  const [orphanNodes, setOrphanNodes] = useOrphanNodes()\n\n  const handlePressDelete = useCallback(\n    (id: string) => {\n      const eventualValue = [...orphanNodes]\n      const index = eventualValue.findIndex((o) => o.id === id)\n\n      if (!~index) {\n        return\n      }\n\n      eventualValue.splice(index, 1)\n      setOrphanNodes(eventualValue)\n    },\n    [orphanNodes, setOrphanNodes]\n  )\n\n  return (\n    <Popup\n      position='down'\n      alignment='end'\n      isVisible={isVisible}\n      onRequestClose={onRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default p-8 space-y-8 w-320 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        {!orphanNodes.length && (\n          <div className='flex flex-col items-center justify-center text-center py-20 space-y-4'>\n            <Icon className='text-blue-500 s-28'>\n              <FiInbox />\n            </Icon>\n            <div className='text-heading-2 font-medium'>Spick and span!</div>\n            <div className='text-subhead'>\n              Choose the <span className='text-blue-500'>Save to Icebox</span>{' '}\n              option to create standalone editables that do not appear in the\n              document.\n            </div>\n          </div>\n        )}\n        <div className='space-y-4'>\n          {orphanNodes.map(({ id, defaultValue }) => (\n            <div\n              key={id as any}\n              className='rounded-default bg-blue-500 text-white font-medium px-8 py-8 flex items-center'\n            >\n              <div className='flex-1'>{defaultValue}</div>\n              <Icon\n                onPress={() => handlePressDelete(id as any)}\n                className='cursor-pointer text-white opacity-50 transition-opacity duration-250 hover:opacity-100'\n              >\n                <FaRegTrashAlt />\n              </Icon>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Popup>\n  )\n}\n\nexport default OrphanNodesPopup\n","import React, {\n  FC,\n  MutableRefObject,\n  PropsWithChildren,\n  useCallback\n} from 'react'\nimport Popup from '../../popup'\nimport classnames from 'classnames'\nimport { HeadingFormatType } from '../../../core/tools'\nimport { nil } from '../../../core/utils'\nimport { useMouseDown } from '../../../core/hooks'\n\ntype TextSizePopupProps = {\n  anchorRef: MutableRefObject<Element>\n  isVisible: boolean\n  value: HeadingFormatType\n  onPressOption?: (value: HeadingFormatType) => void\n  onRequestClose: Fn\n}\n\ntype TextSizeOptionProps = PropsWithChildren<{\n  active?: boolean\n  onPress?: Fn\n}>\n\nconst TextSizeOption: FC<TextSizeOptionProps> = ({\n  active,\n  children,\n  onPress\n}) => {\n  const handlePress = useMouseDown(onPress)\n\n  return (\n    <div\n      className={classnames(\n        'cursor-pointer h-40 px-20 flex items-center font-medium bg-transparent transition-colors duration-250 hover:bg-blue-100 hover:text-blue-500',\n        {\n          'text-blue-500 bg-blue-highlight': active\n        }\n      )}\n      onMouseDown={handlePress}\n    >\n      {children}\n    </div>\n  )\n}\n\nconst TextSizePopup: FC<TextSizePopupProps> = ({\n  anchorRef,\n  isVisible,\n  value,\n  onPressOption,\n  onRequestClose\n}) => {\n  const handlePressOption = useCallback(\n    (option?: HeadingFormatType) => {\n      onPressOption?.(option)\n      onRequestClose?.()\n    },\n    [onPressOption, onRequestClose]\n  )\n\n  return (\n    <Popup\n      position='down'\n      alignment='start'\n      isVisible={isVisible}\n      onRequestClose={onRequestClose}\n      anchorRef={anchorRef}\n      transparent\n      hideArrow\n      overlayCloseOnClick\n      contentClassName='rounded-default'\n    >\n      <div className='rounded-default w-144 bg-white border border-gray-300 overflow-hidden text-gray-500'>\n        <TextSizeOption active={nil(value)} onPress={() => handlePressOption()}>\n          <span className='-ml-1'>Normal</span>\n        </TextSizeOption>\n        <TextSizeOption\n          active={value === 'heading-three'}\n          onPress={() => handlePressOption('heading-three')}\n        >\n          <span className='text-headline -ml-1'>Heading 3</span>\n        </TextSizeOption>\n        <TextSizeOption\n          active={value === 'heading-two'}\n          onPress={() => handlePressOption('heading-two')}\n        >\n          <span className='text-heading-3 -ml-1'>Heading 2</span>\n        </TextSizeOption>\n        <TextSizeOption\n          active={value === 'heading-one'}\n          onPress={() => handlePressOption('heading-one')}\n        >\n          <span className='text-heading-2 -ml-1'>Heading 1</span>\n        </TextSizeOption>\n      </div>\n    </Popup>\n  )\n}\n\nexport default TextSizePopup\n","import {\n  BlockAlignment,\n  EditableAttributes,\n  EditableRefAttributes,\n  HeadingFormatType,\n  LeafFormatType,\n  createEditableNode,\n  decreaseIndentation,\n  focusEditor,\n  increaseIndentation,\n  insertEditableBlock,\n  insertImageBlock,\n  insertTableBlock,\n  isBlockActive,\n  isMarkActive,\n  setAlignment,\n  setConditionActive,\n  toggleBlockActive,\n  toggleColorMarkActive,\n  toggleMarkActive,\n  unsetConditionActive\n} from '../../core/tools'\nimport { ImageDimensions, nil, notNil } from '../../core/utils'\nimport ImagePopup, { ImageProps } from '../popups/image'\nimport React, { FC, Fragment, useCallback, useRef } from 'react'\nimport {\n  useAlignmentValue,\n  useCanRedo,\n  useCanUndo,\n  useConditionActive,\n  useEditor,\n  useLeafColorValue,\n  useMouseDown,\n  useOrphanNodes,\n  usePopupUtils,\n  useTextSizeValue\n} from '../../core/hooks'\n\nimport { ALIGNMENTS } from '../../core/constants'\nimport { AiOutlineTable } from '@react-icons/all-files/ai/AiOutlineTable'\nimport ColorPopup from '../popups/color'\nimport ConditionPopup from '../popups/condition'\nimport EditablePopupProps from '../popups/editable'\nimport { FiInbox } from '@react-icons/all-files/fi/FiInbox'\nimport { GrRedo } from '@react-icons/all-files/gr/GrRedo'\nimport { GrUndo } from '@react-icons/all-files/gr/GrUndo'\nimport { HistoryEditor } from 'slate-history'\nimport Icon from '../icon'\nimport IconButton from '../icon-button'\nimport IconGroup from '../icon-group'\nimport ImageSizePopup from '../popups/image-size'\nimport { MdFormatAlignCenter } from '@react-icons/all-files/md/MdFormatAlignCenter'\nimport { MdFormatAlignJustify } from '@react-icons/all-files/md/MdFormatAlignJustify'\nimport { MdFormatAlignLeft } from '@react-icons/all-files/md/MdFormatAlignLeft'\nimport { MdFormatAlignRight } from '@react-icons/all-files/md/MdFormatAlignRight'\nimport { MdFormatBold } from '@react-icons/all-files/md/MdFormatBold'\nimport { MdFormatIndentDecrease } from '@react-icons/all-files/md/MdFormatIndentDecrease'\nimport { MdFormatIndentIncrease } from '@react-icons/all-files/md/MdFormatIndentIncrease'\nimport { MdFormatItalic } from '@react-icons/all-files/md/MdFormatItalic'\nimport { MdFormatListBulleted } from '@react-icons/all-files/md/MdFormatListBulleted'\nimport { MdFormatListNumbered } from '@react-icons/all-files/md/MdFormatListNumbered'\nimport { MdFormatSize } from '@react-icons/all-files/md/MdFormatSize'\nimport { MdFormatStrikethrough } from '@react-icons/all-files/md/MdFormatStrikethrough'\nimport { MdFormatUnderlined } from '@react-icons/all-files/md/MdFormatUnderlined'\nimport { MdTextFields } from '@react-icons/all-files/md/MdTextFields'\nimport { MdTransform } from '@react-icons/all-files/md/MdTransform'\nimport OrphanNodesPopup from '../popups/orphan-nodes'\nimport { RiImage2Fill } from '@react-icons/all-files/ri/RiImage2Fill'\nimport { RiImageEditFill } from '@react-icons/all-files/ri/RiImageEditFill'\nimport TextSizePopup from '../popups/text-size'\nimport { Transforms } from 'slate'\nimport classnames from 'classnames'\n\nconst Toolbar: FC = () => {\n  const editor = useEditor()\n  const editorSelection = useRef(editor.selection)\n\n  const textSizePopupAnchorRef = useRef(null)\n  const colorPopupAnchorRef = useRef(null)\n  const imagePopupAnchorRef = useRef(null)\n  const imageSizePopupAnchorRef = useRef(null)\n  const conditionPopupAnchorRef = useRef(null)\n  const orphanNodesPopupAnchorRef = useRef(null)\n\n  const textSizePopup = usePopupUtils()\n  const colorPopup = usePopupUtils()\n  const imagePopup = usePopupUtils()\n  const imageSizePopup = usePopupUtils()\n  const editablePopup = usePopupUtils()\n  const conditionPopup = usePopupUtils()\n  const orphanNodesPopup = usePopupUtils()\n\n  const textSizeValue = useTextSizeValue()\n  const leafColorValue = useLeafColorValue()\n  const alignmentValue = useAlignmentValue()\n  const canUndo = useCanUndo()\n  const canRedo = useCanRedo()\n  const conditionActive = useConditionActive()\n\n  const [, setOrphanNodes] = useOrphanNodes()\n\n  const handleChangeTextSizeOption = useCallback(\n    (value: HeadingFormatType) => {\n      const prevValue = textSizeValue?.name\n\n      if (value === prevValue) {\n        return\n      }\n\n      if (notNil(prevValue)) {\n        toggleBlockActive(editor, prevValue)\n      }\n\n      if (notNil(value)) {\n        toggleBlockActive(editor, value)\n      }\n\n      focusEditor(editor)\n    },\n    [editor, textSizeValue]\n  )\n\n  const handleChangeColorOption = useCallback(\n    (value: string, focus = true) => {\n      const prevValue = leafColorValue\n\n      if (value === prevValue) {\n        return\n      }\n\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      if (notNil(prevValue)) {\n        toggleColorMarkActive(editor, prevValue)\n      }\n\n      if (notNil(value)) {\n        toggleColorMarkActive(editor, value)\n      }\n\n      editorSelection.current = editor.selection\n\n      if (focus) {\n        focusEditor(editor)\n      }\n    },\n    [editor, leafColorValue]\n  )\n\n  const handleCreateImage = useCallback(\n    (value: ImageProps) => {\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      insertImageBlock(editor, value)\n      focusEditor(editor)\n    },\n    [editor]\n  )\n\n  const handleCreateEditableImage = useCallback(\n    (value: ImageDimensions, label: string) => {\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      insertImageBlock(editor, { dimensions: value, label }, true)\n      focusEditor(editor)\n    },\n    [editor]\n  )\n\n  const handleCreateEditable = useCallback(\n    (value: EditableAttributes, isOrphan = false) => {\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      if (isOrphan) {\n        const editableNode = createEditableNode(value, true)\n        setOrphanNodes((o) => [editableNode, ...o])\n      } else {\n        insertEditableBlock(editor, value)\n      }\n\n      focusEditor(editor)\n    },\n    [editor, setOrphanNodes]\n  )\n\n  const handleSetConditionActive = useCallback(\n    (value: EditableRefAttributes) => {\n      if (notNil(editorSelection.current)) {\n        Transforms.select(editor, editorSelection.current)\n      }\n\n      setConditionActive(editor, value)\n      focusEditor(editor)\n    },\n    [editor]\n  )\n\n  const handlePressTextSize = useMouseDown(() => {\n    textSizePopup.open()\n  })\n\n  const handlePressColor = useMouseDown(() => {\n    editorSelection.current = editor.selection\n    colorPopup.open()\n  })\n\n  const handlePressImage = useMouseDown(() => {\n    editorSelection.current = editor.selection\n    imagePopup.open()\n  })\n\n  const handlePressEditableImage = useMouseDown(() => {\n    editorSelection.current = editor.selection\n    imageSizePopup.open()\n  })\n\n  const handlePressInsertEditable = useMouseDown(() => {\n    editorSelection.current = editor.selection\n    editablePopup.open()\n  })\n\n  const handlePressInsertTable = useMouseDown(() => {\n    insertTableBlock(editor)\n  })\n\n  const handlePressCondition = useMouseDown(() => {\n    if (conditionActive) {\n      unsetConditionActive(editor)\n      return\n    }\n\n    editorSelection.current = editor.selection\n    conditionPopup.open()\n  })\n\n  const handlePressInlineFormat = useCallback(\n    (format: LeafFormatType) => {\n      toggleMarkActive(editor, format)\n    },\n    [editor]\n  )\n\n  const handlePressAlignment = useCallback(\n    (value?: BlockAlignment) => {\n      setAlignment(editor, value)\n    },\n    [editor]\n  )\n\n  const handlePressIncreaseIndentation = useCallback(() => {\n    increaseIndentation(editor)\n  }, [editor])\n\n  const handlePressDecreaseIndentation = useCallback(() => {\n    decreaseIndentation(editor)\n  }, [editor])\n\n  const handlePressNumberedList = useCallback(() => {\n    toggleBlockActive(editor, 'numbered-list')\n  }, [editor])\n\n  const handlePressBulletedList = useCallback(() => {\n    toggleBlockActive(editor, 'bulleted-list')\n  }, [editor])\n\n  const handlePressUndo = useCallback(() => {\n    HistoryEditor.undo(editor)\n  }, [editor])\n\n  const handlePressRedo = useCallback(() => {\n    HistoryEditor.redo(editor)\n  }, [editor])\n\n  return (\n    <Fragment>\n      <div className='border-t border-b border-solid border-gray-300 py-20 px-60 bg-blue-50 flex items-center divide-x divide-gray-300 text-gray-500'>\n        <div className='font-medium flex items-center'>\n          <div\n            ref={textSizePopupAnchorRef}\n            className='flex items-center w-144 space-x-4 flex-1'\n            onMouseDown={handlePressTextSize}\n          >\n            <Icon>\n              <MdFormatSize />\n            </Icon>\n            <span className='flex-1 cursor-pointer transition-colors duration-250 hover:text-blue-500'>\n              {textSizeValue?.label || 'Normal'}\n            </span>\n          </div>\n          <div\n            ref={colorPopupAnchorRef}\n            className={classnames(\n              's-28 cursor-pointer border-2 border-solid border-white mx-16 rounded-full shadow-2 transition-colors duration-250',\n              {\n                'bg-black': nil(leafColorValue)\n              }\n            )}\n            style={{ backgroundColor: leafColorValue }}\n            onMouseDown={handlePressColor}\n          />\n        </div>\n        <IconGroup>\n          <IconButton\n            data='bold'\n            tip='Bold'\n            active={isMarkActive(editor, 'bold')}\n            onPress={handlePressInlineFormat}\n          >\n            <MdFormatBold />\n          </IconButton>\n          <IconButton\n            data='italic'\n            tip='Italic'\n            active={isMarkActive(editor, 'italic')}\n            onPress={handlePressInlineFormat}\n          >\n            <MdFormatItalic />\n          </IconButton>\n          <IconButton\n            data='underline'\n            tip='Underline'\n            active={isMarkActive(editor, 'underline')}\n            onPress={handlePressInlineFormat}\n          >\n            <MdFormatUnderlined />\n          </IconButton>\n          <IconButton\n            data='strikethrough'\n            tip='Strikethrough'\n            active={isMarkActive(editor, 'strikethrough')}\n            onPress={handlePressInlineFormat}\n          >\n            <MdFormatStrikethrough />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Align left'\n            active={nil(alignmentValue) || alignmentValue === ALIGNMENTS.left}\n            onPress={handlePressAlignment}\n          >\n            <MdFormatAlignLeft />\n          </IconButton>\n          <IconButton\n            data='center'\n            tip='Align center'\n            active={alignmentValue === ALIGNMENTS.center}\n            onPress={handlePressAlignment}\n          >\n            <MdFormatAlignCenter />\n          </IconButton>\n          <IconButton\n            data='right'\n            tip='Align right'\n            active={alignmentValue === ALIGNMENTS.right}\n            onPress={handlePressAlignment}\n          >\n            <MdFormatAlignRight />\n          </IconButton>\n          <IconButton\n            data='justify'\n            tip='Justify'\n            active={alignmentValue === ALIGNMENTS.justify}\n            onPress={handlePressAlignment}\n          >\n            <MdFormatAlignJustify />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Decrease indent'\n            onPress={handlePressDecreaseIndentation}\n          >\n            <MdFormatIndentDecrease />\n          </IconButton>\n          <IconButton\n            tip='Increase indent'\n            onPress={handlePressIncreaseIndentation}\n          >\n            <MdFormatIndentIncrease />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Numbered list'\n            active={isBlockActive(editor, 'numbered-list')}\n            onPress={handlePressNumberedList}\n          >\n            <MdFormatListNumbered />\n          </IconButton>\n          <IconButton\n            tip='Bulleted list'\n            active={isBlockActive(editor, 'bulleted-list')}\n            onPress={handlePressBulletedList}\n          >\n            <MdFormatListBulleted />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Insert an image'\n            ref={imagePopupAnchorRef}\n            active={imagePopup.visible}\n            onPress={handlePressImage}\n          >\n            <RiImage2Fill />\n          </IconButton>\n          <IconButton tip='Insert a table' onPress={handlePressInsertTable}>\n            <AiOutlineTable />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton\n            tip='Insert an editable image'\n            ref={imageSizePopupAnchorRef}\n            active={imageSizePopup.visible}\n            onPress={handlePressEditableImage}\n            className='border border-dotted border-gray-500'\n          >\n            <RiImageEditFill />\n          </IconButton>\n          <IconButton\n            tip='Insert editable content'\n            active={editablePopup.visible}\n            className='border border-dotted border-gray-500'\n            onPress={handlePressInsertEditable}\n          >\n            <MdTextFields />\n          </IconButton>\n          <IconButton\n            tip='Add a display condition'\n            ref={conditionPopupAnchorRef}\n            active={conditionActive || conditionPopup.visible}\n            onPress={handlePressCondition}\n            className='border border-dotted border-gray-500'\n          >\n            <MdTransform />\n          </IconButton>\n        </IconGroup>\n        <IconGroup>\n          <IconButton tip='Undo' onPress={handlePressUndo} disabled={!canUndo}>\n            <GrUndo />\n          </IconButton>\n          <IconButton tip='Redo' onPress={handlePressRedo} disabled={!canRedo}>\n            <GrRedo />\n          </IconButton>\n        </IconGroup>\n        <div className='flex flex-1 items-center justify-end border-none'>\n          <IconButton\n            tip='Open Icebox'\n            ref={orphanNodesPopupAnchorRef}\n            active={orphanNodesPopup.visible}\n            onPress={orphanNodesPopup.open}\n          >\n            <FiInbox />\n          </IconButton>\n        </div>\n      </div>\n      <TextSizePopup\n        anchorRef={textSizePopupAnchorRef}\n        isVisible={textSizePopup.visible}\n        value={textSizeValue?.name}\n        onPressOption={handleChangeTextSizeOption}\n        onRequestClose={textSizePopup.close}\n      />\n      <ColorPopup\n        anchorRef={colorPopupAnchorRef}\n        isVisible={colorPopup.visible}\n        value={leafColorValue}\n        onChangeColorOption={handleChangeColorOption}\n        onRequestClose={colorPopup.close}\n      />\n      <ImagePopup\n        anchorRef={imagePopupAnchorRef}\n        isVisible={imagePopup.visible}\n        onRequestClose={imagePopup.close}\n        onSubmitEditing={handleCreateImage}\n      />\n      <ImageSizePopup\n        anchorRef={imageSizePopupAnchorRef}\n        isVisible={imageSizePopup.visible}\n        onRequestClose={imageSizePopup.close}\n        onSubmitEditing={handleCreateEditableImage}\n      />\n      <EditablePopupProps\n        isVisible={editablePopup.visible}\n        onRequestClose={editablePopup.close}\n        onSubmit={handleCreateEditable}\n      />\n      <ConditionPopup\n        anchorRef={conditionPopupAnchorRef}\n        isVisible={conditionPopup.visible}\n        onRequestClose={conditionPopup.close}\n        onSubmitEditing={handleSetConditionActive}\n      />\n      <OrphanNodesPopup\n        anchorRef={orphanNodesPopupAnchorRef}\n        isVisible={orphanNodesPopup.visible}\n        onRequestClose={orphanNodesPopup.close}\n      />\n    </Fragment>\n  )\n}\n\nexport default Toolbar\n","import { Editor, Element as SlateElement, Text, Transforms } from 'slate'\n\nimport { ReactEditor } from 'slate-react'\nimport { jsx } from 'slate-hyperscript'\n\nconst ELEMENT_TAGS = {\n  A: (element: Element) => ({\n    type: 'link',\n    url: element.getAttribute('href')\n  }),\n  BLOCKQUOTE: () => ({ type: 'quote' }),\n  H1: () => ({ type: 'heading-one' }),\n  H2: () => ({ type: 'heading-two' }),\n  H3: () => ({ type: 'heading-three' }),\n  H4: () => ({ type: 'heading-four' }),\n  H5: () => ({ type: 'heading-five' }),\n  H6: () => ({ type: 'heading-six' }),\n  IMG: (element: Element) => ({\n    type: 'image',\n    url: element.getAttribute('src')\n  }),\n  LI: () => ({ type: 'list-item' }),\n  OL: () => ({ type: 'numbered-list' }),\n  P: () => {\n    return { type: 'paragraph' }\n  },\n  PRE: () => ({ type: 'code' }),\n  UL: () => ({ type: 'bulleted-list' }),\n  TABLE: () => ({ type: 'table' }),\n  TH: () => ({ type: 'table-row' }),\n  TR: () => ({ type: 'table-row' }),\n  TD: () => ({ type: 'table-cell' })\n}\n\nconst TEXT_TAGS = {\n  CODE: () => ({ code: true }),\n  DEL: () => ({ strikethrough: true }),\n  EM: () => ({ italic: true }),\n  I: () => ({ italic: true }),\n  S: () => ({ strikethrough: true }),\n  STRONG: () => ({ bold: true }),\n  U: () => ({ underline: true })\n}\n\nconst getMappedAttributes = (node: ChildNode) => {\n  const { nodeName } = node\n\n  if (nodeName === 'BODY') {\n    return {}\n  }\n\n  if (ELEMENT_TAGS[nodeName]) {\n    return ELEMENT_TAGS[nodeName](node)\n  }\n\n  if (TEXT_TAGS[nodeName]) {\n    return TEXT_TAGS[nodeName](node)\n  }\n\n  return null\n}\n\nconst getTagName = (node: ChildNode) => {\n  const { nodeName } = node\n\n  if (nodeName === 'BODY') {\n    return 'fragment'\n  }\n\n  if (ELEMENT_TAGS[nodeName]) {\n    return 'element'\n  }\n\n  if (TEXT_TAGS[nodeName]) {\n    return 'text'\n  }\n\n  return null\n}\n\nconst getChildNodes = (node: ChildNode) => {\n  if (node.nodeName === 'TABLE') {\n    const childNodes: Array<ChildNode> = []\n\n    node.childNodes.forEach((o) => {\n      const { nodeName } = o\n\n      if (['THEAD', 'TBODY'].includes(nodeName)) {\n        childNodes.push(...o.childNodes)\n      } else {\n        childNodes.push(o)\n      }\n    })\n  }\n\n  return Array.from(node.childNodes)\n}\n\nexport const deserializeHTMLNew = (node: ChildNode) => {\n  const { nodeType, nodeName, textContent } = node\n  const validNodeTypes = [1, 3]\n\n  if (!validNodeTypes.includes(nodeType)) {\n    return null\n  }\n\n  if (nodeType === 3) {\n    const sanitized = textContent.replace(/\\n/g, ' ')\n    const result = sanitized.trim().length ? sanitized : null\n    return result\n  }\n\n  if (nodeName === 'BR') {\n    return '\\n'\n  }\n\n  const tagName = getTagName(node)\n  const attrs = getMappedAttributes(node)\n  const childNodes = getChildNodes(node)\n  const deserializedChildren = childNodes\n    .map((o) => deserializeHTMLNew(o))\n    .flat()\n\n  if (!tagName) {\n    return deserializedChildren\n  }\n\n  if (!deserializedChildren.length) {\n    return null\n  }\n\n  return jsx(tagName, attrs, deserializedChildren)\n}\n\nexport const deserializeHTML = (el: ChildNode) => {\n  if (el.nodeType === 3) {\n    const sanitized = el.textContent.replace(/\\n/g, ' ')\n    const result = sanitized.trim().length ? sanitized : null\n    return result\n  } else if (el.nodeType !== 1) {\n    return null\n  } else if (el.nodeName === 'BR') {\n    return '\\n'\n  }\n\n  const { nodeName } = el\n  let parent = el\n\n  if (\n    nodeName === 'PRE' &&\n    el.childNodes[0] &&\n    el.childNodes[0].nodeName === 'CODE'\n  ) {\n    parent = el.childNodes[0]\n  }\n\n  const children = Array.from(parent.childNodes).map(deserializeHTML).flat()\n\n  if (el.nodeName === 'BODY') {\n    return jsx('fragment', {}, children)\n  }\n\n  if (ELEMENT_TAGS[nodeName]) {\n    const attrs = ELEMENT_TAGS[nodeName](el)\n    return jsx('element', attrs, children)\n  }\n\n  if (TEXT_TAGS[nodeName]) {\n    const attrs = TEXT_TAGS[nodeName](el)\n    return children.map((child) => jsx('text', attrs, child))\n  }\n\n  return children\n}\n\nconst wrapTopLevelInlineNodesInParagraphs = (editor, fragment) => {\n  let inlineNodes = []\n  const newFragments = []\n\n  const maybePushInlineNodeParagraph = () => {\n    if (inlineNodes.length > 0) {\n      newFragments.push(jsx('element', { type: 'paragraph' }, inlineNodes))\n      inlineNodes = []\n    }\n  }\n\n  fragment.forEach((node) => {\n    if (Text.isText(node) || Editor.isInline(editor, node)) {\n      inlineNodes.push(node)\n    } else {\n      maybePushInlineNodeParagraph()\n      newFragments.push(node)\n    }\n  })\n  maybePushInlineNodeParagraph()\n\n  return newFragments\n}\n\nexport const withHTML = (editor: Editor & ReactEditor) => {\n  const { insertData, isInline, isVoid } = editor\n\n  editor.isInline = (element: SlateElement) => {\n    return ['link', 'image'].includes(element.type as string)\n      ? true\n      : isInline(element)\n  }\n\n  editor.isVoid = (element) => {\n    return element.type === 'image' ? true : isVoid(element)\n  }\n\n  editor.insertData = (data) => {\n    const html = data.getData('text/html')\n\n    if (html) {\n      const parsed = new DOMParser().parseFromString(html, 'text/html')\n      const fragment = deserializeHTML(parsed.body)\n      let fragmentWithOnlyBlocks = fragment\n      if (Array.isArray(fragment)) {\n        fragmentWithOnlyBlocks = wrapTopLevelInlineNodesInParagraphs(\n          editor,\n          fragment\n        )\n      }\n      Transforms.insertFragment(editor, fragmentWithOnlyBlocks)\n      return\n    }\n\n    insertData(data)\n  }\n\n  return editor\n}\n","import { Editor, NodeEntry, Path, Range, Transforms } from 'slate'\nimport { createTableContent, insertParagraph, isInSameTable } from '../tools'\n\nimport { ReactEditor } from 'slate-react'\n\nexport const PreserveSpaceAfter = new Set<any>(['table'])\n\nexport const PreserveSpaceBefore = new Set<any>(['table'])\n\nconst shouldPreserveSpace = (\n  editor: Editor & ReactEditor,\n  entry: NodeEntry\n): boolean | void => {\n  const [node, path] = entry\n  const { type } = node\n  let preserved = false\n\n  if (PreserveSpaceAfter.has(type)) {\n    const next = Editor.next(editor, { at: path })\n    if (!next || PreserveSpaceBefore.has(next[0].type)) {\n      insertParagraph(editor, Path.next(path))\n      preserved = true\n    }\n  }\n\n  if (PreserveSpaceBefore.has(type)) {\n    if (path[path.length - 1] === 0) {\n      insertParagraph(editor, path)\n      preserved = true\n    } else {\n      const prev = Editor.previous(editor, { at: path })\n      if (!prev || PreserveSpaceAfter.has(prev[0].type)) {\n        insertParagraph(editor, path)\n        preserved = true\n      }\n    }\n  }\n\n  return preserved\n}\n\nexport const withTable = (editor: Editor & ReactEditor) => {\n  const { addMark, removeMark, deleteBackward, deleteFragment } = editor\n\n  editor.addMark = (key, value) => {\n    if (editor.selection) {\n      const lastSelection = editor.selection\n\n      const selectedCells = Editor.nodes(editor, {\n        match: (n) => n.selectedCell as any,\n        at: []\n      })\n\n      let isTable = false\n\n      for (const cell of selectedCells) {\n        if (!isTable) {\n          isTable = true\n        }\n\n        const [content] = Editor.nodes(editor, {\n          match: (n) => n.type === 'table-content',\n          at: cell[1]\n        })\n\n        if (Editor.string(editor, content[1]) !== '') {\n          Transforms.setSelection(editor, Editor.range(editor, cell[1]))\n          addMark(key, value)\n        }\n      }\n\n      if (isTable) {\n        Transforms.select(editor, lastSelection)\n        return\n      }\n    }\n\n    addMark(key, value)\n  }\n\n  editor.removeMark = (key) => {\n    if (editor.selection) {\n      const lastSelection = editor.selection\n      const selectedCells = Editor.nodes(editor, {\n        match: (n) => {\n          return n.selectedCell as any\n        },\n        at: []\n      })\n\n      let isTable = false\n      for (const cell of selectedCells) {\n        if (!isTable) {\n          isTable = true\n        }\n\n        const [content] = Editor.nodes(editor, {\n          match: (n) => n.type === 'table-content',\n          at: cell[1]\n        })\n\n        if (Editor.string(editor, content[1]) !== '') {\n          Transforms.setSelection(editor, Editor.range(editor, cell[1]))\n          removeMark(key)\n        }\n      }\n\n      if (isTable) {\n        Transforms.select(editor, lastSelection)\n        return\n      }\n    }\n    removeMark(key)\n  }\n\n  editor.deleteFragment = (...args) => {\n    if (editor.selection && isInSameTable(editor)) {\n      const selectedCells = Editor.nodes(editor, {\n        match: (n) => {\n          return n.selectedCell as any\n        }\n      })\n\n      for (const cell of selectedCells) {\n        Transforms.setSelection(editor, Editor.range(editor, cell[1]))\n\n        const [content] = Editor.nodes(editor, {\n          match: (n) => n.type === 'table-content'\n        })\n\n        Transforms.insertNodes(editor, createTableContent(), { at: content[1] })\n        Transforms.removeNodes(editor, { at: Path.next(content[1]) })\n      }\n\n      return\n    }\n\n    Transforms.removeNodes(editor, {\n      match: (n) => n.type === 'table'\n    })\n\n    deleteFragment(...args)\n  }\n\n  editor.deleteBackward = (...args) => {\n    const { selection } = editor\n\n    if (selection && Range.isCollapsed(selection)) {\n      const isInTable = Editor.above(editor, {\n        match: (n) => n.type === 'table'\n      })\n\n      if (isInTable) {\n        const start = Editor.start(editor, selection)\n        const isStart = Editor.isStart(editor, start, selection)\n\n        const currCell = Editor.above(editor, {\n          match: (n) => n.type === 'table-cell'\n        })\n\n        if (isStart && currCell && !Editor.string(editor, currCell[1])) {\n          return\n        }\n      }\n    }\n\n    deleteBackward(...args)\n  }\n\n  return editor\n}\n\nexport const withSchema = (editor: Editor & ReactEditor) => {\n  const { normalizeNode } = editor\n\n  editor.normalizeNode = (entry) => {\n    if (shouldPreserveSpace(editor, entry)) return\n\n    normalizeNode(entry)\n  }\n\n  return withTable(editor)\n}\n","import 'tailwindcss/tailwind.css'\n\nimport { DocmakerData, SlateEditorType, toggleMarkActive } from './core/tools'\nimport { Editable, Slate, withReact } from 'slate-react'\nimport { Node, createEditor } from 'slate'\nimport React, {\n  KeyboardEvent,\n  useCallback,\n  useMemo,\n  useRef,\n  useState\n} from 'react'\nimport { stripHTMLEntities, toDate } from './core/utils'\n\nimport { HOT_KEYS } from './core/constants'\nimport Header from './modules/header'\nimport OrphanNodesContext from './core/contexts/orphan-nodes'\nimport TemplateEditor from './modules/template-editor'\nimport TemplateElement from './modules/template-element'\nimport TemplateLeaf from './modules/template-leaf'\nimport Toolbar from './modules/toolbar'\nimport classnames from 'classnames'\nimport isHotkey from 'is-hotkey'\nimport { withEditable } from './core/plugins/editable'\nimport { withHTML } from './core/plugins/paste-html'\nimport { withHistory } from 'slate-history'\nimport { withSchema } from './core/plugins/table'\n\ninterface Props {\n  className?: string\n  initialValue?: DocmakerData\n  onSubmitChanges?: (data: DocmakerData) => void\n}\n\nexport const DocmakerEditor = ({\n  className,\n  initialValue,\n  onSubmitChanges\n}: Props) => {\n  const initialData = useRef(initialValue || ({} as DocmakerData)).current\n  const editor = useMemo(\n    () =>\n      withSchema(\n        withHTML(withEditable(withReact(withHistory(createEditor()))))\n      ),\n    []\n  )\n  const createdAt = useRef(toDate(initialData.createdAt).toISOString()).current\n\n  const [title, setTitle] = useState(initialData.title || '')\n  const [orphanNodes, setOrphanNodes] = useState<Array<Node>>(\n    initialData.orphans || []\n  )\n  const [editorState, setEditorState] = useState<Array<Node>>(\n    initialData.nodes?.length\n      ? initialData.nodes\n      : [\n          {\n            type: 'paragraph',\n            children: [{ text: '' }]\n          }\n        ]\n  )\n\n  const renderElement = useCallback(\n    (props) => <TemplateElement {...props} />,\n    []\n  )\n\n  const renderLeaf = useCallback((props) => <TemplateLeaf {...props} />, [])\n\n  const handleEditorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      for (const hotkey in HOT_KEYS) {\n        if (isHotkey(hotkey, event as any)) {\n          event.preventDefault()\n          const mark = HOT_KEYS[hotkey]\n          toggleMarkActive(editor as SlateEditorType, mark)\n        }\n      }\n    },\n    [editor]\n  )\n\n  const handlePressSave = useCallback(() => {\n    onSubmitChanges?.({\n      title: stripHTMLEntities(title),\n      createdAt,\n      nodes: editorState as any,\n      orphans: orphanNodes as any\n    })\n  }, [onSubmitChanges, title, createdAt, editorState, orphanNodes])\n\n  return (\n    <div className={classnames('font-sans', className)}>\n      <OrphanNodesContext.Provider value={[orphanNodes, setOrphanNodes]}>\n        <Slate editor={editor} value={editorState} onChange={setEditorState}>\n          <div className='sticky top-0'>\n            <Header\n              title={title}\n              createdAt={createdAt}\n              onChangeTitle={setTitle}\n              onPressSave={handlePressSave}\n            />\n            <Toolbar />\n          </div>\n          <TemplateEditor>\n            <Editable\n              spellCheck\n              placeholder='Start typing...'\n              renderElement={renderElement}\n              renderLeaf={renderLeaf}\n              onKeyDown={handleEditorKeydown}\n            />\n          </TemplateEditor>\n          <div id='docmaker-modal-root' />\n        </Slate>\n      </OrphanNodesContext.Provider>\n    </div>\n  )\n}\n","import { Editor, Element as SlateElement } from 'slate'\nimport { ReactEditor } from 'slate-react'\n\nexport const withEditable = (editor: Editor & ReactEditor) => {\n  const { isInline, isVoid } = editor\n\n  editor.isInline = (element: SlateElement) => {\n    return element.type === 'editable' ? true : isInline(element)\n  }\n\n  editor.isVoid = (element: SlateElement) => {\n    return element.type === 'editable' ? true : isVoid(element)\n  }\n\n  return editor\n}\n","import React from 'react'\n\nimport { DocmakerEditor } from 'react-docmaker'\nimport 'react-docmaker/dist/index.css'\n\nconst App = () => {\n  return <DocmakerEditor onSubmitChanges={console.log} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}